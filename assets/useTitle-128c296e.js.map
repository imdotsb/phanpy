{"version":3,"mappings":"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","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getCurrentAccount","currentAccount","session","get","getCurrentAccountNS","account","instanceURL","saveAccount","acc","vapidKey","push","setJSON","set","updateAccount","accountInfo","displayName","avatar","avatar_static","currentInstance","getCurrentInstance","instances","instance","toLowerCase","e","console","key","localStorage","getItem","JSON","value","warn","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","window","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","url","client","createClient","disableVersionCheck","timeout","__instance__","initInstance","masto","v2","fetch","v1","uri","urls","streamingApi","domain","configuration","streaming","mastoAccount","initAccount","preferences","initPreferences","api","accountID","_a","authenticated","Error","_b","states","proxy","appVersion","prevLocation","currentLocation","statuses","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","reloadGenericAccounts","counter","spoilers","scrollPositions","unfurledLinks","statusQuotes","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","showKeyboardShortcutsHelp","showGenericAccounts","showMediaAlt","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","cloakMode","initStates","subscribeKey","v","subscribe","changes","prevValue","path","hideAllModals","statusKey","getStatus","statusID","saveStatus","status","opts","skipThreading","override","Object","oldStatus","_pinned","_filtered","threadifyStatus","requestAnimationFrame","propInstance","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","Promise","setTimeout","mem","useInterval","fn","delay","deps","immediate","savedCallback","useRef","useEffect","current","setInterval","tick","clearInterval","openCompose","URL","location","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","SIZES","s","m","l","xl","xxl","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","bus","link","history","share","sparkles","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","chart","react","layout4","layout5","announce","alert","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","Icon","icon","size","alt","title","class","className","style","iconSize","iconBlock","rotate","flip","Array","isArray","iconData","setIconData","useState","default","_jsx","display","overflow","lineHeight","children","viewBox","dangerouslySetInnerHTML","__html","body","transform","$modalContainer","document","getElementById","Modal","onClose","onClick","modalRef","timer","focusElement","querySelector","focus","clearTimeout","escRef","useHotkeys","enabled","ref","node","target","currentTarget","tabIndex","onFocus","createPortal","Loader","abrupt","hidden","props","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","Avatar","squircle","avatarRef","isMissing","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","drawImage","allPixels","getImageData","hasAlpha","pixel","i","length","classList","add","clearRect","Link","forwardRef","routerLocation","useLocation","hash","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","encodeURIComponent","join","pathname","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","Menu","menuRef","_jsxs","instanceRef","openTrigger","direction","gap","shift","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","EmojiText","text","emojis","indexOf","regex","RegExp","shortcode","elements","split","word","emoji","staticUrl","srcset","media","NameText","showAvatar","showAcct","short","acct","avatarStatic","username","_","acct1","acct2","match","trimmedUsername","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","localeCompare","sensitivity","preventDefault","_Fragment","memo","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","Intl","DateTimeFormat","RelativeTime","datetime","format","date","dateStr","setDateStr","raf","update","str","now","diff","year","twitter","toDate","fromNow","cancelAnimationFrame","toISOString","_localeMatch","args","localeMatch","cacheKey","locales","resolvedOptions","locale","navigator","languages","getTranslateTargetLanguage","fromSettings","translationTargetLanguages","code","localeCode2Text","DisplayNames","type","of","_showToast","showToast","rest","toast","Toastify","destination","gravity","position","emojifyText","forEach","fauxDiv","whitelistLinkClasses","enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","links","usernames","innerText","hasChildren","u","d","slice","textNodes","extractTextNodes","html","nodeValue","nodes","childNodes","replaceWith","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","niceDateTime","hideTime","formatOpts","Date","currentYear","getFullYear","month","day","hour","minute","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","internal","showActivity","showStats","accountInstance","hideDisplayName","statusesCount","lastStatusAt","fields","note","verifiedField","f","verifiedAt","supportsCache","supports","feature","version","range","features","satisfies","includePrerelease","loose","throttle","pThrottle","limit","interval","LINGVA_INSTANCES","currentLingvaInstance","lingvaTranslate","source","pRetry","fetchCall","res","provider","translation","detectedSourceLanguage","detectedSource","retries","log","throttledLingvaTranslate","TranslationBlock","sourceLanguage","forceTranslate","onTranslate","mini","uiState","setUIState","targetLang","setTranslatedContent","pronunciationContent","detailsRef","translatedContent","sourceLangText","targetLangText","apiSourceLang","error","detectedLangText","setDetectedLang","pronunciation","query","setPronunciationContent","detectedLang","lang","dir","sourceLanguages","name","draftsStore","createStore","drafts","val","getMany","keys","delMany","clear","db","visibilityIconsMap","public","unlisted","private","direct","Poll","readOnly","votePoll","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","marginLeft","htmlContentLength","isMastodonLinkMaybe","root","documentElement","getComputedStyle","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","safeBoundingBoxPadding","paddings","CSS","addEventListener","passive","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","isSafari","userAgent","dataAltLabel","AltBadge","MEDIA_CAPTION_LIMIT","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalBackgroundPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","containerProps","useMemo","isVideoMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","mode","backgroundImage","backgroundSize","QuickPinchZoom","backgroundColor","backgroundPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","controls","autoplay","MenuLink","FocusableItem","closeMenu","detail","INLINE_TRANSLATE_LIMIT","fetchAccount","reject","memFetchAccount","visibilityText","Status","withinContext","contentTextWeight","enableTranslate","_forceTranslate","allowFilters","onMediaClick","quoted","onStatusLinkClick","sameInstance","sKey","snapStates","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","language","editedAt","filtered","card","createdAt","reblog","_deleted","debugHover","createdAtDate","editedAtDate","inReplyToAccountRef","isSelf","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","prefs","showSpoiler","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showReactions","setShowReactions","readMoreText","statusRef","spoilerContentRef","contentRef","mediaContainerRef","textWeight","editedDateText","mediaNoDesc","replyToStatus","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","favouriteStatus","bookmarkStatus","differentLanguage","menuInstanceRef","MenuHeader","StatusMenuItems","createdDateText","MenuDivider","done","replyStatus","setForceTranslate","nicePostURL","editStatus","cachedStatus","setIsContextMenuOpen","contextMenuAnchorPoint","setContextMenuAnchorPoint","isIOS","bindLongPressContext","useLongPress","clientX","clientY","contextMenuRef","isContextMenuOpen","showContextMenu","hotkeysEnabled","rRef","fRef","dRef","confirmBoostStatus","bRef","showMultipleMediaCaptions","displayedMediaAttachments","nodeRef","canBoost","state","portal","url2","result","removeAttribute","unfurlMastodonLink","QuoteStatuses","newPoll","pollResponse","vote","MultipleMediaFigure","Card","StatusButton","checked","count","EditedAtModal","ReactionsModal","captionChildren","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","blurhashImage","setCardStatusURL","imageData","blurhashPixels","w","putImageData","videoID","fetchStatusHistory","editHistory","setEditHistory","editHistory2","REACTIONS_LIMIT","setAccounts","showMore","setShowMore","reblogIterator","favouriteIterator","fetchAccounts","firstLoad","favouriteResults","reblogResults","_c","theAccount","_types","InView","favourite","onChange","inView","setButtonTitle","buttonTitle","iconAlt","hours","seconds","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapshot","padStart","remoteInstanceFetch","theURL","urlObj","statusMatch","instanceRegex","resolve","debug","mastoSearchFetch","results","handleFulfill","instance2","then","selfURL","handleCatch","host","restPath","filterInfo","isReblog","filterTitleStr","setShowPeek","bindLongPressPeek","statusPeekText","showPeek","statusPeekRef","uniqueQuotes","quotes","q","arr","q2","level","supportedLanguagesMap","supportedLanguages","reduce","common","native","expiryOptions","expirySeconds","values","oneDay","expiresInFromExpiresAt","delta","getTime","role","windowMargin","observer","IntersectionObserver","entry","isIntersecting","boundingClientRect","innerWidth","observe","DEFAULT_LANG","urlRegexObj","urlRegex","flags","usernameRegex","urlPlaceholder","countableText","inputText","Compose","draftStatus","standalone","hasOpener","UID","maxMediaAttachments","charactersReservedPerUrl","maxCharacters","imageSizeLimit","imageMatrixLimit","supportedMimeTypes","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxCharactersPerOption","maxExpiration","maxOptions","minExpiration","spoilerTextRef","textareaRef","prevLanguage","setMediaAttachments","setLanguage","oninputTextarea","focusTextarea","dispatchEvent","visibility2","language2","sensitive2","currentAccountInfo","allMentions","setSensitive","poll2","expiresIn","statusSource","mediaAttachments2","setVisibility","setPoll","composablePoll","beforeUnloadCopy","hasMediaAttachments","canClose","hasOnlyAcct","confirmClose","hasIDMediaAttachments","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","escDownRef","prevBackgroundDraft","draftKey","saveUnsavedDraft","equal","backgroundDraft","handleItems","item","items","i2","file","files","allowedFiles","updatedAt","mediaFiles","handleDragover","showEmoji2Picker","setShowEmoji2Picker","passData","createObjectURL","dataTransfer","removeEventListener","opener","formRef","pointerEvents","opacity","mediaPromises","params2","removeNullUndefined","some","hasNoDescriptions","params","reason","e2","media_attributes","in_reply_to_id","Textarea","attachments","newAttachments","j","fileID","required","onInput","accept","CharCountMeter","codeA","commonA","codeB","commonB","CustomEmojisModal","selectionEnd","textarea","newText","selectionStart","emojiWithSpace","sort","clientHeight","offset","performSearch","textareaProps","customEmojis","textExpanderTextRef","handleChange","handleValue","handleCommited","textExpanderRef","provide","text2","displayNameWithEmoji","encodeHTML","matched","input","searchResults","lastLine","postSpaces","anything","newBullet","number","preSpaces","pos","setText","charCount","leftChars","autoCorrect","rows","onRemove","setRangeText","setSelectionRange","suffixType","autoResizeTextarea","showModal","descTextarea","setDescription","debouncedOnDescriptionChange","MediaAttachment","setShowModal","supportsEdit","placeholder","filterShortcodes","searchTerm","aLower","splice","bStartsWith","bLower","bContains","aStartsWith","b","aContains","char","obj","customEmojisList","setCustomEmojis","emojisCat","othersCat","bothStartWith","category","recentlyUsedCustomEmojis","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","VITE_CLIENT_NAME","CLIENT_NAME","import","useTitle","setTitle","hasPaths","paths","matchPath"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/states.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/icon.jsx","../../src/components/modal.jsx","../../src/components/loader.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/components/menu-confirm.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/show-toast.js","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/utils/visibility-icons-map.js","../../src/components/poll.jsx","../../src/utils/html-content-length.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\r\n\r\nexport function getAccount(id) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.info.id === id) || accounts[0];\r\n}\r\n\r\nexport function getAccountByAccessToken(accessToken) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.accessToken === accessToken);\r\n}\r\n\r\nexport function getCurrentAccount() {\r\n  const currentAccount = store.session.get('currentAccount');\r\n  const account = getAccount(currentAccount);\r\n  return account;\r\n}\r\n\r\nexport function getCurrentAccountNS() {\r\n  const account = getCurrentAccount();\r\n  const {\r\n    instanceURL,\r\n    info: { id },\r\n  } = account;\r\n  return `${id}@${instanceURL}`;\r\n}\r\n\r\nexport function saveAccount(account) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === account.info.id);\r\n  if (acc) {\r\n    acc.info = account.info;\r\n    acc.instanceURL = account.instanceURL;\r\n    acc.accessToken = account.accessToken;\r\n    acc.vapidKey = account.vapidKey;\r\n  } else {\r\n    accounts.push(account);\r\n  }\r\n  store.local.setJSON('accounts', accounts);\r\n  store.session.set('currentAccount', account.info.id);\r\n}\r\n\r\nexport function updateAccount(accountInfo) {\r\n  // Only update if displayName or avatar or avatar_static is different\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\r\n  if (acc) {\r\n    if (\r\n      acc.info.displayName !== accountInfo.displayName ||\r\n      acc.info.avatar !== accountInfo.avatar ||\r\n      acc.info.avatar_static !== accountInfo.avatar_static\r\n    ) {\r\n      acc.info = {\r\n        ...acc.info,\r\n        ...accountInfo,\r\n      };\r\n      store.local.setJSON('accounts', accounts);\r\n    }\r\n  }\r\n}\r\n\r\nlet currentInstance = null;\r\nexport function getCurrentInstance() {\r\n  if (currentInstance) return currentInstance;\r\n  try {\r\n    const account = getCurrentAccount();\r\n    const instances = store.local.getJSON('instances');\r\n    const instance = account.instanceURL.toLowerCase();\r\n    return (currentInstance = instances[instance]);\r\n  } catch (e) {\r\n    console.error(e);\r\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\r\n    // Temporary fix for corrupted data\r\n    store.local.del('instances');\r\n    location.reload();\r\n    return {};\r\n  }\r\n}\r\n","import { getCurrentAccountNS } from './store-utils';\r\n\r\nconst local = {\r\n  get: (key) => {\r\n    try {\r\n      return localStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(local.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return localStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return local.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return localStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nconst session = {\r\n  get: (key) => {\r\n    try {\r\n      return sessionStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(session.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return sessionStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return session.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return sessionStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\n// Store with account namespace (id@domain.tld) <- uses id, not username\r\nconst account = {\r\n  get: (key) => {\r\n    try {\r\n      return local.getJSON(key)[getCurrentAccountNS()];\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      data[getCurrentAccountNS()] = value;\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      delete data[getCurrentAccountNS()];\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default { local, session, account };\r\n","import { createClient } from 'masto';\r\n\r\nimport store from './store';\r\nimport {\r\n  getAccount,\r\n  getAccountByAccessToken,\r\n  getCurrentAccount,\r\n  saveAccount,\r\n} from './store-utils';\r\n\r\n// Default *fallback* instance\r\nconst DEFAULT_INSTANCE = 'mastodon.social';\r\n\r\n// Per-instance masto instance\r\n// Useful when only one account is logged in\r\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\r\n// E.g. apis['mastodon.social']\r\nconst apis = {};\r\n\r\n// Per-account masto instance\r\n// Note: There can be many accounts per instance\r\n// Useful when multiple accounts are logged in or when certain actions require a specific account\r\n// Just in case if I need this one day.\r\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\r\nconst accountApis = {};\r\nwindow.__ACCOUNT_APIS__ = accountApis;\r\n\r\n// Current account masto instance\r\nlet currentAccountApi;\r\n\r\nexport function initClient({ instance, accessToken }) {\r\n  if (/^https?:\\/\\//.test(instance)) {\r\n    instance = instance\r\n      .replace(/^https?:\\/\\//, '')\r\n      .replace(/\\/+$/, '')\r\n      .toLowerCase();\r\n  }\r\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\r\n\r\n  const client = createClient({\r\n    url,\r\n    accessToken, // Can be null\r\n    disableVersionCheck: true, // Allow non-Mastodon instances\r\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\r\n  });\r\n  client.__instance__ = instance;\r\n\r\n  apis[instance] = client;\r\n  if (!accountApis[instance]) accountApis[instance] = {};\r\n  if (accessToken) accountApis[instance][accessToken] = client;\r\n\r\n  return client;\r\n}\r\n\r\n// Get the instance information\r\n// The config is needed for composing\r\nexport async function initInstance(client, instance) {\r\n  const masto = client;\r\n  // Request v2, fallback to v1 if fail\r\n  let info;\r\n  try {\r\n    info = await masto.v2.instance.fetch();\r\n  } catch (e) {}\r\n  if (!info) {\r\n    try {\r\n      info = await masto.v1.instances.fetch();\r\n    } catch (e) {}\r\n  }\r\n  if (!info) return;\r\n  console.log(info);\r\n  const {\r\n    // v1\r\n    uri,\r\n    urls: { streamingApi } = {},\r\n    // v2\r\n    domain,\r\n    configuration: { urls: { streaming } = {} } = {},\r\n  } = info;\r\n  const instances = store.local.getJSON('instances') || {};\r\n  if (uri || domain) {\r\n    instances[\r\n      (domain || uri)\r\n        .replace(/^https?:\\/\\//, '')\r\n        .replace(/\\/+$/, '')\r\n        .toLowerCase()\r\n    ] = info;\r\n  }\r\n  if (instance) {\r\n    instances[instance.toLowerCase()] = info;\r\n  }\r\n  store.local.setJSON('instances', instances);\r\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\r\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\r\n  if (streamingApi || streaming) {\r\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\r\n    masto.config.props.streamingApiUrl = streaming || streamingApi;\r\n  }\r\n}\r\n\r\n// Get the account information and store it\r\nexport async function initAccount(client, instance, accessToken, vapidKey) {\r\n  const masto = client;\r\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\r\n\r\n  store.session.set('currentAccount', mastoAccount.id);\r\n\r\n  saveAccount({\r\n    info: mastoAccount,\r\n    instanceURL: instance.toLowerCase(),\r\n    accessToken,\r\n    vapidKey,\r\n  });\r\n}\r\n\r\n// Get preferences\r\nexport async function initPreferences(client) {\r\n  try {\r\n    const masto = client;\r\n    const preferences = await masto.v1.preferences.fetch();\r\n    store.account.set('preferences', preferences);\r\n  } catch (e) {\r\n    // silently fail\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n// Get the masto instance\r\n// If accountID is provided, get the masto instance for that account\r\nexport function api({ instance, accessToken, accountID, account } = {}) {\r\n  // Always lowercase and trim the instance\r\n  if (instance) {\r\n    instance = instance.toLowerCase().trim();\r\n  }\r\n\r\n  // If instance and accessToken are provided, get the masto instance for that account\r\n  if (instance && accessToken) {\r\n    return {\r\n      masto:\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken }),\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  if (accessToken) {\r\n    // If only accessToken is provided, get the masto instance for that accessToken\r\n    console.log('X 1', accountApis);\r\n    for (const instance in accountApis) {\r\n      if (accountApis[instance][accessToken]) {\r\n        console.log('X 2', accountApis, instance, accessToken);\r\n        return {\r\n          masto: accountApis[instance][accessToken],\r\n          authenticated: true,\r\n          instance,\r\n        };\r\n      } else {\r\n        console.log('X 3', accountApis, instance, accessToken);\r\n        const account = getAccountByAccessToken(accessToken);\r\n        if (account) {\r\n          const accessToken = account.accessToken;\r\n          const instance = account.instanceURL.toLowerCase().trim();\r\n          return {\r\n            masto: initClient({ instance, accessToken }),\r\n            authenticated: true,\r\n            instance,\r\n          };\r\n        } else {\r\n          throw new Error(`Access token not found`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If account is provided, get the masto instance for that account\r\n  if (account || accountID) {\r\n    account = account || getAccount(accountID);\r\n    if (account) {\r\n      const accessToken = account.accessToken;\r\n      const instance = account.instanceURL.toLowerCase().trim();\r\n      return {\r\n        masto:\r\n          accountApis[instance]?.[accessToken] ||\r\n          initClient({ instance, accessToken }),\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    } else {\r\n      throw new Error(`Account ${accountID} not found`);\r\n    }\r\n  }\r\n\r\n  // If only instance is provided, get the masto instance for that instance\r\n  if (instance) {\r\n    const masto = apis[instance] || initClient({ instance });\r\n    return {\r\n      masto,\r\n      authenticated: !!masto.config.props.accessToken,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided, get the masto instance for the current account\r\n  if (currentAccountApi) {\r\n    return {\r\n      masto: currentAccountApi,\r\n      authenticated: true,\r\n      instance: currentAccountApi.__instance__,\r\n    };\r\n  }\r\n  const currentAccount = getCurrentAccount();\r\n  if (currentAccount) {\r\n    const { accessToken, instanceURL: instance } = currentAccount;\r\n    currentAccountApi =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    return {\r\n      masto: currentAccountApi,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\r\n  return {\r\n    masto: apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE }),\r\n    authenticated: false,\r\n    instance: DEFAULT_INSTANCE,\r\n  };\r\n}\r\n\r\nwindow.__API__ = {\r\n  currentAccountApi,\r\n  apis,\r\n  accountApis,\r\n};\r\n","import mem from 'mem';\r\nimport { proxy, subscribe } from 'valtio';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport { api } from './api';\r\nimport store from './store';\r\n\r\nconst states = proxy({\r\n  appVersion: {},\r\n  // history: [],\r\n  prevLocation: null,\r\n  currentLocation: null,\r\n  statuses: {},\r\n  statusThreadNumber: {},\r\n  home: [],\r\n  // specialHome: [],\r\n  homeNew: [],\r\n  homeLast: null, // Last item in 'home' list\r\n  homeLastFetchTime: null,\r\n  notifications: [],\r\n  notificationsLast: store.account.get('notificationsLast') || null, // Last read notification\r\n  notificationsNew: [],\r\n  notificationsShowNew: false,\r\n  notificationsLastFetchTime: null,\r\n  accounts: {},\r\n  reloadStatusPage: 0,\r\n  reloadGenericAccounts: {\r\n    id: null,\r\n    counter: 0,\r\n  },\r\n  spoilers: {},\r\n  scrollPositions: {},\r\n  unfurledLinks: {},\r\n  statusQuotes: {},\r\n  accounts: {},\r\n  routeNotification: null,\r\n  // Modals\r\n  showCompose: false,\r\n  showSettings: false,\r\n  showAccount: false,\r\n  showAccounts: false,\r\n  showDrafts: false,\r\n  showMediaModal: false,\r\n  showShortcutsSettings: false,\r\n  showKeyboardShortcutsHelp: false,\r\n  showGenericAccounts: false,\r\n  showMediaAlt: false,\r\n  // Shortcuts\r\n  shortcuts: store.account.get('shortcuts') ?? [],\r\n  // Settings\r\n  settings: {\r\n    autoRefresh: store.account.get('settings-autoRefresh') ?? false,\r\n    shortcutsViewMode: store.account.get('settings-shortcutsViewMode') ?? null,\r\n    shortcutsColumnsMode:\r\n      store.account.get('settings-shortcutsColumnsMode') ?? false,\r\n    boostsCarousel: store.account.get('settings-boostsCarousel') ?? true,\r\n    contentTranslation:\r\n      store.account.get('settings-contentTranslation') ?? true,\r\n    contentTranslationTargetLanguage:\r\n      store.account.get('settings-contentTranslationTargetLanguage') || null,\r\n    contentTranslationHideLanguages:\r\n      store.account.get('settings-contentTranslationHideLanguages') || [],\r\n    contentTranslationAutoInline:\r\n      store.account.get('settings-contentTranslationAutoInline') ?? false,\r\n    cloakMode: store.account.get('settings-cloakMode') ?? false,\r\n  },\r\n});\r\n\r\nexport default states;\r\n\r\nexport function initStates() {\r\n  // init all account based states\r\n  // all keys that uses store.account.get() should be initialized here\r\n  states.notificationsLast = store.account.get('notificationsLast') || null;\r\n  states.shortcuts = store.account.get('shortcuts') ?? [];\r\n  states.settings.autoRefresh =\r\n    store.account.get('settings-autoRefresh') ?? false;\r\n  states.settings.shortcutsViewMode =\r\n    store.account.get('settings-shortcutsViewMode') ?? null;\r\n  states.settings.shortcutsColumnsMode =\r\n    store.account.get('settings-shortcutsColumnsMode') ?? false;\r\n  states.settings.boostsCarousel =\r\n    store.account.get('settings-boostsCarousel') ?? true;\r\n  states.settings.contentTranslation =\r\n    store.account.get('settings-contentTranslation') ?? true;\r\n  states.settings.contentTranslationTargetLanguage =\r\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\r\n  states.settings.contentTranslationHideLanguages =\r\n    store.account.get('settings-contentTranslationHideLanguages') || [];\r\n  states.settings.contentTranslationAutoInline =\r\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\r\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\r\n}\r\n\r\nsubscribeKey(states, 'notificationsLast', (v) => {\r\n  console.log('CHANGE', v);\r\n  store.account.set('notificationsLast', states.notificationsLast);\r\n});\r\nsubscribe(states, (changes) => {\r\n  console.debug('STATES change', changes);\r\n  for (const [action, path, value, prevValue] of changes) {\r\n    if (path.join('.') === 'settings.autoRefresh') {\r\n      store.account.set('settings-autoRefresh', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.boostsCarousel') {\r\n      store.account.set('settings-boostsCarousel', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.shortcutsColumnsMode') {\r\n      store.account.set('settings-shortcutsColumnsMode', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.shortcutsViewMode') {\r\n      store.account.set('settings-shortcutsViewMode', value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslation') {\r\n      store.account.set('settings-contentTranslation', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\r\n      store.account.set('settings-contentTranslationAutoInline', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\r\n      console.log('SET', value);\r\n      store.account.set('settings-contentTranslationTargetLanguage', value);\r\n    }\r\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\r\n      store.account.set(\r\n        'settings-contentTranslationHideLanguages',\r\n        states.settings.contentTranslationHideLanguages,\r\n      );\r\n    }\r\n    if (path?.[0] === 'shortcuts') {\r\n      store.account.set('shortcuts', states.shortcuts);\r\n    }\r\n    if (path.join('.') === 'settings.cloakMode') {\r\n      store.account.set('settings-cloakMode', !!value);\r\n    }\r\n  }\r\n});\r\n\r\nexport function hideAllModals() {\r\n  states.showCompose = false;\r\n  states.showSettings = false;\r\n  states.showAccount = false;\r\n  states.showAccounts = false;\r\n  states.showDrafts = false;\r\n  states.showMediaModal = false;\r\n  states.showShortcutsSettings = false;\r\n  states.showKeyboardShortcutsHelp = false;\r\n  states.showGenericAccounts = false;\r\n  states.showMediaAlt = false;\r\n}\r\n\r\nexport function statusKey(id, instance) {\r\n  if (!id) return;\r\n  return instance ? `${instance}/${id}` : id;\r\n}\r\n\r\nexport function getStatus(statusID, instance) {\r\n  if (instance) {\r\n    const key = statusKey(statusID, instance);\r\n    return states.statuses[key];\r\n  }\r\n  return states.statuses[statusID];\r\n}\r\n\r\nexport function saveStatus(status, instance, opts) {\r\n  if (typeof instance === 'object') {\r\n    opts = instance;\r\n    instance = null;\r\n  }\r\n  const { override, skipThreading } = Object.assign(\r\n    { override: true, skipThreading: false },\r\n    opts,\r\n  );\r\n  if (!status) return;\r\n  const oldStatus = getStatus(status.id, instance);\r\n  if (!override && oldStatus) return;\r\n  const key = statusKey(status.id, instance);\r\n  if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\r\n  if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\r\n  states.statuses[key] = status;\r\n  if (status.reblog) {\r\n    const key = statusKey(status.reblog.id, instance);\r\n    states.statuses[key] = status.reblog;\r\n  }\r\n\r\n  // THREAD TRAVERSER\r\n  if (!skipThreading) {\r\n    requestAnimationFrame(() => {\r\n      threadifyStatus(status, instance);\r\n      if (status.reblog) {\r\n        threadifyStatus(status.reblog, instance);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function threadifyStatus(status, propInstance) {\r\n  const { masto, instance } = api({ instance: propInstance });\r\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\r\n  let fetchIndex = 0;\r\n  async function traverse(status, index = 0) {\r\n    const { inReplyToId, inReplyToAccountId } = status;\r\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\r\n      return [status];\r\n    }\r\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\r\n      throw 'Not a thread';\r\n      // Possibly thread of replies by multiple people?\r\n    }\r\n    const key = statusKey(inReplyToId, instance);\r\n    let prevStatus = states.statuses[key];\r\n    if (!prevStatus) {\r\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\r\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\r\n      // prevStatus = await masto.v1.statuses.fetch(inReplyToId);\r\n      prevStatus = await fetchStatus(inReplyToId, masto);\r\n      saveStatus(prevStatus, instance, { skipThreading: true });\r\n    }\r\n    // Prepend so that first status in thread will be index 0\r\n    return [...(await traverse(prevStatus, ++index)), status];\r\n  }\r\n  return traverse(status)\r\n    .then((statuses) => {\r\n      if (statuses.length > 1) {\r\n        console.debug('THREAD', statuses);\r\n        statuses.forEach((status, index) => {\r\n          const key = statusKey(status.id, instance);\r\n          states.statusThreadNumber[key] = index + 1;\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e, status);\r\n    });\r\n}\r\n\r\nconst fetchStatus = mem((statusID, masto) => {\r\n  return masto.v1.statuses.fetch(statusID);\r\n});\r\n","import { useEffect, useRef } from 'preact/hooks';\r\n\r\nfunction useInterval(fn, delay, deps, immediate) {\r\n  const savedCallback = useRef(fn);\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn, deps]);\r\n\r\n  useEffect(() => {\r\n    if (!immediate || delay === null || delay === false) return;\r\n    savedCallback.current();\r\n  }, [immediate]);\r\n\r\n  useEffect(() => {\r\n    if (delay === null || delay === false) return;\r\n    const tick = () => savedCallback.current();\r\n    const id = setInterval(tick, delay);\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default function openCompose(opts) {\r\n  const url = new URL('/compose/', window.location);\r\n  const { width: screenWidth, height: screenHeight } = window.screen;\r\n  const left = Math.max(0, (screenWidth - 600) / 2);\r\n  const top = Math.max(0, (screenHeight - 450) / 2);\r\n  const width = Math.min(screenWidth, 600);\r\n  const height = Math.min(screenHeight, 450);\r\n  const winUID = opts?.uid || Math.random();\r\n  const newWin = window.open(\r\n    url,\r\n    'compose' + winUID,\r\n    `width=${width},height=${height},left=${left},top=${top}`,\r\n  );\r\n\r\n  if (newWin) {\r\n    // if (masto) {\r\n    //   newWin.masto = masto;\r\n    // }\r\n\r\n    newWin.__COMPOSE__ = opts;\r\n  }\r\n\r\n  return newWin;\r\n}\r\n","import { useEffect, useState } from 'preact/hooks';\r\n\r\nconst SIZES = {\r\n  s: 12,\r\n  m: 16,\r\n  l: 20,\r\n  xl: 24,\r\n  xxl: 32,\r\n};\r\n\r\nexport const ICONS = {\r\n  x: () => import('@iconify-icons/mingcute/close-line'),\r\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\r\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\r\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\r\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\r\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\r\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\r\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\r\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\r\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\r\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\r\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\r\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\r\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\r\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\r\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\r\n  message: () => import('@iconify-icons/mingcute/mail-line'),\r\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\r\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\r\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\r\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\r\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\r\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\r\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\r\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\r\n  at: () => import('@iconify-icons/mingcute/at-line'),\r\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\r\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\r\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\r\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\r\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\r\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\r\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\r\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\r\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\r\n  reply: [\r\n    () => import('@iconify-icons/mingcute/share-forward-line'),\r\n    '180deg',\r\n    'horizontal',\r\n  ],\r\n  thread: () => import('@iconify-icons/mingcute/route-line'),\r\n  group: () => import('@iconify-icons/mingcute/group-line'),\r\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\r\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\r\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\r\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\r\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\r\n  info: () => import('@iconify-icons/mingcute/information-line'),\r\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\r\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\r\n  following: () => import('@iconify-icons/mingcute/walk-line'),\r\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\r\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\r\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\r\n  history: () => import('@iconify-icons/mingcute/history-line'),\r\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\r\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\r\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\r\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\r\n  play: () => import('@iconify-icons/mingcute/play-fill'),\r\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\r\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\r\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\r\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n  unblock: [\r\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n    '180deg',\r\n  ],\r\n  flag: () => import('@iconify-icons/mingcute/flag-4-line'),\r\n  time: () => import('@iconify-icons/mingcute/time-line'),\r\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\r\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\r\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\r\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\r\n  react: () => import('@iconify-icons/mingcute/react-line'),\r\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\r\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\r\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\r\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\r\n  round: () => import('@iconify-icons/mingcute/round-fill'),\r\n  'arrow-up-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\r\n  'arrow-down-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\r\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\r\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\r\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\r\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\r\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\r\n};\r\n\r\nfunction Icon({\r\n  icon,\r\n  size = 'm',\r\n  alt,\r\n  title,\r\n  class: className = '',\r\n  style = {},\r\n}) {\r\n  if (!icon) return null;\r\n\r\n  const iconSize = SIZES[size];\r\n  let iconBlock = ICONS[icon];\r\n  let rotate, flip;\r\n  if (Array.isArray(iconBlock)) {\r\n    [iconBlock, rotate, flip] = iconBlock;\r\n  }\r\n\r\n  const [iconData, setIconData] = useState(null);\r\n  useEffect(async () => {\r\n    const icon = await iconBlock();\r\n    setIconData(icon.default);\r\n  }, [iconBlock]);\r\n\r\n  return (\r\n    <span\r\n      class={`icon ${className}`}\r\n      title={title || alt}\r\n      style={{\r\n        width: `${iconSize}px`,\r\n        height: `${iconSize}px`,\r\n        display: 'inline-block',\r\n        overflow: 'hidden',\r\n        lineHeight: 0,\r\n        ...style,\r\n      }}\r\n    >\r\n      {iconData && (\r\n        <svg\r\n          width={iconSize}\r\n          height={iconSize}\r\n          viewBox={`0 0 ${iconData.width} ${iconData.height}`}\r\n          dangerouslySetInnerHTML={{ __html: iconData.body }}\r\n          style={{\r\n            transform: `${rotate ? `rotate(${rotate})` : ''} ${\r\n              flip ? `scaleX(-1)` : ''\r\n            }`,\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Icon;\r\n","import './modal.css';\r\n\r\nimport { createPortal } from 'preact/compat';\r\nimport { useEffect, useRef } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\nconst $modalContainer = document.getElementById('modal-container');\r\n\r\nfunction Modal({ children, onClose, onClick, class: className }) {\r\n  if (!children) return null;\r\n\r\n  const modalRef = useRef();\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\r\n      if (focusElement) {\r\n        focusElement.focus();\r\n      }\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const escRef = useHotkeys('esc', onClose, [onClose], {\r\n    enabled: !!onClose,\r\n  });\r\n\r\n  const Modal = (\r\n    <div\r\n      ref={(node) => {\r\n        modalRef.current = node;\r\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\r\n      }}\r\n      className={className}\r\n      onClick={(e) => {\r\n        onClick?.(e);\r\n        if (e.target === e.currentTarget) {\r\n          onClose?.(e);\r\n        }\r\n      }}\r\n      tabIndex=\"-1\"\r\n      onFocus={(e) => {\r\n        if (e.target === e.currentTarget) {\r\n          modalRef.current?.querySelector?.('[tabindex=\"-1\"]')?.focus?.();\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return createPortal(Modal, $modalContainer);\r\n\r\n  // return createPortal(children, $modalContainer);\r\n}\r\n\r\nexport default Modal;\r\n","import './loader.css';\r\n\r\nfunction Loader({ abrupt, hidden, ...props }) {\r\n  return (\r\n    <div\r\n      {...props}\r\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\r\n        hidden ? 'hidden' : ''\r\n      }`}\r\n    >\r\n      <div class=\"loader\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import './avatar.css';\r\n\r\nimport { useRef } from 'preact/hooks';\r\n\r\nconst SIZES = {\r\n  s: 16,\r\n  m: 20,\r\n  l: 24,\r\n  xl: 32,\r\n  xxl: 50,\r\n  xxxl: 64,\r\n};\r\n\r\nconst alphaCache = {};\r\n\r\nconst canvas = window.OffscreenCanvas\r\n  ? new OffscreenCanvas(1, 1)\r\n  : document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d', {\r\n  willReadFrequently: true,\r\n});\r\n\r\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\r\n  size = SIZES[size] || size || SIZES.m;\r\n  const avatarRef = useRef();\r\n  const isMissing = /missing\\.png$/.test(url);\r\n  return (\r\n    <span\r\n      ref={avatarRef}\r\n      class={`avatar ${squircle ? 'squircle' : ''} ${\r\n        alphaCache[url] ? 'has-alpha' : ''\r\n      }`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n      }}\r\n      title={alt}\r\n      {...props}\r\n    >\r\n      {!!url && (\r\n        <img\r\n          src={url}\r\n          width={size}\r\n          height={size}\r\n          alt={alt}\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n          crossOrigin={\r\n            alphaCache[url] === undefined && !isMissing\r\n              ? 'anonymous'\r\n              : undefined\r\n          }\r\n          onError={(e) => {\r\n            if (e.target.crossOrigin) {\r\n              e.target.crossOrigin = null;\r\n              e.target.src = url;\r\n            }\r\n          }}\r\n          onLoad={(e) => {\r\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\r\n            if (alphaCache[url] !== undefined) return;\r\n            if (isMissing) return;\r\n            try {\r\n              // Check if image has alpha channel\r\n              const { width, height } = e.target;\r\n              if (canvas.width !== width) canvas.width = width;\r\n              if (canvas.height !== height) canvas.height = height;\r\n              ctx.drawImage(e.target, 0, 0);\r\n              const allPixels = ctx.getImageData(0, 0, width, height);\r\n              // At least 10% of pixels have alpha <= 128\r\n              const hasAlpha =\r\n                allPixels.data.filter((pixel, i) => i % 4 === 3 && pixel <= 128)\r\n                  .length /\r\n                  (allPixels.data.length / 4) >\r\n                0.1;\r\n              if (hasAlpha) {\r\n                // console.log('hasAlpha', hasAlpha, allPixels.data);\r\n                avatarRef.current.classList.add('has-alpha');\r\n              }\r\n              alphaCache[url] = hasAlpha;\r\n              ctx.clearRect(0, 0, width, height);\r\n            } catch (e) {\r\n              // Silent fail\r\n              alphaCache[url] = false;\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Avatar;\r\n","import { forwardRef } from 'preact/compat';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport states from '../utils/states';\r\n\r\n/* NOTES\r\n   =====\r\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\r\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\r\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\r\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\r\n*/\r\n\r\nconst Link = forwardRef((props, ref) => {\r\n  let routerLocation;\r\n  try {\r\n    routerLocation = useLocation();\r\n  } catch (e) {}\r\n  let hash = (location.hash || '').replace(/^#/, '').trim();\r\n  if (hash === '') hash = '/';\r\n  const { to, ...restProps } = props;\r\n\r\n  // Handle encodeURIComponent of searchParams values\r\n  if (!!hash && hash !== '/' && hash.includes('?')) {\r\n    const parsedHash = new URL(hash, location.origin); // Fake base URL\r\n    if (parsedHash.searchParams.size) {\r\n      const searchParamsStr = Array.from(parsedHash.searchParams.entries())\r\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n        .join('&');\r\n      hash = parsedHash.pathname + '?' + searchParamsStr;\r\n    }\r\n  }\r\n\r\n  const isActive = hash === to || decodeURIComponent(hash) === to;\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      href={`#${to}`}\r\n      {...restProps}\r\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\r\n      onClick={(e) => {\r\n        if (e.currentTarget?.parentNode?.closest('a')) {\r\n          // If this <a> is nested inside another <a>\r\n          e.stopPropagation();\r\n        }\r\n        if (routerLocation) states.prevLocation = routerLocation;\r\n        props.onClick?.(e);\r\n      }}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Link;\r\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\r\nimport { cloneElement } from 'preact';\r\nimport { useRef } from 'preact/hooks';\r\n\r\nfunction MenuConfirm({\r\n  subMenu = false,\r\n  confirm = true,\r\n  confirmLabel,\r\n  menuItemClassName,\r\n  menuFooter,\r\n  ...props\r\n}) {\r\n  const { children, onClick, ...restProps } = props;\r\n  if (!confirm) {\r\n    if (subMenu) return <MenuItem {...props} />;\r\n    if (onClick) {\r\n      return cloneElement(children, {\r\n        onClick,\r\n      });\r\n    }\r\n    return children;\r\n  }\r\n  const Parent = subMenu ? SubMenu : Menu;\r\n  const menuRef = useRef();\r\n  return (\r\n    <Parent\r\n      instanceRef={menuRef}\r\n      openTrigger=\"clickOnly\"\r\n      direction=\"bottom\"\r\n      overflow=\"auto\"\r\n      gap={-8}\r\n      shift={8}\r\n      menuClassName=\"menu-emphasized\"\r\n      {...restProps}\r\n      menuButton={subMenu ? undefined : children}\r\n      label={subMenu ? children : undefined}\r\n      // Test fix for bug; submenus not opening on Android\r\n      itemProps={{\r\n        onPointerMove: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n        onPointerLeave: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n      }}\r\n    >\r\n      <MenuItem className={menuItemClassName} onClick={onClick}>\r\n        {confirmLabel}\r\n      </MenuItem>\r\n      {menuFooter}\r\n    </Parent>\r\n  );\r\n}\r\n\r\nexport default MenuConfirm;\r\n","function EmojiText({ text, emojis }) {\r\n  if (!text) return '';\r\n  if (!emojis?.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  const regex = new RegExp(\r\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\r\n    'g',\r\n  );\r\n  const elements = text.split(regex).map((word) => {\r\n    const emoji = emojis.find((e) => e.shortcode === word);\r\n    if (emoji) {\r\n      const { url, staticUrl } = emoji;\r\n      return (\r\n        <picture>\r\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\r\n          <img\r\n            key={word}\r\n            src={url}\r\n            alt={word}\r\n            class=\"shortcode-emoji emoji\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n          />\r\n        </picture>\r\n      );\r\n    }\r\n    return word;\r\n  });\r\n  return elements;\r\n}\r\n\r\nexport default EmojiText;\r\n","import './name-text.css';\r\n\r\nimport { memo } from 'preact/compat';\r\n\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\n\r\nfunction NameText({\r\n  account,\r\n  instance,\r\n  showAvatar,\r\n  showAcct,\r\n  short,\r\n  external,\r\n  onClick,\r\n}) {\r\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\r\n    account;\r\n  let { username } = account;\r\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n\r\n  const trimmedUsername = username.toLowerCase().trim();\r\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\r\n  const shortenedDisplayName = trimmedDisplayName\r\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\r\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\r\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\r\n    /[^a-z0-9]/gi,\r\n    '',\r\n  ); // Remove non-alphanumeric characters\r\n\r\n  if (\r\n    !short &&\r\n    (trimmedUsername === trimmedDisplayName ||\r\n      trimmedUsername === shortenedDisplayName ||\r\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\r\n      trimmedUsername.localeCompare?.(shortenedDisplayName, 'en', {\r\n        sensitivity: 'base',\r\n      }) === 0)\r\n  ) {\r\n    username = null;\r\n  }\r\n\r\n  return (\r\n    <a\r\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (onClick) return onClick(e);\r\n        states.showAccount = {\r\n          account,\r\n          instance,\r\n        };\r\n      }}\r\n    >\r\n      {showAvatar && (\r\n        <>\r\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\r\n        </>\r\n      )}\r\n      {displayName && !short ? (\r\n        <>\r\n          <b>\r\n            <EmojiText text={displayName} emojis={emojis} />\r\n          </b>\r\n          {!showAcct && username && (\r\n            <>\r\n              {' '}\r\n              <i>@{username}</i>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : short ? (\r\n        <i>{username}</i>\r\n      ) : (\r\n        <b>{username}</b>\r\n      )}\r\n      {showAcct && (\r\n        <>\r\n          <br />\r\n          <i>\r\n            @{acct1}\r\n            <span class=\"ib\">{acct2}</span>\r\n          </i>\r\n        </>\r\n      )}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default memo(NameText);\r\n","// Twitter-style relative time component\r\n// Seconds = 1s\r\n// Minutes = 1m\r\n// Hours = 1h\r\n// Days = 1d\r\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\r\nimport dayjs from 'dayjs';\r\nimport dayjsTwitter from 'dayjs-twitter';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useEffect, useState } from 'preact/hooks';\r\n\r\ndayjs.extend(dayjsTwitter);\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(relativeTime);\r\n\r\nconst dtf = new Intl.DateTimeFormat();\r\n\r\nexport default function RelativeTime({ datetime, format }) {\r\n  if (!datetime) return null;\r\n  const date = dayjs(datetime);\r\n  const [dateStr, setDateStr] = useState('');\r\n\r\n  useEffect(() => {\r\n    let timer, raf;\r\n    const update = () => {\r\n      raf = requestAnimationFrame(() => {\r\n        let str;\r\n        if (format === 'micro') {\r\n          // If date <= 1 day ago or day is within this year\r\n          const now = dayjs();\r\n          const dayDiff = now.diff(date, 'day');\r\n          if (dayDiff <= 1 || now.year() === date.year()) {\r\n            str = date.twitter();\r\n          } else {\r\n            str = dtf.format(date.toDate());\r\n          }\r\n        } else {\r\n          str = date.fromNow();\r\n        }\r\n        setDateStr(str);\r\n\r\n        timer = setTimeout(update, 30_000);\r\n      });\r\n    };\r\n    raf = requestAnimationFrame(update);\r\n    return () => {\r\n      clearTimeout(timer);\r\n      cancelAnimationFrame(raf);\r\n    };\r\n  }, [date]);\r\n\r\n  return (\r\n    <time datetime={date.toISOString()} title={date.format('LLLL')}>\r\n      {dateStr}\r\n    </time>\r\n  );\r\n}\r\n","import { match } from '@formatjs/intl-localematcher';\r\nimport mem from 'mem';\r\n\r\nfunction _localeMatch(...args) {\r\n  // Wrap in try/catch because localeMatcher throws on invalid locales\r\n  try {\r\n    return match(...args);\r\n  } catch (e) {\r\n    const defaultLocale = args[2];\r\n    return defaultLocale || false;\r\n  }\r\n}\r\nconst localeMatch = mem(_localeMatch, {\r\n  cacheKey: (args) => args.join(),\r\n});\r\n\r\nexport default localeMatch;\r\n","import translationTargetLanguages from '../data/lingva-target-languages';\r\n\r\nimport localeMatch from './locale-match';\r\nimport states from './states';\r\n\r\nconst locales = [\r\n  new Intl.DateTimeFormat().resolvedOptions().locale,\r\n  ...navigator.languages,\r\n];\r\n\r\nfunction getTranslateTargetLanguage(fromSettings = false) {\r\n  if (fromSettings) {\r\n    const { contentTranslationTargetLanguage } = states.settings;\r\n    if (contentTranslationTargetLanguage) {\r\n      return contentTranslationTargetLanguage;\r\n    }\r\n  }\r\n  return localeMatch(\r\n    locales,\r\n    translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\r\n    'en',\r\n  );\r\n}\r\n\r\nexport default getTranslateTargetLanguage;\r\n","export default function localeCode2Text(code) {\r\n  try {\r\n    return new Intl.DisplayNames(navigator.languages, {\r\n      type: 'language',\r\n    }).of(code);\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n","import Toastify from 'toastify-js';\r\n\r\nwindow._showToast = showToast;\r\n\r\nfunction showToast(props) {\r\n  if (typeof props === 'string') {\r\n    props = { text: props };\r\n  }\r\n  const { onClick, delay, ...rest } = props;\r\n  const toast = Toastify({\r\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\r\n    gravity: 'bottom',\r\n    position: 'center',\r\n    ...rest,\r\n    onClick: () => {\r\n      onClick?.(toast); // Pass in the object itself!\r\n    },\r\n  });\r\n  if (delay) {\r\n    setTimeout(() => {\r\n      toast.showToast();\r\n    }, delay);\r\n  } else {\r\n    toast.showToast();\r\n  }\r\n}\r\n\r\nexport default showToast;\r\n","function emojifyText(text, emojis = []) {\r\n  if (!text) return '';\r\n  if (!emojis.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  // Replace shortcodes in text with emoji\r\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\r\n  emojis.forEach((emoji) => {\r\n    const { shortcode, staticUrl, url } = emoji;\r\n    text = text.replace(\r\n      new RegExp(`:${shortcode}:`, 'g'),\r\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\r\n    );\r\n  });\r\n  // console.log(text, emojis);\r\n  return text;\r\n}\r\n\r\nexport default emojifyText;\r\n","import emojifyText from './emojify-text';\r\n\r\nconst fauxDiv = document.createElement('div');\r\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\r\n\r\nfunction enhanceContent(content, opts = {}) {\r\n  const { emojis, postEnhanceDOM = () => {} } = opts;\r\n  let enhancedContent = content;\r\n  const dom = document.createElement('div');\r\n  dom.innerHTML = enhancedContent;\r\n  const hasLink = /<a/i.test(enhancedContent);\r\n  const hasCodeBlock = enhancedContent.indexOf('```') !== -1;\r\n\r\n  if (hasLink) {\r\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\r\n    // E.g. `note` in `account`\r\n    const noTargetBlankLinks = Array.from(\r\n      dom.querySelectorAll('a:not([target=\"_blank\"])'),\r\n    );\r\n    noTargetBlankLinks.forEach((link) => {\r\n      link.setAttribute('target', '_blank');\r\n    });\r\n\r\n    // Remove all classes except `u-url`, `mention`, `hashtag`\r\n    const links = Array.from(dom.querySelectorAll('a[class]'));\r\n    links.forEach((link) => {\r\n      Array.from(link.classList).forEach((c) => {\r\n        if (!whitelistLinkClasses.includes(c)) {\r\n          link.classList.remove(c);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Add 'has-url-text' to all links that contains a url\r\n  if (hasLink) {\r\n    const links = Array.from(dom.querySelectorAll('a[href]'));\r\n    links.forEach((link) => {\r\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\r\n        link.classList.add('has-url-text');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Spanify un-spanned mentions\r\n  if (hasLink) {\r\n    const links = Array.from(dom.querySelectorAll('a[href]'));\r\n    const usernames = [];\r\n    links.forEach((link) => {\r\n      const text = link.innerText.trim();\r\n      const hasChildren = link.querySelector('*');\r\n      // If text looks like @username@domain, then it's a mention\r\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\r\n        // Only show @username\r\n        const [_, username, domain] = text.split('@');\r\n        if (!hasChildren) {\r\n          if (\r\n            !usernames.find(([u]) => u === username) ||\r\n            usernames.find(([u, d]) => u === username && d === domain)\r\n          ) {\r\n            link.innerHTML = `@<span>${username}</span>`;\r\n            usernames.push([username, domain]);\r\n          } else {\r\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\r\n          }\r\n        }\r\n        link.classList.add('mention');\r\n      }\r\n      // If text looks like #hashtag, then it's a hashtag\r\n      if (/^#[^#]+$/g.test(text)) {\r\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\r\n        link.classList.add('mention', 'hashtag');\r\n      }\r\n    });\r\n  }\r\n\r\n  // EMOJIS\r\n  // ======\r\n  // Convert :shortcode: to <img />\r\n  let textNodes;\r\n  if (enhancedContent.indexOf(':') !== -1) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (emojis) {\r\n        html = emojifyText(html, emojis);\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // CODE BLOCKS\r\n  // ===========\r\n  // Convert ```code``` to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const blocks = Array.from(dom.querySelectorAll('p')).filter((p) =>\r\n      /^```[^]+```$/g.test(p.innerText.trim()),\r\n    );\r\n    blocks.forEach((block) => {\r\n      const pre = document.createElement('pre');\r\n      // Replace <br /> with newlines\r\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\r\n      block.replaceWith(pre);\r\n    });\r\n  }\r\n\r\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const paragraphs = Array.from(dom.querySelectorAll('p'));\r\n    // Filter out paragraphs with ``` in beginning only\r\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\r\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\r\n    codeBlocks.forEach((block) => {\r\n      const nextParagraphs = [block];\r\n      let hasCodeBlock = false;\r\n      let currentBlock = block;\r\n      while (currentBlock.nextElementSibling) {\r\n        const next = currentBlock.nextElementSibling;\r\n        if (next && next.tagName === 'P') {\r\n          if (/```$/g.test(next.innerText)) {\r\n            nextParagraphs.push(next);\r\n            hasCodeBlock = true;\r\n            break;\r\n          } else {\r\n            nextParagraphs.push(next);\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n        currentBlock = next;\r\n      }\r\n      if (hasCodeBlock) {\r\n        const pre = document.createElement('pre');\r\n        nextParagraphs.forEach((p) => {\r\n          // Replace <br /> with newlines\r\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n        });\r\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\r\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\r\n        block.replaceWith(pre);\r\n        nextParagraphs.forEach((p) => p.remove());\r\n      }\r\n    });\r\n  }\r\n\r\n  // INLINE CODE\r\n  // ===========\r\n  // Convert `code` to <code>code</code>\r\n  if (enhancedContent.indexOf('`') !== -1) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/`[^`]+`/g.test(html)) {\r\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // TWITTER USERNAMES\r\n  // =================\r\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\r\n  if (/twitter\\.com/i.test(enhancedContent)) {\r\n    textNodes = extractTextNodes(dom, {\r\n      rejectFilter: ['A'],\r\n    });\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\r\n        html = html.replaceAll(\r\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\r\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\r\n        );\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // HASHTAG STUFFING\r\n  // ================\r\n  // Get the <p> that contains a lot of hashtags, add a class to it\r\n  if (enhancedContent.indexOf('#') !== -1) {\r\n    let prevIndex = null;\r\n    const hashtagStuffedParagraphs = Array.from(\r\n      dom.querySelectorAll('p'),\r\n    ).filter((p, index) => {\r\n      let hashtagCount = 0;\r\n      for (let i = 0; i < p.childNodes.length; i++) {\r\n        const node = p.childNodes[i];\r\n\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n          const text = node.textContent.trim();\r\n          if (text !== '') {\r\n            return false;\r\n          }\r\n        } else if (node.tagName === 'BR') {\r\n          // Ignore <br />\r\n        } else if (node.tagName === 'A') {\r\n          const linkText = node.textContent.trim();\r\n          if (!linkText || !linkText.startsWith('#')) {\r\n            return false;\r\n          } else {\r\n            hashtagCount++;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      // Only consider \"stuffing\" if:\r\n      // - there are more than 3 hashtags\r\n      // - there are more than 1 hashtag in adjacent paragraphs\r\n      if (hashtagCount > 3) {\r\n        prevIndex = index;\r\n        return true;\r\n      }\r\n      if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\r\n        prevIndex = index;\r\n        return true;\r\n      }\r\n    });\r\n    if (hashtagStuffedParagraphs?.length) {\r\n      hashtagStuffedParagraphs.forEach((p) => {\r\n        p.classList.add('hashtag-stuffing');\r\n        p.title = p.innerText;\r\n      });\r\n    }\r\n  }\r\n\r\n  if (postEnhanceDOM) {\r\n    postEnhanceDOM(dom); // mutate dom\r\n  }\r\n\r\n  enhancedContent = dom.innerHTML;\r\n\r\n  return enhancedContent;\r\n}\r\n\r\nconst defaultRejectFilter = [\r\n  // Document metadata\r\n  'STYLE',\r\n  // Image and multimedia\r\n  'IMG',\r\n  'VIDEO',\r\n  'AUDIO',\r\n  'AREA',\r\n  'MAP',\r\n  'TRACK',\r\n  // Embedded content\r\n  'EMBED',\r\n  'IFRAME',\r\n  'OBJECT',\r\n  'PICTURE',\r\n  'PORTAL',\r\n  'SOURCE',\r\n  // SVG and MathML\r\n  'SVG',\r\n  'MATH',\r\n  // Scripting\r\n  'CANVAS',\r\n  'NOSCRIPT',\r\n  'SCRIPT',\r\n  // Forms\r\n  'INPUT',\r\n  'OPTION',\r\n  'TEXTAREA',\r\n  // Web Components\r\n  'SLOT',\r\n  'TEMPLATE',\r\n];\r\nconst defaultRejectFilterMap = Object.fromEntries(\r\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\r\n);\r\nfunction extractTextNodes(dom, opts = {}) {\r\n  const textNodes = [];\r\n  const walk = document.createTreeWalker(\r\n    dom,\r\n    NodeFilter.SHOW_TEXT,\r\n    {\r\n      acceptNode(node) {\r\n        if (defaultRejectFilterMap[node.parentNode.nodeName]) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        if (\r\n          opts.rejectFilter &&\r\n          opts.rejectFilter.includes(node.parentNode.nodeName)\r\n        ) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        return NodeFilter.FILTER_ACCEPT;\r\n      },\r\n    },\r\n    false,\r\n  );\r\n  let node;\r\n  while ((node = walk.nextNode())) {\r\n    textNodes.push(node);\r\n  }\r\n  return textNodes;\r\n}\r\n\r\nexport default enhanceContent;\r\n","const div = document.createElement('div');\r\nfunction getHTMLText(html) {\r\n  if (!html) return '';\r\n  div.innerHTML = html\r\n    .replace(/<\\/p>/g, '</p>\\n\\n')\r\n    .replace(/<\\/li>/g, '</li>\\n');\r\n  div.querySelectorAll('br').forEach((br) => {\r\n    br.replaceWith('\\n');\r\n  });\r\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\r\n}\r\n\r\nexport default getHTMLText;\r\n","import states from './states';\r\n\r\nfunction handleContentLinks(opts) {\r\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\r\n  return (e) => {\r\n    let { target } = e;\r\n    target = target.closest('a');\r\n    if (!target) return;\r\n\r\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\r\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\r\n      return;\r\n    }\r\n\r\n    const prevText = target.previousSibling?.textContent;\r\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\r\n    const textStartsWithAt = target.innerText.startsWith('@');\r\n    if (\r\n      (target.classList.contains('u-url') && textStartsWithAt) ||\r\n      (textBeforeLinkIsAt && !textStartsWithAt)\r\n    ) {\r\n      const targetText = (\r\n        target.querySelector('span') || target\r\n      ).innerText.trim();\r\n      const username = targetText.replace(/^@/, '');\r\n      const url = target.getAttribute('href');\r\n      const mention = mentions.find(\r\n        (mention) =>\r\n          mention.username === username ||\r\n          mention.acct === username ||\r\n          mention.url === url,\r\n      );\r\n      if (mention) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.showAccount = {\r\n          account: mention.acct,\r\n          instance,\r\n        };\r\n      } else if (!/^http/i.test(targetText)) {\r\n        console.log('mention not found', targetText);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const href = target.getAttribute('href');\r\n        states.showAccount = {\r\n          account: href,\r\n          instance,\r\n        };\r\n      }\r\n    } else if (!previewMode) {\r\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\r\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const tag = target.innerText.replace(/^#/, '').trim();\r\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\r\n        console.log({ hashURL });\r\n        location.hash = hashURL;\r\n      } else if (\r\n        states.unfurledLinks[target.href]?.url &&\r\n        statusURL !== target.href\r\n      ) {\r\n        // If unfurled AND not self-referential\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.prevLocation = {\r\n          pathname: location.hash.replace(/^#/, ''),\r\n        };\r\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default handleContentLinks;\r\n","const { locale } = new Intl.DateTimeFormat().resolvedOptions();\r\n\r\nfunction niceDateTime(date, { hideTime, formatOpts } = {}) {\r\n  if (!(date instanceof Date)) {\r\n    date = new Date(date);\r\n  }\r\n  const currentYear = new Date().getFullYear();\r\n  const dateText = Intl.DateTimeFormat(locale, {\r\n    // Show year if not current year\r\n    year: date.getFullYear() === currentYear ? undefined : 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    // Hide time if requested\r\n    hour: hideTime ? undefined : 'numeric',\r\n    minute: hideTime ? undefined : 'numeric',\r\n    ...formatOpts,\r\n  }).format(date);\r\n  return dateText;\r\n}\r\n\r\nexport default niceDateTime;\r\n","const { locale } = Intl.NumberFormat().resolvedOptions();\r\nconst shortenNumber = Intl.NumberFormat(locale, {\r\n  notation: 'compact',\r\n}).format;\r\nexport default shortenNumber;\r\n","import './account-block.css';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\n\r\nfunction AccountBlock({\r\n  skeleton,\r\n  account,\r\n  avatarSize = 'xl',\r\n  instance,\r\n  external,\r\n  internal,\r\n  onClick,\r\n  showActivity = false,\r\n  showStats = false,\r\n  accountInstance,\r\n  hideDisplayName = false,\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"account-block skeleton\">\r\n        <Avatar size={avatarSize} />\r\n        <span>\r\n          <b>████████</b>\r\n          <br />\r\n          <span class=\"account-block-acct\">@██████</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const {\r\n    id,\r\n    acct,\r\n    avatar,\r\n    avatarStatic,\r\n    displayName,\r\n    username,\r\n    emojis,\r\n    url,\r\n    statusesCount,\r\n    lastStatusAt,\r\n    bot,\r\n    fields,\r\n    note,\r\n    group,\r\n  } = account;\r\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n  if (accountInstance) {\r\n    acct2 = `@${accountInstance}`;\r\n  }\r\n\r\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\r\n\r\n  return (\r\n    <a\r\n      class=\"account-block\"\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        if (onClick) return onClick(e);\r\n        if (internal) {\r\n          // navigate(`/${instance}/a/${id}`);\r\n          location.hash = `/${instance}/a/${id}`;\r\n        } else {\r\n          states.showAccount = {\r\n            account,\r\n            instance,\r\n          };\r\n        }\r\n      }}\r\n    >\r\n      <Avatar url={avatar} size={avatarSize} squircle={bot} />\r\n      <span>\r\n        {!hideDisplayName && (\r\n          <>\r\n            {displayName ? (\r\n              <b>\r\n                <EmojiText text={displayName} emojis={emojis} />\r\n              </b>\r\n            ) : (\r\n              <b>{username}</b>\r\n            )}\r\n            <br />\r\n          </>\r\n        )}\r\n        <span class=\"account-block-acct\">\r\n          @{acct1}\r\n          <wbr />\r\n          {acct2}\r\n        </span>\r\n        {showActivity && (\r\n          <>\r\n            <br />\r\n            <small class=\"last-status-at insignificant\">\r\n              Posts: {statusesCount}\r\n              {!!lastStatusAt && (\r\n                <>\r\n                  {' '}\r\n                  &middot; Last posted:{' '}\r\n                  {niceDateTime(lastStatusAt, {\r\n                    hideTime: true,\r\n                  })}\r\n                </>\r\n              )}\r\n            </small>\r\n          </>\r\n        )}\r\n        {showStats && (\r\n          <div class=\"account-block-stats\">\r\n            <div\r\n              class=\"short-desc\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: enhanceContent(note, { emojis }),\r\n              }}\r\n            />\r\n            {bot && (\r\n              <>\r\n                <span class=\"tag\">\r\n                  <Icon icon=\"bot\" /> Automated\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!group && (\r\n              <>\r\n                <span class=\"tag\">\r\n                  <Icon icon=\"group\" /> Group\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!verifiedField && (\r\n              <span class=\"verified-field ib\">\r\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\r\n                <span\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: enhanceContent(verifiedField.value, { emojis }),\r\n                  }}\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </span>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default AccountBlock;\r\n","import { satisfies } from 'semver';\r\n\r\nimport features from '../data/features.json';\r\n\r\nimport { getCurrentInstance } from './store-utils';\r\n\r\nconst supportsCache = {};\r\n\r\nfunction supports(feature) {\r\n  try {\r\n    const { version, domain } = getCurrentInstance();\r\n    const key = `${domain}-${feature}`;\r\n    if (supportsCache[key]) return supportsCache[key];\r\n    const range = features[feature];\r\n    if (!range) return false;\r\n    return (supportsCache[key] = satisfies(version, range, {\r\n      includePrerelease: true,\r\n      loose: true,\r\n    }));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default supports;\r\n","import './translation-block.css';\r\n\r\nimport pRetry from 'p-retry';\r\nimport pThrottle from 'p-throttle';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\n\r\nimport sourceLanguages from '../data/lingva-source-languages';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport localeCode2Text from '../utils/localeCode2Text';\r\n\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\n\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 2000,\r\n});\r\n\r\n// Using other API instances instead of lingva.ml because of this bug (slashes don't work):\r\n// https://github.com/thedaviddelta/lingva-translate/issues/68\r\nconst LINGVA_INSTANCES = [\r\n  'lingva.garudalinux.org',\r\n  'lingva.lunar.icu',\r\n  'translate.plausibility.cloud',\r\n];\r\nlet currentLingvaInstance = 0;\r\n\r\nfunction lingvaTranslate(text, source, target) {\r\n  console.log('TRANSLATE', text, source, target);\r\n  const fetchCall = () => {\r\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\r\n    return fetch(\r\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\r\n        text,\r\n      )}`,\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        return {\r\n          provider: 'lingva',\r\n          content: res.translation,\r\n          detectedSourceLanguage: res.info?.detectedSource,\r\n          info: res.info,\r\n        };\r\n      });\r\n  };\r\n  return pRetry(fetchCall, {\r\n    retries: 3,\r\n    onFailedAttempt: (e) => {\r\n      currentLingvaInstance =\r\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\r\n      console.log(\r\n        'Retrying translation with another instance',\r\n        currentLingvaInstance,\r\n      );\r\n    },\r\n  });\r\n  // return masto.v1.statuses.translate(id, {\r\n  //   lang: DEFAULT_LANG,\r\n  // });\r\n}\r\nconst throttledLingvaTranslate = throttle(lingvaTranslate);\r\n\r\nfunction TranslationBlock({\r\n  forceTranslate,\r\n  sourceLanguage,\r\n  onTranslate,\r\n  text = '',\r\n  mini,\r\n}) {\r\n  const targetLang = getTranslateTargetLanguage(true);\r\n  const [uiState, setUIState] = useState('default');\r\n  const [pronunciationContent, setPronunciationContent] = useState(null);\r\n  const [translatedContent, setTranslatedContent] = useState(null);\r\n  const [detectedLang, setDetectedLang] = useState(null);\r\n  const detailsRef = useRef();\r\n\r\n  const sourceLangText = sourceLanguage\r\n    ? localeCode2Text(sourceLanguage)\r\n    : null;\r\n  const targetLangText = localeCode2Text(targetLang);\r\n  const apiSourceLang = useRef('auto');\r\n\r\n  if (!onTranslate) {\r\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\r\n  }\r\n\r\n  const translate = async () => {\r\n    setUIState('loading');\r\n    try {\r\n      const { content, detectedSourceLanguage, provider, error, ...props } =\r\n        await onTranslate(text, apiSourceLang.current, targetLang);\r\n      if (content) {\r\n        if (detectedSourceLanguage) {\r\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\r\n          setDetectedLang(detectedLangText);\r\n        }\r\n        if (provider === 'lingva') {\r\n          const pronunciation = props?.info?.pronunciation?.query;\r\n          if (pronunciation) {\r\n            setPronunciationContent(pronunciation);\r\n          }\r\n        }\r\n        setTranslatedContent(content);\r\n        setUIState('default');\r\n        if (!mini && content.trim() !== text.trim()) {\r\n          detailsRef.current.open = true;\r\n          detailsRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'nearest',\r\n          });\r\n        }\r\n      } else {\r\n        if (error) console.error(error);\r\n        setUIState('error');\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      setUIState('error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (forceTranslate) {\r\n      translate();\r\n    }\r\n  }, [forceTranslate]);\r\n\r\n  if (mini) {\r\n    if (\r\n      !!translatedContent &&\r\n      translatedContent.trim() !== text.trim() &&\r\n      detectedLang !== targetLangText\r\n    ) {\r\n      return (\r\n        <div class=\"shazam-container\">\r\n          <div class=\"shazam-container-inner\">\r\n            <div class=\"status-translation-block-mini\">\r\n              <Icon\r\n                icon=\"translate\"\r\n                alt={`Auto-translated from ${sourceLangText}`}\r\n              />\r\n              <output\r\n                lang={targetLang}\r\n                dir=\"auto\"\r\n                title={pronunciationContent || ''}\r\n              >\r\n                {translatedContent}\r\n              </output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      class=\"status-translation-block\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <details ref={detailsRef}>\r\n        <summary>\r\n          <button\r\n            type=\"button\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              detailsRef.current.open = !detailsRef.current.open;\r\n              if (uiState === 'loading') return;\r\n              if (!translatedContent) translate();\r\n            }}\r\n          >\r\n            <Icon icon=\"translate\" />{' '}\r\n            <span>\r\n              {uiState === 'loading'\r\n                ? 'Translating…'\r\n                : sourceLanguage && sourceLangText && !detectedLang\r\n                ? `Translate from ${sourceLangText}`\r\n                : `Translate`}\r\n            </span>\r\n          </button>\r\n        </summary>\r\n        <div class=\"translated-block\">\r\n          <div class=\"translation-info insignificant\">\r\n            <select\r\n              class=\"translated-source-select\"\r\n              disabled={uiState === 'loading'}\r\n              onChange={(e) => {\r\n                apiSourceLang.current = e.target.value;\r\n                translate();\r\n              }}\r\n            >\r\n              {sourceLanguages.map((l) => (\r\n                <option value={l.code}>\r\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\r\n                </option>\r\n              ))}\r\n            </select>{' '}\r\n            <span>→ {targetLangText}</span>\r\n            <Loader abrupt hidden={uiState !== 'loading'} />\r\n          </div>\r\n          {uiState === 'error' ? (\r\n            <p class=\"ui-state\">Failed to translate</p>\r\n          ) : (\r\n            !!translatedContent && (\r\n              <>\r\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\r\n                  {translatedContent}\r\n                </output>\r\n                {!!pronunciationContent && (\r\n                  <output\r\n                    class=\"translated-pronunciation-content\"\r\n                    tabIndex={-1}\r\n                    onClick={(e) => {\r\n                      e.target.classList.toggle('expand');\r\n                    }}\r\n                  >\r\n                    {pronunciationContent}\r\n                  </output>\r\n                )}\r\n              </>\r\n            )\r\n          )}\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslationBlock;\r\n","import {\r\n  clear,\r\n  createStore,\r\n  del,\r\n  delMany,\r\n  get,\r\n  getMany,\r\n  keys,\r\n  set,\r\n} from 'idb-keyval';\r\n\r\nconst draftsStore = createStore('drafts-db', 'drafts-store');\r\n\r\n// Add additonal `draftsStore` parameter to all methods\r\n\r\nconst drafts = {\r\n  set: (key, val) => set(key, val, draftsStore),\r\n  get: (key) => get(key, draftsStore),\r\n  getMany: (keys) => getMany(keys, draftsStore),\r\n  del: (key) => del(key, draftsStore),\r\n  delMany: (keys) => delMany(keys, draftsStore),\r\n  clear: () => clear(draftsStore),\r\n  keys: () => keys(draftsStore),\r\n};\r\n\r\nexport default {\r\n  drafts,\r\n};\r\n","export default {\r\n  public: 'earth',\r\n  unlisted: 'group',\r\n  private: 'lock',\r\n  direct: 'message',\r\n};\r\n","import { useState } from 'preact/hooks';\r\n\r\nimport shortenNumber from '../utils/shorten-number';\r\n\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\nimport RelativeTime from './relative-time';\r\n\r\nexport default function Poll({\r\n  poll,\r\n  lang,\r\n  readOnly,\r\n  refresh = () => {},\r\n  votePoll = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const {\r\n    expired,\r\n    expiresAt,\r\n    id,\r\n    multiple,\r\n    options,\r\n    ownVotes,\r\n    voted,\r\n    votersCount,\r\n    votesCount,\r\n    emojis,\r\n  } = poll;\r\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\r\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\r\n  // https://stackoverflow.com/a/56718027/20838\r\n  // useEffect(() => {\r\n  //   let timeout;\r\n  //   if (!expired && expiresAtDate) {\r\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\r\n  //     if (ms > 0) {\r\n  //       timeout = setTimeout(() => {\r\n  //         setUIState('loading');\r\n  //         (async () => {\r\n  //           // await refresh();\r\n  //           setUIState('default');\r\n  //         })();\r\n  //       }, ms);\r\n  //     }\r\n  //   }\r\n  //   return () => {\r\n  //     clearTimeout(timeout);\r\n  //   };\r\n  // }, [expired, expiresAtDate]);\r\n\r\n  const pollVotesCount = votersCount || votesCount;\r\n  let roundPrecision = 0;\r\n\r\n  if (pollVotesCount <= 1000) {\r\n    roundPrecision = 0;\r\n  } else if (pollVotesCount <= 10000) {\r\n    roundPrecision = 1;\r\n  } else if (pollVotesCount <= 100000) {\r\n    roundPrecision = 2;\r\n  }\r\n\r\n  const [showResults, setShowResults] = useState(false);\r\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\r\n\r\n  return (\r\n    <div\r\n      lang={lang}\r\n      dir=\"auto\"\r\n      class={`poll ${readOnly ? 'read-only' : ''} ${\r\n        uiState === 'loading' ? 'loading' : ''\r\n      }`}\r\n    >\r\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\r\n        <>\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title, votesCount: optionVotesCount } = option;\r\n              const percentage = pollVotesCount\r\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\r\n                    roundPrecision,\r\n                  )\r\n                : 0; // check if current poll choice is the leading one\r\n\r\n              const isLeading =\r\n                optionVotesCount > 0 &&\r\n                optionVotesCount ===\r\n                  Math.max(...options.map((o) => o.votesCount));\r\n              return (\r\n                <div\r\n                  key={`${i}-${title}-${optionVotesCount}`}\r\n                  class={`poll-option poll-result ${\r\n                    isLeading ? 'poll-option-leading' : ''\r\n                  }`}\r\n                  style={{\r\n                    '--percentage': `${percentage}%`,\r\n                  }}\r\n                >\r\n                  <div class=\"poll-option-title\">\r\n                    <span>\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                    {voted && ownVotes.includes(i) && (\r\n                      <>\r\n                        {' '}\r\n                        <Icon icon=\"check-circle\" />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    class=\"poll-option-votes\"\r\n                    title={`${optionVotesCount} vote${\r\n                      optionVotesCount === 1 ? '' : 's'\r\n                    }`}\r\n                  >\r\n                    {percentage}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!expired && !voted && (\r\n            <button\r\n              class=\"poll-vote-button plain2\"\r\n              disabled={uiState === 'loading'}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setShowResults(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\r\n            </button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const formData = new FormData(form);\r\n            const choices = [];\r\n            formData.forEach((value, key) => {\r\n              if (key === 'poll') {\r\n                choices.push(value);\r\n              }\r\n            });\r\n            if (!choices.length) return;\r\n            setUIState('loading');\r\n            await votePoll(choices);\r\n            setUIState('default');\r\n          }}\r\n        >\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title } = option;\r\n              return (\r\n                <div class=\"poll-option\">\r\n                  <label class=\"poll-label\">\r\n                    <input\r\n                      type={multiple ? 'checkbox' : 'radio'}\r\n                      name=\"poll\"\r\n                      value={i}\r\n                      disabled={uiState === 'loading'}\r\n                      readOnly={readOnly}\r\n                    />\r\n                    <span class=\"poll-option-title\">\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!readOnly && (\r\n            <button\r\n              class=\"poll-vote-button\"\r\n              type=\"submit\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              Vote\r\n            </button>\r\n          )}\r\n        </form>\r\n      )}\r\n      <p class=\"poll-meta\">\r\n        {!expired && !readOnly && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            style={{\r\n              marginLeft: -8,\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setUIState('loading');\r\n\r\n              (async () => {\r\n                await refresh();\r\n                setUIState('default');\r\n              })();\r\n            }}\r\n            title=\"Refresh\"\r\n          >\r\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\r\n          </button>\r\n        )}\r\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setShowResults(!showResults);\r\n            }}\r\n            title={showResults ? 'Hide results' : 'Show results'}\r\n          >\r\n            <Icon\r\n              icon={showResults ? 'eye-open' : 'eye-close'}\r\n              alt={showResults ? 'Hide results' : 'Show results'}\r\n            />{' '}\r\n          </button>\r\n        )}\r\n        {!expired && !readOnly && ' '}\r\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\r\n        {votesCount === 1 ? '' : 's'}\r\n        {!!votersCount && votersCount !== votesCount && (\r\n          <>\r\n            {' '}\r\n            &bull; <span title={votersCount}>\r\n              {shortenNumber(votersCount)}\r\n            </span>{' '}\r\n            voter\r\n            {votersCount === 1 ? '' : 's'}\r\n          </>\r\n        )}{' '}\r\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\r\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\r\n      </p>{' '}\r\n    </div>\r\n  );\r\n}\r\n","const div = document.createElement('div');\r\nexport default function htmlContentLength(html) {\r\n  if (!html) return 0;\r\n  div.innerHTML = html;\r\n  return div.innerText.length;\r\n}\r\n","export default function isMastodonLinkMaybe(url) {\r\n  const { pathname } = new URL(url);\r\n  return (\r\n    /^\\/.*\\/\\d+$/i.test(pathname) ||\r\n    /^\\/@[^/]+\\/(statuses|posts)\\/\\w+\\/?$/i.test(pathname) || // GoToSocial, Takahe\r\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\r\n    /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) // Pleroma\r\n  );\r\n}\r\n","const root = document.documentElement;\r\nconst style = getComputedStyle(root);\r\nconst defaultBoundingBoxPadding = 8;\r\n\r\nlet safeAreaInsets = [0, 0, 0, 0];\r\nfunction getSafeAreaInsets() {\r\n  // Get safe area inset variables from root\r\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\r\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\r\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\r\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\r\n  safeAreaInsets = [\r\n    // top, right, bottom, left (clockwise)\r\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\r\n  ];\r\n}\r\nrequestAnimationFrame(getSafeAreaInsets);\r\n\r\nfunction safeBoundingBoxPadding(paddings = []) {\r\n  const str = safeAreaInsets\r\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\r\n    .join(' ');\r\n  // console.log(str);\r\n  return str;\r\n}\r\n\r\n// Update safe area insets when orientation or resize\r\nif (CSS.supports('top: env(safe-area-inset-top)')) {\r\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\r\n}\r\n\r\nexport default safeBoundingBoxPadding;\r\n","import getHTMLText from './getHTMLText';\r\n\r\nfunction statusPeek(status) {\r\n  const { spoilerText, content, poll, mediaAttachments } = status;\r\n  let text = '';\r\n  if (spoilerText?.trim()) {\r\n    text += spoilerText;\r\n  } else {\r\n    text += getHTMLText(content);\r\n  }\r\n  text = text.trim();\r\n  if (poll) {\r\n    text += ' 📊';\r\n  }\r\n  if (mediaAttachments?.length) {\r\n    text +=\r\n      ' ' +\r\n      mediaAttachments\r\n        .map(\r\n          (m) =>\r\n            ({\r\n              image: '🖼️',\r\n              gifv: '🎞️',\r\n              video: '📹',\r\n              audio: '🎵',\r\n              unknown: '',\r\n            }[m.type] || ''),\r\n        )\r\n        .join('');\r\n  }\r\n  return text;\r\n}\r\n\r\nexport default statusPeek;\r\n","import { useRef } from 'preact/hooks';\r\nimport { useThrottledCallback } from 'use-debounce';\r\nimport useResizeObserver from 'use-resize-observer';\r\n\r\nexport default function useTruncated({ className = 'truncated' } = {}) {\r\n  const ref = useRef();\r\n  const onResize = useThrottledCallback(({ height }) => {\r\n    if (ref.current) {\r\n      const { scrollHeight } = ref.current;\r\n      let truncated = scrollHeight > height;\r\n      if (truncated) {\r\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\r\n        const computedHeight = parseInt(maxHeight || _height, 10);\r\n        truncated = scrollHeight > computedHeight;\r\n      }\r\n      ref.current.classList.toggle(className, truncated);\r\n    }\r\n  }, 300);\r\n  useResizeObserver({\r\n    ref,\r\n    box: 'border-box',\r\n    onResize,\r\n  });\r\n  return ref;\r\n}\r\n","import { getBlurHashAverageColor } from 'fast-blurhash';\r\nimport mem from 'mem';\r\nimport { Fragment } from 'preact';\r\nimport {\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\r\n\r\nimport states from '../utils/states';\r\n\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport { formatDuration } from './status';\r\n\r\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\r\n\r\n/*\r\nMedia type\r\n===\r\nunknown = unsupported or unrecognized file type\r\nimage = Static image\r\ngifv = Looping, soundless animation\r\nvideo = Video clip\r\naudio = Audio track\r\n*/\r\n\r\nconst dataAltLabel = 'ALT';\r\nconst AltBadge = (props) => {\r\n  const { alt, lang, index, ...rest } = props;\r\n  if (!alt || !alt.trim()) return null;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      class=\"alt-badge clickable\"\r\n      {...rest}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        states.showMediaAlt = {\r\n          alt,\r\n          lang,\r\n        };\r\n      }}\r\n      title=\"Media description\"\r\n    >\r\n      {dataAltLabel}\r\n      {!!index && <sup>{index}</sup>}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst MEDIA_CAPTION_LIMIT = 140;\r\nexport const isMediaCaptionLong = mem((caption) =>\r\n  caption?.length\r\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\r\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\r\n    : false,\r\n);\r\n\r\nfunction Media({\r\n  media,\r\n  to,\r\n  lang,\r\n  showOriginal,\r\n  autoAnimate,\r\n  showCaption,\r\n  altIndex,\r\n  onClick = () => {},\r\n}) {\r\n  const {\r\n    blurhash,\r\n    description,\r\n    meta,\r\n    previewRemoteUrl,\r\n    previewUrl,\r\n    remoteUrl,\r\n    url,\r\n    type,\r\n  } = media;\r\n  const { original = {}, small, focus } = meta || {};\r\n\r\n  const width = showOriginal ? original?.width : small?.width;\r\n  const height = showOriginal ? original?.height : small?.height;\r\n  const mediaURL = showOriginal ? url : previewUrl || url;\r\n  const remoteMediaURL = showOriginal\r\n    ? remoteUrl\r\n    : previewRemoteUrl || remoteUrl;\r\n  const orientation = width >= height ? 'landscape' : 'portrait';\r\n\r\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\r\n\r\n  const videoRef = useRef();\r\n\r\n  let focalBackgroundPosition;\r\n  if (focus) {\r\n    // Convert focal point to CSS background position\r\n    // Formula from jquery-focuspoint\r\n    // x = -1, y = 1 => 0% 0%\r\n    // x = 0, y = 0 => 50% 50%\r\n    // x = 1, y = -1 => 100% 100%\r\n    const x = ((focus.x + 1) / 2) * 100;\r\n    const y = ((1 - focus.y) / 2) * 100;\r\n    focalBackgroundPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\r\n  }\r\n\r\n  const mediaRef = useRef();\r\n  const onUpdate = useCallback(({ x, y, scale }) => {\r\n    const { current: media } = mediaRef;\r\n\r\n    if (media) {\r\n      const value = make3dTransformValue({ x, y, scale });\r\n\r\n      if (scale === 1) {\r\n        media.style.removeProperty('transform');\r\n      } else {\r\n        media.style.setProperty('transform', value);\r\n      }\r\n\r\n      media.closest('.media-zoom').style.touchAction =\r\n        scale <= 1.01 ? 'pan-x' : '';\r\n    }\r\n  }, []);\r\n\r\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\r\n  const quickPinchZoomProps = {\r\n    enabled: pinchZoomEnabled,\r\n    draggableUnZoomed: false,\r\n    inertiaFriction: 0.9,\r\n    containerProps: {\r\n      className: 'media-zoom',\r\n      style: {\r\n        overflow: 'visible',\r\n        //   width: 'inherit',\r\n        //   height: 'inherit',\r\n        //   justifyContent: 'inherit',\r\n        //   alignItems: 'inherit',\r\n        //   display: 'inherit',\r\n      },\r\n    },\r\n    onUpdate,\r\n  };\r\n\r\n  const Parent = useMemo(\r\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\r\n    [to],\r\n  );\r\n\r\n  const isVideoMaybe =\r\n    type === 'unknown' &&\r\n    /\\.(mp4|m4a|m4p|m4b|m4r|m4v|mov|webm)$/i.test(remoteMediaURL);\r\n  const isImage =\r\n    type === 'image' || (type === 'unknown' && previewUrl && !isVideoMaybe);\r\n\r\n  const parentRef = useRef();\r\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\r\n  useLayoutEffect(() => {\r\n    if (!isImage) return;\r\n    if (!showOriginal) return;\r\n    if (!parentRef.current) return;\r\n    const { offsetWidth, offsetHeight } = parentRef.current;\r\n    const smaller = width < offsetWidth && height < offsetHeight;\r\n    if (smaller) setImageSmallerThanParent(smaller);\r\n  }, [width, height]);\r\n\r\n  const maxAspectHeight =\r\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\r\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\r\n  const mediaStyles = {\r\n    '--width': `${width}px`,\r\n    '--height': `${height}px`,\r\n    // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\r\n    '--aspectWidth': `${\r\n      (width / height) * Math.max(maxHeight, maxAspectHeight)\r\n    }px`,\r\n    aspectRatio: `${width} / ${height}`,\r\n  };\r\n\r\n  const longDesc = isMediaCaptionLong(description);\r\n  const showInlineDesc =\r\n    !!showCaption && !showOriginal && !!description && !longDesc;\r\n  const Figure = !showInlineDesc\r\n    ? Fragment\r\n    : (props) => {\r\n        const { children, ...restProps } = props;\r\n        return (\r\n          <figure {...restProps}>\r\n            {children}\r\n            <figcaption\r\n              class=\"media-caption\"\r\n              lang={lang}\r\n              dir=\"auto\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                states.showMediaAlt = {\r\n                  alt: description,\r\n                  lang,\r\n                };\r\n              }}\r\n            >\r\n              {description}\r\n            </figcaption>\r\n          </figure>\r\n        );\r\n      };\r\n\r\n  if (isImage) {\r\n    // Note: type: unknown might not have width/height\r\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\r\n\r\n    useLayoutEffect(() => {\r\n      if (!isSafari) return;\r\n      if (!showOriginal) return;\r\n      (async () => {\r\n        try {\r\n          await fetch(mediaURL, { mode: 'no-cors' });\r\n          mediaRef.current.src = mediaURL;\r\n        } catch (e) {\r\n          // Ignore\r\n        }\r\n      })();\r\n    }, [mediaURL]);\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          ref={parentRef}\r\n          class={`media media-image`}\r\n          onClick={onClick}\r\n          data-orientation={orientation}\r\n          data-has-alt={!showInlineDesc}\r\n          style={\r\n            showOriginal\r\n              ? {\r\n                  backgroundImage: `url(${previewUrl})`,\r\n                  backgroundSize: imageSmallerThanParent\r\n                    ? `${width}px ${height}px`\r\n                    : undefined,\r\n                }\r\n              : mediaStyles\r\n          }\r\n        >\r\n          {showOriginal ? (\r\n            <QuickPinchZoom {...quickPinchZoomProps}>\r\n              <img\r\n                ref={mediaRef}\r\n                src={mediaURL}\r\n                alt={description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"eager\"\r\n                decoding=\"sync\"\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.closest('.media-zoom').style.display = '';\r\n                  setPinchZoomEnabled(true);\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n            </QuickPinchZoom>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={mediaURL}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n                style={{\r\n                  backgroundColor:\r\n                    rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n                  backgroundPosition: focalBackgroundPosition || 'center',\r\n                  // Duration based on width or height in pixels\r\n                  // 100px per second (rough estimate)\r\n                  // Clamp between 5s and 120s\r\n                  '--anim-duration': `${Math.min(\r\n                    Math.max(Math.max(width, height) / 100, 5),\r\n                    120,\r\n                  )}s`,\r\n                }}\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.dataset.loaded = true;\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\r\n    const shortDuration = original.duration < 31;\r\n    const isGIF = type === 'gifv' && shortDuration;\r\n    // If GIF is too long, treat it as a video\r\n    const loopable = original.duration < 61;\r\n    const formattedDuration = formatDuration(original.duration);\r\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\r\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\r\n\r\n    const videoHTML = `\r\n    <video\r\n      src=\"${url}\"\r\n      poster=\"${previewUrl}\"\r\n      width=\"${width}\"\r\n      height=\"${height}\"\r\n      data-orientation=\"${orientation}\"\r\n      preload=\"auto\"\r\n      autoplay\r\n      muted=\"${isGIF}\"\r\n      ${isGIF ? '' : 'controls'}\r\n      playsinline\r\n      loop=\"${loopable}\"\r\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\r\n    ></video>\r\n  `;\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media media-${isGIF ? 'gif' : 'video'} ${\r\n            autoGIFAnimate ? 'media-contain' : ''\r\n          }`}\r\n          data-orientation={orientation}\r\n          data-formatted-duration={formattedDuration}\r\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\r\n          data-has-alt={!showInlineDesc}\r\n          // style={{\r\n          //   backgroundColor:\r\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n          // }}\r\n          style={!showOriginal && mediaStyles}\r\n          onClick={(e) => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n            onClick(e);\r\n          }}\r\n          onMouseEnter={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onMouseLeave={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onBlur={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n        >\r\n          {showOriginal || autoGIFAnimate ? (\r\n            isGIF && showOriginal ? (\r\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\r\n                <div\r\n                  ref={mediaRef}\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: videoHTML,\r\n                  }}\r\n                />\r\n              </QuickPinchZoom>\r\n            ) : (\r\n              <div\r\n                class=\"video-container\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: videoHTML,\r\n                }}\r\n              />\r\n            )\r\n          ) : isGIF ? (\r\n            <video\r\n              ref={videoRef}\r\n              src={url}\r\n              poster={previewUrl}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              preload=\"auto\"\r\n              // controls\r\n              playsinline\r\n              loop\r\n              muted\r\n            />\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={previewUrl}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n              />\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          {!showOriginal && !showInlineDesc && (\r\n            <AltBadge alt={description} lang={lang} index={altIndex} />\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'audio') {\r\n    const formattedDuration = formatDuration(original.duration);\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class=\"media media-audio\"\r\n          data-formatted-duration={formattedDuration}\r\n          data-has-alt={!showInlineDesc}\r\n          onClick={onClick}\r\n          style={!showOriginal && mediaStyles}\r\n        >\r\n          {showOriginal ? (\r\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\r\n          ) : previewUrl ? (\r\n            <img\r\n              src={previewUrl}\r\n              alt={showInlineDesc ? '' : description}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              loading=\"lazy\"\r\n            />\r\n          ) : null}\r\n          {!showOriginal && (\r\n            <>\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Media;\r\n","import { FocusableItem } from '@szhsin/react-menu';\r\n\r\nimport Link from './link';\r\n\r\nfunction MenuLink(props) {\r\n  return (\r\n    <FocusableItem>\r\n      {({ ref, closeMenu }) => (\r\n        <Link\r\n          {...props}\r\n          ref={ref}\r\n          onClick={({ detail }) =>\r\n            closeMenu(detail === 0 ? 'Enter' : undefined)\r\n          }\r\n        />\r\n      )}\r\n    </FocusableItem>\r\n  );\r\n}\r\n\r\nexport default MenuLink;\r\n","import './status.css';\r\n\r\nimport '@justinribeiro/lite-youtube';\r\nimport {\r\n  ControlledMenu,\r\n  Menu,\r\n  MenuDivider,\r\n  MenuHeader,\r\n  MenuItem,\r\n} from '@szhsin/react-menu';\r\nimport { decodeBlurHash } from 'fast-blurhash';\r\nimport mem from 'mem';\r\nimport pThrottle from 'p-throttle';\r\nimport { memo } from 'preact/compat';\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { InView } from 'react-intersection-observer';\r\nimport { useLongPress } from 'use-long-press';\r\nimport { useSnapshot } from 'valtio';\r\nimport { snapshot } from 'valtio/vanilla';\r\n\r\nimport AccountBlock from '../components/account-block';\r\nimport EmojiText from '../components/emoji-text';\r\nimport Loader from '../components/loader';\r\nimport MenuConfirm from '../components/menu-confirm';\r\nimport Modal from '../components/modal';\r\nimport NameText from '../components/name-text';\r\nimport Poll from '../components/poll';\r\nimport { api } from '../utils/api';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport getHTMLText from '../utils/getHTMLText';\r\nimport handleContentLinks from '../utils/handle-content-links';\r\nimport htmlContentLength from '../utils/html-content-length';\r\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\r\nimport localeMatch from '../utils/locale-match';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport showToast from '../utils/show-toast';\r\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\r\nimport statusPeek from '../utils/status-peek';\r\nimport store from '../utils/store';\r\nimport useTruncated from '../utils/useTruncated';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport Media from './media';\r\nimport { isMediaCaptionLong } from './media';\r\nimport MenuLink from './menu-link';\r\nimport RelativeTime from './relative-time';\r\nimport TranslationBlock from './translation-block';\r\n\r\nconst INLINE_TRANSLATE_LIMIT = 140;\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 1000,\r\n});\r\n\r\nfunction fetchAccount(id, masto) {\r\n  try {\r\n    return masto.v1.accounts.fetch(id);\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\nconst memFetchAccount = mem(fetchAccount);\r\n\r\nconst visibilityText = {\r\n  public: 'Public',\r\n  unlisted: 'Unlisted',\r\n  private: 'Followers only',\r\n  direct: 'Private mention',\r\n};\r\n\r\nfunction Status({\r\n  statusID,\r\n  status,\r\n  instance: propInstance,\r\n  withinContext,\r\n  size = 'm',\r\n  skeleton,\r\n  readOnly,\r\n  contentTextWeight,\r\n  enableTranslate,\r\n  forceTranslate: _forceTranslate,\r\n  previewMode,\r\n  allowFilters,\r\n  onMediaClick,\r\n  quoted,\r\n  onStatusLinkClick = () => {},\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"status skeleton\">\r\n        <Avatar size=\"xxl\" />\r\n        <div class=\"container\">\r\n          <div class=\"meta\">███ ████████</div>\r\n          <div class=\"content-container\">\r\n            <div class=\"content\">\r\n              <p>████ ████████</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const { masto, instance, authenticated } = api({ instance: propInstance });\r\n  const { instance: currentInstance } = api();\r\n  const sameInstance = instance === currentInstance;\r\n\r\n  let sKey = statusKey(statusID, instance);\r\n  const snapStates = useSnapshot(states);\r\n  if (!status) {\r\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\r\n    sKey = statusKey(status?.id, instance);\r\n  }\r\n  if (!status) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    account: {\r\n      acct,\r\n      avatar,\r\n      avatarStatic,\r\n      id: accountId,\r\n      url: accountURL,\r\n      displayName,\r\n      username,\r\n      emojis: accountEmojis,\r\n      bot,\r\n      group,\r\n    },\r\n    id,\r\n    repliesCount,\r\n    reblogged,\r\n    reblogsCount,\r\n    favourited,\r\n    favouritesCount,\r\n    bookmarked,\r\n    poll,\r\n    muted,\r\n    sensitive,\r\n    spoilerText,\r\n    visibility, // public, unlisted, private, direct\r\n    language,\r\n    editedAt,\r\n    filtered,\r\n    card,\r\n    createdAt,\r\n    inReplyToId,\r\n    inReplyToAccountId,\r\n    content,\r\n    mentions,\r\n    mediaAttachments,\r\n    reblog,\r\n    uri,\r\n    url,\r\n    emojis,\r\n    // Non-API props\r\n    _deleted,\r\n    _pinned,\r\n    _filtered,\r\n  } = status;\r\n\r\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\r\n\r\n  const debugHover = (e) => {\r\n    if (e.shiftKey) {\r\n      console.log({\r\n        ...status,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (allowFilters && size !== 'l' && _filtered) {\r\n    return (\r\n      <FilteredStatus\r\n        status={status}\r\n        filterInfo={_filtered}\r\n        instance={instance}\r\n        containerProps={{\r\n          onMouseEnter: debugHover,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const createdAtDate = new Date(createdAt);\r\n  const editedAtDate = new Date(editedAt);\r\n\r\n  const currentAccount = useMemo(() => {\r\n    return store.session.get('currentAccount');\r\n  }, []);\r\n  const isSelf = useMemo(() => {\r\n    return currentAccount && currentAccount === accountId;\r\n  }, [accountId, currentAccount]);\r\n\r\n  let inReplyToAccountRef = mentions?.find(\r\n    (mention) => mention.id === inReplyToAccountId,\r\n  );\r\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\r\n    inReplyToAccountRef = { url: accountURL, username, displayName };\r\n  }\r\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\r\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\r\n    const account = states.accounts[inReplyToAccountId];\r\n    if (account) {\r\n      setInReplyToAccount(account);\r\n    } else {\r\n      memFetchAccount(inReplyToAccountId, masto)\r\n        .then((account) => {\r\n          setInReplyToAccount(account);\r\n          states.accounts[account.id] = account;\r\n        })\r\n        .catch((e) => {});\r\n    }\r\n  }\r\n  const mentionSelf =\r\n    inReplyToAccountId === currentAccount ||\r\n    mentions?.find((mention) => mention.id === currentAccount);\r\n\r\n  const readingExpandSpoilers = useMemo(() => {\r\n    const prefs = store.account.get('preferences') || {};\r\n    return !!prefs['reading:expand:spoilers'];\r\n  }, []);\r\n  const showSpoiler =\r\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id] || false;\r\n\r\n  if (reblog) {\r\n    // If has statusID, means useItemID (cached in states)\r\n\r\n    if (group) {\r\n      return (\r\n        <div class=\"status-group\" onMouseEnter={debugHover}>\r\n          <div class=\"status-pre-meta\">\r\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\r\n            <NameText account={status.account} instance={instance} showAvatar />\r\n          </div>\r\n          <Status\r\n            status={statusID ? null : reblog}\r\n            statusID={statusID ? reblog.id : null}\r\n            instance={instance}\r\n            size={size}\r\n            contentTextWeight={contentTextWeight}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class=\"status-reblog\" onMouseEnter={debugHover}>\r\n        <div class=\"status-pre-meta\">\r\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\r\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\r\n          <span>boosted</span>\r\n        </div>\r\n        <Status\r\n          status={statusID ? null : reblog}\r\n          statusID={statusID ? reblog.id : null}\r\n          instance={instance}\r\n          size={size}\r\n          contentTextWeight={contentTextWeight}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isSizeLarge = size === 'l';\r\n\r\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\r\n  const targetLanguage = getTranslateTargetLanguage(true);\r\n  const contentTranslationHideLanguages =\r\n    snapStates.settings.contentTranslationHideLanguages || [];\r\n  const { contentTranslation, contentTranslationAutoInline } =\r\n    snapStates.settings;\r\n  if (!contentTranslation) enableTranslate = false;\r\n  const inlineTranslate = useMemo(() => {\r\n    if (\r\n      !contentTranslation ||\r\n      !contentTranslationAutoInline ||\r\n      readOnly ||\r\n      (withinContext && !isSizeLarge) ||\r\n      previewMode ||\r\n      spoilerText ||\r\n      sensitive ||\r\n      poll ||\r\n      card ||\r\n      mediaAttachments?.length\r\n    ) {\r\n      return false;\r\n    }\r\n    const contentLength = htmlContentLength(content);\r\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\r\n  }, [\r\n    contentTranslation,\r\n    contentTranslationAutoInline,\r\n    readOnly,\r\n    withinContext,\r\n    isSizeLarge,\r\n    previewMode,\r\n    spoilerText,\r\n    sensitive,\r\n    poll,\r\n    card,\r\n    mediaAttachments,\r\n    content,\r\n  ]);\r\n\r\n  const [showEdited, setShowEdited] = useState(false);\r\n  const [showReactions, setShowReactions] = useState(false);\r\n\r\n  const spoilerContentRef = useTruncated();\r\n  const contentRef = useTruncated();\r\n  const mediaContainerRef = useTruncated();\r\n  const readMoreText = 'Read more →';\r\n\r\n  const statusRef = useRef(null);\r\n\r\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\r\n\r\n  const textWeight = useCallback(\r\n    () =>\r\n      Math.max(\r\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\r\n          1,\r\n        1,\r\n      ),\r\n    [spoilerText, content],\r\n  );\r\n\r\n  const createdDateText = niceDateTime(createdAtDate);\r\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\r\n\r\n  // Can boost if:\r\n  // - authenticated AND\r\n  // - visibility != direct OR\r\n  // - visibility = private AND isSelf\r\n  let canBoost =\r\n    authenticated && visibility !== 'direct' && visibility !== 'private';\r\n  if (visibility === 'private' && isSelf) {\r\n    canBoost = true;\r\n  }\r\n\r\n  const replyStatus = () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    states.showCompose = {\r\n      replyToStatus: status,\r\n    };\r\n  };\r\n\r\n  // Check if media has no descriptions\r\n  const mediaNoDesc = useMemo(() => {\r\n    return mediaAttachments.some(\r\n      (attachment) => !attachment.description?.trim?.(),\r\n    );\r\n  }, [mediaAttachments]);\r\n  const boostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      if (!reblogged) {\r\n        let confirmText = 'Boost this post?';\r\n        if (mediaNoDesc) {\r\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\r\n        }\r\n        const yes = confirm(confirmText);\r\n        if (!yes) {\r\n          return false;\r\n        }\r\n      }\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.unreblog(id);\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.reblog(id);\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n  const confirmBoostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.unreblog(id);\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.reblog(id);\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const favouriteStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        favourited: !favourited,\r\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\r\n      };\r\n      if (favourited) {\r\n        const newStatus = await masto.v1.statuses.unfavourite(id);\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.favourite(id);\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const bookmarkStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        bookmarked: !bookmarked,\r\n      };\r\n      if (bookmarked) {\r\n        const newStatus = await masto.v1.statuses.unbookmark(id);\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.bookmark(id);\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const differentLanguage =\r\n    !!language &&\r\n    language !== targetLanguage &&\r\n    !localeMatch([language], [targetLanguage]) &&\r\n    !contentTranslationHideLanguages.find(\r\n      (l) => language === l || localeMatch([language], [l]),\r\n    );\r\n\r\n  const menuInstanceRef = useRef();\r\n  const StatusMenuItems = (\r\n    <>\r\n      {!isSizeLarge && (\r\n        <>\r\n          <MenuHeader>\r\n            <span class=\"ib\">\r\n              <Icon icon={visibilityIconsMap[visibility]} size=\"s\" />{' '}\r\n              <span>{visibilityText[visibility]}</span>\r\n            </span>{' '}\r\n            <span class=\"ib\">\r\n              {repliesCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"reply\" alt=\"Replies\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(repliesCount)}</span>\r\n                </span>\r\n              )}{' '}\r\n              {reblogsCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"rocket\" alt=\"Boosts\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(reblogsCount)}</span>\r\n                </span>\r\n              )}{' '}\r\n              {favouritesCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"heart\" alt=\"Favourites\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(favouritesCount)}</span>\r\n                </span>\r\n              )}\r\n            </span>\r\n            <br />\r\n            {createdDateText}\r\n          </MenuHeader>\r\n          <MenuLink\r\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n            onClick={(e) => {\r\n              onStatusLinkClick(e, status);\r\n            }}\r\n          >\r\n            <Icon icon=\"arrow-right\" />\r\n            <span>View post by @{username || acct}</span>\r\n          </MenuLink>\r\n        </>\r\n      )}\r\n      {!!editedAt && (\r\n        <MenuItem\r\n          onClick={() => {\r\n            setShowEdited(id);\r\n          }}\r\n        >\r\n          <Icon icon=\"history\" />\r\n          <span>\r\n            Show Edit History\r\n            <br />\r\n            <small class=\"more-insignificant\">Edited: {editedDateText}</small>\r\n          </span>\r\n        </MenuItem>\r\n      )}\r\n      {(!isSizeLarge || !!editedAt) && <MenuDivider />}\r\n      {isSizeLarge && (\r\n        <MenuItem onClick={() => setShowReactions(true)}>\r\n          <Icon icon=\"react\" />\r\n          <span>\r\n            Boosted/Favourited by<span class=\"more-insignificant\">…</span>\r\n          </span>\r\n        </MenuItem>\r\n      )}\r\n      {!isSizeLarge && sameInstance && (\r\n        <>\r\n          <div class=\"menu-horizontal\">\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"rocket\" />\r\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                </>\r\n              }\r\n              menuFooter={\r\n                mediaNoDesc &&\r\n                !reblogged && (\r\n                  <div class=\"footer\">\r\n                    <Icon icon=\"alert\" />\r\n                    Some media have no descriptions.\r\n                  </div>\r\n                )\r\n              }\r\n              disabled={!canBoost}\r\n              onClick={async () => {\r\n                try {\r\n                  const done = await confirmBoostStatus();\r\n                  if (!isSizeLarge && done) {\r\n                    showToast(reblogged ? 'Unboosted' : 'Boosted');\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"rocket\"\r\n                style={{\r\n                  color: reblogged && 'var(--reblog-color)',\r\n                }}\r\n              />\r\n              <span>{reblogged ? 'Unboost' : 'Boost…'}</span>\r\n            </MenuConfirm>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  favouriteStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(favourited ? 'Unfavourited' : 'Favourited');\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"heart\"\r\n                style={{\r\n                  color: favourited && 'var(--favourite-color)',\r\n                }}\r\n              />\r\n              <span>{favourited ? 'Unfavourite' : 'Favourite'}</span>\r\n            </MenuItem>\r\n          </div>\r\n          <div class=\"menu-horizontal\">\r\n            <MenuItem onClick={replyStatus}>\r\n              <Icon icon=\"reply\" />\r\n              <span>Reply</span>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  bookmarkStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(bookmarked ? 'Unbookmarked' : 'Bookmarked');\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"bookmark\"\r\n                style={{\r\n                  color: bookmarked && 'var(--link-color)',\r\n                }}\r\n              />\r\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\r\n            </MenuItem>\r\n          </div>\r\n        </>\r\n      )}\r\n      {enableTranslate ? (\r\n        <MenuItem\r\n          disabled={forceTranslate}\r\n          onClick={() => {\r\n            setForceTranslate(true);\r\n          }}\r\n        >\r\n          <Icon icon=\"translate\" />\r\n          <span>Translate</span>\r\n        </MenuItem>\r\n      ) : (\r\n        (!language || differentLanguage) && (\r\n          <MenuLink\r\n            to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\r\n          >\r\n            <Icon icon=\"translate\" />\r\n            <span>Translate</span>\r\n          </MenuLink>\r\n        )\r\n      )}\r\n      {((!isSizeLarge && sameInstance) || enableTranslate) && <MenuDivider />}\r\n      <MenuItem href={url} target=\"_blank\">\r\n        <Icon icon=\"external\" />\r\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\r\n      </MenuItem>\r\n      <div class=\"menu-horizontal\">\r\n        <MenuItem\r\n          onClick={() => {\r\n            // Copy url to clipboard\r\n            try {\r\n              navigator.clipboard.writeText(url);\r\n              showToast('Link copied');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast('Unable to copy link');\r\n            }\r\n          }}\r\n        >\r\n          <Icon icon=\"link\" />\r\n          <span>Copy</span>\r\n        </MenuItem>\r\n        {navigator?.share &&\r\n          navigator?.canShare?.({\r\n            url,\r\n          }) && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  navigator.share({\r\n                    url,\r\n                  });\r\n                } catch (e) {\r\n                  console.error(e);\r\n                  alert(\"Sharing doesn't seem to work.\");\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon=\"share\" />\r\n              <span>Share…</span>\r\n            </MenuItem>\r\n          )}\r\n      </div>\r\n      {(isSelf || mentionSelf) && <MenuDivider />}\r\n      {(isSelf || mentionSelf) && (\r\n        <MenuItem\r\n          onClick={async () => {\r\n            try {\r\n              const newStatus = await masto.v1.statuses[\r\n                muted ? 'unmute' : 'mute'\r\n              ](id);\r\n              saveStatus(newStatus, instance);\r\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast(\r\n                muted\r\n                  ? 'Unable to unmute conversation'\r\n                  : 'Unable to mute conversation',\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {muted ? (\r\n            <>\r\n              <Icon icon=\"unmute\" />\r\n              <span>Unmute conversation</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon icon=\"mute\" />\r\n              <span>Mute conversation</span>\r\n            </>\r\n          )}\r\n        </MenuItem>\r\n      )}\r\n      {isSelf && (\r\n        <div class=\"menu-horizontal\">\r\n          <MenuItem\r\n            onClick={() => {\r\n              states.showCompose = {\r\n                editStatus: status,\r\n              };\r\n            }}\r\n          >\r\n            <Icon icon=\"pencil\" />\r\n            <span>Edit</span>\r\n          </MenuItem>\r\n          {isSizeLarge && (\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"trash\" />\r\n                  <span>Delete this post?</span>\r\n                </>\r\n              }\r\n              menuItemClassName=\"danger\"\r\n              onClick={() => {\r\n                // const yes = confirm('Delete this post?');\r\n                // if (yes) {\r\n                (async () => {\r\n                  try {\r\n                    await masto.v1.statuses.remove(id);\r\n                    const cachedStatus = getStatus(id, instance);\r\n                    cachedStatus._deleted = true;\r\n                    showToast('Deleted');\r\n                  } catch (e) {\r\n                    console.error(e);\r\n                    showToast('Unable to delete');\r\n                  }\r\n                })();\r\n                // }\r\n              }}\r\n            >\r\n              <Icon icon=\"trash\" />\r\n              <span>Delete…</span>\r\n            </MenuConfirm>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const contextMenuRef = useRef();\r\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\r\n  const [contextMenuAnchorPoint, setContextMenuAnchorPoint] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const isIOS =\r\n    window.ontouchstart !== undefined &&\r\n    /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  // Only iOS/iPadOS browsers don't support contextmenu\r\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\r\n  const bindLongPressContext = useLongPress(\r\n    isIOS\r\n      ? (e) => {\r\n          if (e.pointerType === 'mouse') return;\r\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\r\n\r\n          const { clientX, clientY } = e.touches?.[0] || e;\r\n          // link detection copied from onContextMenu because here it works\r\n          const link = e.target.closest('a');\r\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n          e.preventDefault();\r\n          setContextMenuAnchorPoint({\r\n            x: clientX,\r\n            y: clientY,\r\n          });\r\n          setIsContextMenuOpen(true);\r\n        }\r\n      : null,\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const showContextMenu = size !== 'l' && !previewMode && !_deleted && !quoted;\r\n\r\n  const hotkeysEnabled = !readOnly && !previewMode;\r\n  const rRef = useHotkeys('r', replyStatus, {\r\n    enabled: hotkeysEnabled,\r\n  });\r\n  const fRef = useHotkeys(\r\n    'f',\r\n    () => {\r\n      try {\r\n        favouriteStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(favourited ? 'Unfavourited' : 'Favourited');\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const dRef = useHotkeys(\r\n    'd',\r\n    () => {\r\n      try {\r\n        bookmarkStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(bookmarked ? 'Unbookmarked' : 'Bookmarked');\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const bRef = useHotkeys(\r\n    'shift+b',\r\n    () => {\r\n      (async () => {\r\n        try {\r\n          const done = await confirmBoostStatus();\r\n          if (!isSizeLarge && done) {\r\n            showToast(reblogged ? 'Unboosted' : 'Boosted');\r\n          }\r\n        } catch (e) {}\r\n      })();\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled && canBoost,\r\n    },\r\n  );\r\n\r\n  const displayedMediaAttachments = mediaAttachments.slice(\r\n    0,\r\n    isSizeLarge ? undefined : 4,\r\n  );\r\n  const showMultipleMediaCaptions =\r\n    mediaAttachments.length > 1 &&\r\n    displayedMediaAttachments.some(\r\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\r\n    );\r\n\r\n  return (\r\n    <article\r\n      ref={(node) => {\r\n        statusRef.current = node;\r\n        // Use parent node if it's in focus\r\n        // Use case: <a><status /></a>\r\n        // When navigating (j/k), the <a> is focused instead of <status />\r\n        // Hotkey binding doesn't bubble up thus this hack\r\n        const nodeRef =\r\n          node?.closest?.(\r\n            '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\r\n          ) || node;\r\n        rRef.current = nodeRef;\r\n        fRef.current = nodeRef;\r\n        dRef.current = nodeRef;\r\n        bRef.current = nodeRef;\r\n      }}\r\n      tabindex=\"-1\"\r\n      class={`status ${\r\n        !withinContext && inReplyToId && inReplyToAccount\r\n          ? 'status-reply-to'\r\n          : ''\r\n      } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\r\n        {\r\n          s: 'small',\r\n          m: 'medium',\r\n          l: 'large',\r\n        }[size]\r\n      } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''}`}\r\n      onMouseEnter={debugHover}\r\n      onContextMenu={(e) => {\r\n        // FIXME: this code isn't getting called on Chrome at all?\r\n        if (!showContextMenu) return;\r\n        if (e.metaKey) return;\r\n        // console.log('context menu', e);\r\n        const link = e.target.closest('a');\r\n        if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n        e.preventDefault();\r\n        setContextMenuAnchorPoint({\r\n          x: e.clientX,\r\n          y: e.clientY,\r\n        });\r\n        setIsContextMenuOpen(true);\r\n      }}\r\n      {...(showContextMenu ? bindLongPressContext() : {})}\r\n    >\r\n      {showContextMenu && (\r\n        <ControlledMenu\r\n          ref={contextMenuRef}\r\n          state={isContextMenuOpen ? 'open' : undefined}\r\n          anchorPoint={contextMenuAnchorPoint}\r\n          direction=\"right\"\r\n          onClose={(e) => {\r\n            setIsContextMenuOpen(false);\r\n            // statusRef.current?.focus?.();\r\n            if (e?.reason === 'click') {\r\n              statusRef.current?.closest('[tabindex]')?.focus?.();\r\n            }\r\n          }}\r\n          portal={{\r\n            target: document.body,\r\n          }}\r\n          containerProps={{\r\n            style: {\r\n              // Higher than the backdrop\r\n              zIndex: 1001,\r\n            },\r\n            onClick: () => {\r\n              contextMenuRef.current?.closeMenu?.();\r\n            },\r\n          }}\r\n          overflow=\"auto\"\r\n          boundingBoxPadding={safeBoundingBoxPadding()}\r\n          unmountOnClose\r\n        >\r\n          {StatusMenuItems}\r\n        </ControlledMenu>\r\n      )}\r\n      {size !== 'l' && (\r\n        <div class=\"status-badge\">\r\n          {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\r\n          {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\r\n          {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\r\n          {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\r\n        </div>\r\n      )}\r\n      {size !== 's' && (\r\n        <a\r\n          href={accountURL}\r\n          tabindex=\"-1\"\r\n          // target=\"_blank\"\r\n          title={`@${acct}`}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            states.showAccount = {\r\n              account: status.account,\r\n              instance,\r\n            };\r\n          }}\r\n        >\r\n          <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\r\n        </a>\r\n      )}\r\n      <div class=\"container\">\r\n        <div class=\"meta\">\r\n          <span class=\"meta-name\">\r\n            <NameText\r\n              account={status.account}\r\n              instance={instance}\r\n              showAvatar={size === 's'}\r\n              showAcct={isSizeLarge}\r\n            />\r\n          </span>\r\n          {/* {inReplyToAccount && !withinContext && size !== 's' && (\r\n              <>\r\n                {' '}\r\n                <span class=\"ib\">\r\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\r\n                  <NameText account={inReplyToAccount} instance={instance} short />\r\n                </span>\r\n              </>\r\n            )} */}\r\n          {/* </span> */}{' '}\r\n          {size !== 'l' &&\r\n            (_deleted ? (\r\n              <span class=\"status-deleted-tag\">Deleted</span>\r\n            ) : url && !previewMode && !quoted ? (\r\n              <Menu\r\n                instanceRef={menuInstanceRef}\r\n                portal={{\r\n                  target: document.body,\r\n                }}\r\n                containerProps={{\r\n                  style: {\r\n                    // Higher than the backdrop\r\n                    zIndex: 1001,\r\n                  },\r\n                  onClick: (e) => {\r\n                    if (e.target === e.currentTarget)\r\n                      menuInstanceRef.current?.closeMenu?.();\r\n                  },\r\n                }}\r\n                align=\"end\"\r\n                gap={4}\r\n                overflow=\"auto\"\r\n                viewScroll=\"close\"\r\n                boundingBoxPadding=\"8 8 8 8\"\r\n                unmountOnClose\r\n                menuButton={({ open }) => (\r\n                  <Link\r\n                    to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      e.stopPropagation();\r\n                      onStatusLinkClick?.(e, status);\r\n                    }}\r\n                    class={`time ${open ? 'is-open' : ''}`}\r\n                  >\r\n                    <Icon\r\n                      icon={visibilityIconsMap[visibility]}\r\n                      alt={visibilityText[visibility]}\r\n                      size=\"s\"\r\n                    />{' '}\r\n                    <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n                  </Link>\r\n                )}\r\n              >\r\n                {StatusMenuItems}\r\n              </Menu>\r\n            ) : (\r\n              <span class=\"time\">\r\n                <Icon\r\n                  icon={visibilityIconsMap[visibility]}\r\n                  alt={visibilityText[visibility]}\r\n                  size=\"s\"\r\n                />{' '}\r\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              </span>\r\n            ))}\r\n        </div>\r\n        {visibility === 'direct' && (\r\n          <>\r\n            <div class=\"status-direct-badge\">Private mention</div>{' '}\r\n          </>\r\n        )}\r\n        {!withinContext && (\r\n          <>\r\n            {(!!inReplyToId && inReplyToAccountId === status.account?.id) ||\r\n            !!snapStates.statusThreadNumber[sKey] ? (\r\n              <div class=\"status-thread-badge\">\r\n                <Icon icon=\"thread\" size=\"s\" />\r\n                Thread\r\n                {snapStates.statusThreadNumber[sKey]\r\n                  ? ` ${snapStates.statusThreadNumber[sKey]}/X`\r\n                  : ''}\r\n              </div>\r\n            ) : (\r\n              !!inReplyToId &&\r\n              !!inReplyToAccount &&\r\n              (!!spoilerText ||\r\n                !mentions.find((mention) => {\r\n                  return mention.id === inReplyToAccountId;\r\n                })) && (\r\n                <div class=\"status-reply-badge\">\r\n                  <Icon icon=\"reply\" />{' '}\r\n                  <NameText\r\n                    account={inReplyToAccount}\r\n                    instance={instance}\r\n                    short\r\n                  />\r\n                </div>\r\n              )\r\n            )}\r\n          </>\r\n        )}\r\n        <div\r\n          class={`content-container ${\r\n            spoilerText || sensitive ? 'has-spoiler' : ''\r\n          } ${showSpoiler ? 'show-spoiler' : ''}`}\r\n          data-content-text-weight={contentTextWeight ? textWeight() : null}\r\n          style={\r\n            (isSizeLarge || contentTextWeight) && {\r\n              '--content-text-weight': textWeight(),\r\n            }\r\n          }\r\n        >\r\n          {!!spoilerText && (\r\n            <>\r\n              <div\r\n                class=\"content spoiler-content\"\r\n                lang={language}\r\n                dir=\"auto\"\r\n                ref={spoilerContentRef}\r\n                data-read-more={readMoreText}\r\n              >\r\n                <p>\r\n                  <EmojiText text={spoilerText} emojis={emojis} />\r\n                </p>\r\n              </div>\r\n              <button\r\n                class={`light spoiler ${showSpoiler ? 'spoiling' : ''}`}\r\n                type=\"button\"\r\n                disabled={readingExpandSpoilers}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  if (showSpoiler) {\r\n                    delete states.spoilers[id];\r\n                  } else {\r\n                    states.spoilers[id] = true;\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\r\n                {readingExpandSpoilers\r\n                  ? 'Content warning'\r\n                  : showSpoiler\r\n                  ? 'Show less'\r\n                  : 'Show more'}\r\n              </button>\r\n            </>\r\n          )}\r\n          <div class=\"content\" ref={contentRef} data-read-more={readMoreText}>\r\n            <div\r\n              lang={language}\r\n              dir=\"auto\"\r\n              class=\"inner-content\"\r\n              onClick={handleContentLinks({\r\n                mentions,\r\n                instance,\r\n                previewMode,\r\n                statusURL: url,\r\n              })}\r\n              dangerouslySetInnerHTML={{\r\n                __html: enhanceContent(content, {\r\n                  emojis,\r\n                  postEnhanceDOM: (dom) => {\r\n                    // Remove target=\"_blank\" from links\r\n                    dom\r\n                      .querySelectorAll('a.u-url[target=\"_blank\"]')\r\n                      .forEach((a) => {\r\n                        if (!/http/i.test(a.innerText.trim())) {\r\n                          a.removeAttribute('target');\r\n                        }\r\n                      });\r\n                    if (previewMode) return;\r\n                    // Unfurl Mastodon links\r\n                    Array.from(\r\n                      dom.querySelectorAll(\r\n                        'a[href]:not(.u-url):not(.mention):not(.hashtag)',\r\n                      ),\r\n                    )\r\n                      .filter((a) => {\r\n                        const url = a.href;\r\n                        const isPostItself =\r\n                          url === status.url || url === status.uri;\r\n                        return !isPostItself && isMastodonLinkMaybe(url);\r\n                      })\r\n                      .forEach((a, i) => {\r\n                        unfurlMastodonLink(currentInstance, a.href).then(\r\n                          (result) => {\r\n                            if (!result) return;\r\n                            a.removeAttribute('target');\r\n                            if (!sKey) return;\r\n                            if (!Array.isArray(states.statusQuotes[sKey])) {\r\n                              states.statusQuotes[sKey] = [];\r\n                            }\r\n                            if (!states.statusQuotes[sKey][i]) {\r\n                              states.statusQuotes[sKey].splice(i, 0, result);\r\n                            }\r\n                          },\r\n                        );\r\n                      });\r\n                  },\r\n                }),\r\n              }}\r\n            />\r\n            <QuoteStatuses id={id} instance={instance} level={quoted} />\r\n          </div>\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              poll={poll}\r\n              readOnly={readOnly || !sameInstance || !authenticated}\r\n              onUpdate={(newPoll) => {\r\n                states.statuses[sKey].poll = newPoll;\r\n              }}\r\n              refresh={() => {\r\n                return masto.v1.polls\r\n                  .fetch(poll.id)\r\n                  .then((pollResponse) => {\r\n                    states.statuses[sKey].poll = pollResponse;\r\n                  })\r\n                  .catch((e) => {}); // Silently fail\r\n              }}\r\n              votePoll={(choices) => {\r\n                return masto.v1.polls\r\n                  .vote(poll.id, {\r\n                    choices,\r\n                  })\r\n                  .then((pollResponse) => {\r\n                    states.statuses[sKey].poll = pollResponse;\r\n                  })\r\n                  .catch((e) => {}); // Silently fail\r\n              }}\r\n            />\r\n          )}\r\n          {(((enableTranslate || inlineTranslate) &&\r\n            !!content.trim() &&\r\n            !!getHTMLText(emojifyText(content, emojis)) &&\r\n            differentLanguage) ||\r\n            forceTranslate) && (\r\n            <TranslationBlock\r\n              forceTranslate={forceTranslate || inlineTranslate}\r\n              mini={!isSizeLarge && !withinContext}\r\n              sourceLanguage={language}\r\n              text={\r\n                (spoilerText ? `${spoilerText}\\n\\n` : '') +\r\n                getHTMLText(content) +\r\n                (poll?.options?.length\r\n                  ? `\\n\\nPoll:\\n${poll.options\r\n                      .map(\r\n                        (option) =>\r\n                          `- ${option.title}${\r\n                            option.votesCount >= 0\r\n                              ? ` (${option.votesCount})`\r\n                              : ''\r\n                          }`,\r\n                      )\r\n                      .join('\\n')}`\r\n                  : '')\r\n              }\r\n            />\r\n          )}\r\n          {!spoilerText && sensitive && !!mediaAttachments.length && (\r\n            <button\r\n              class={`plain spoiler ${showSpoiler ? 'spoiling' : ''}`}\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (showSpoiler) {\r\n                  delete states.spoilers[id];\r\n                } else {\r\n                  states.spoilers[id] = true;\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} /> Sensitive\r\n              content\r\n            </button>\r\n          )}\r\n          {!!mediaAttachments.length && (\r\n            <MultipleMediaFigure\r\n              lang={language}\r\n              enabled={showMultipleMediaCaptions}\r\n              captionChildren={() => {\r\n                return displayedMediaAttachments.map(\r\n                  (media, i) =>\r\n                    !!media.description && (\r\n                      <div\r\n                        key={media.id}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                          states.showMediaAlt = {\r\n                            alt: media.description,\r\n                            lang: language,\r\n                          };\r\n                        }}\r\n                        title={media.description}\r\n                      >\r\n                        <sup>{i + 1}</sup> {media.description}\r\n                      </div>\r\n                    ),\r\n                );\r\n              }}\r\n            >\r\n              <div\r\n                ref={mediaContainerRef}\r\n                class={`media-container media-eq${mediaAttachments.length} ${\r\n                  mediaAttachments.length > 2 ? 'media-gt2' : ''\r\n                } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\r\n              >\r\n                {displayedMediaAttachments.map((media, i) => (\r\n                  <Media\r\n                    key={media.id}\r\n                    media={media}\r\n                    autoAnimate={isSizeLarge}\r\n                    showCaption={mediaAttachments.length === 1}\r\n                    lang={language}\r\n                    altIndex={\r\n                      showMultipleMediaCaptions && !!media.description && i + 1\r\n                    }\r\n                    to={`/${instance}/s/${id}?${\r\n                      withinContext ? 'media' : 'media-only'\r\n                    }=${i + 1}`}\r\n                    onClick={\r\n                      onMediaClick\r\n                        ? (e) => {\r\n                            onMediaClick(e, i, media, status);\r\n                          }\r\n                        : undefined\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n            </MultipleMediaFigure>\r\n          )}\r\n          {!!card &&\r\n            card?.url !== status.url &&\r\n            card?.url !== status.uri &&\r\n            /^https/i.test(card?.url) &&\r\n            !sensitive &&\r\n            !spoilerText &&\r\n            !poll &&\r\n            !mediaAttachments.length &&\r\n            !snapStates.statusQuotes[sKey] && (\r\n              <Card card={card} instance={currentInstance} />\r\n            )}\r\n        </div>\r\n        {isSizeLarge && (\r\n          <>\r\n            <div class=\"extra-meta\">\r\n              {_deleted ? (\r\n                <span class=\"status-deleted-tag\">Deleted</span>\r\n              ) : (\r\n                <>\r\n                  <Icon\r\n                    icon={visibilityIconsMap[visibility]}\r\n                    alt={visibilityText[visibility]}\r\n                  />{' '}\r\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <time\r\n                      class=\"created\"\r\n                      datetime={createdAtDate.toISOString()}\r\n                    >\r\n                      {createdDateText}\r\n                    </time>\r\n                  </a>\r\n                  {editedAt && (\r\n                    <>\r\n                      {' '}\r\n                      &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\r\n                      <time\r\n                        class=\"edited\"\r\n                        datetime={editedAtDate.toISOString()}\r\n                        onClick={() => {\r\n                          setShowEdited(id);\r\n                        }}\r\n                      >\r\n                        {editedDateText}\r\n                      </time>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div class={`actions ${_deleted ? 'disabled' : ''}`}>\r\n              <div class=\"action has-count\">\r\n                <StatusButton\r\n                  title=\"Reply\"\r\n                  alt=\"Comments\"\r\n                  class=\"reply-button\"\r\n                  icon=\"comment\"\r\n                  count={repliesCount}\r\n                  onClick={replyStatus}\r\n                />\r\n              </div>\r\n              {/* <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={reblogged}\r\n                  title={['Boost', 'Unboost']}\r\n                  alt={['Boost', 'Boosted']}\r\n                  class=\"reblog-button\"\r\n                  icon=\"rocket\"\r\n                  count={reblogsCount}\r\n                  onClick={boostStatus}\r\n                  disabled={!canBoost}\r\n                />\r\n              </div> */}\r\n              <MenuConfirm\r\n                disabled={!canBoost}\r\n                onClick={confirmBoostStatus}\r\n                confirmLabel={\r\n                  <>\r\n                    <Icon icon=\"rocket\" />\r\n                    <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                  </>\r\n                }\r\n                menuFooter={\r\n                  mediaNoDesc &&\r\n                  !reblogged && (\r\n                    <div class=\"footer\">\r\n                      <Icon icon=\"alert\" />\r\n                      Some media have no descriptions.\r\n                    </div>\r\n                  )\r\n                }\r\n              >\r\n                <div class=\"action has-count\">\r\n                  <StatusButton\r\n                    checked={reblogged}\r\n                    title={['Boost', 'Unboost']}\r\n                    alt={['Boost', 'Boosted']}\r\n                    class=\"reblog-button\"\r\n                    icon=\"rocket\"\r\n                    count={reblogsCount}\r\n                    // onClick={boostStatus}\r\n                    disabled={!canBoost}\r\n                  />\r\n                </div>\r\n              </MenuConfirm>\r\n              <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={favourited}\r\n                  title={['Favourite', 'Unfavourite']}\r\n                  alt={['Favourite', 'Favourited']}\r\n                  class=\"favourite-button\"\r\n                  icon=\"heart\"\r\n                  count={favouritesCount}\r\n                  onClick={favouriteStatus}\r\n                />\r\n              </div>\r\n              <div class=\"action\">\r\n                <StatusButton\r\n                  checked={bookmarked}\r\n                  title={['Bookmark', 'Unbookmark']}\r\n                  alt={['Bookmark', 'Bookmarked']}\r\n                  class=\"bookmark-button\"\r\n                  icon=\"bookmark\"\r\n                  onClick={bookmarkStatus}\r\n                />\r\n              </div>\r\n              <Menu\r\n                portal={{\r\n                  target:\r\n                    document.querySelector('.status-deck') || document.body,\r\n                }}\r\n                align=\"end\"\r\n                gap={4}\r\n                overflow=\"auto\"\r\n                viewScroll=\"close\"\r\n                boundingBoxPadding=\"8 8 8 8\"\r\n                menuButton={\r\n                  <div class=\"action\">\r\n                    <button\r\n                      type=\"button\"\r\n                      title=\"More\"\r\n                      class=\"plain more-button\"\r\n                    >\r\n                      <Icon icon=\"more\" size=\"l\" alt=\"More\" />\r\n                    </button>\r\n                  </div>\r\n                }\r\n              >\r\n                {StatusMenuItems}\r\n              </Menu>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {!!showEdited && (\r\n        <Modal\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEdited(false);\r\n              statusRef.current?.focus();\r\n            }\r\n          }}\r\n        >\r\n          <EditedAtModal\r\n            statusID={showEdited}\r\n            instance={instance}\r\n            fetchStatusHistory={() => {\r\n              return masto.v1.statuses.listHistory(showEdited);\r\n            }}\r\n            onClose={() => {\r\n              setShowEdited(false);\r\n              statusRef.current?.focus();\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {showReactions && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowReactions(false);\r\n            }\r\n          }}\r\n        >\r\n          <ReactionsModal\r\n            statusID={id}\r\n            instance={instance}\r\n            onClose={() => setShowReactions(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nfunction MultipleMediaFigure(props) {\r\n  const { enabled, children, lang, captionChildren } = props;\r\n  if (!enabled || !captionChildren) return children;\r\n  return (\r\n    <figure class=\"media-figure-multiple\">\r\n      {children}\r\n      <figcaption lang={lang} dir=\"auto\">\r\n        {captionChildren?.()}\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nfunction Card({ card, instance }) {\r\n  const snapStates = useSnapshot(states);\r\n  const {\r\n    blurhash,\r\n    title,\r\n    description,\r\n    html,\r\n    providerName,\r\n    providerUrl,\r\n    authorName,\r\n    authorUrl,\r\n    width,\r\n    height,\r\n    image,\r\n    imageDescription,\r\n    url,\r\n    type,\r\n    embedUrl,\r\n    language,\r\n    publishedAt,\r\n  } = card;\r\n\r\n  /* type\r\n  link = Link OEmbed\r\n  photo = Photo OEmbed\r\n  video = Video OEmbed\r\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\r\n  */\r\n\r\n  const hasText = title || providerName || authorName;\r\n  const isLandscape = width / height >= 1.2;\r\n  const size = isLandscape ? 'large' : '';\r\n\r\n  const [cardStatusURL, setCardStatusURL] = useState(null);\r\n  // const [cardStatusID, setCardStatusID] = useState(null);\r\n  useEffect(() => {\r\n    if (hasText && image && isMastodonLinkMaybe(url)) {\r\n      unfurlMastodonLink(instance, url).then((result) => {\r\n        if (!result) return;\r\n        const { id, url } = result;\r\n        setCardStatusURL('#' + url);\r\n\r\n        // NOTE: This is for quote post\r\n        // (async () => {\r\n        //   const { masto } = api({ instance });\r\n        //   const status = await masto.v1.statuses.fetch(id);\r\n        //   saveStatus(status, instance);\r\n        //   setCardStatusID(id);\r\n        // })();\r\n      });\r\n    }\r\n  }, [hasText, image]);\r\n\r\n  // if (cardStatusID) {\r\n  //   return (\r\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\r\n  //   );\r\n  // }\r\n\r\n  if (snapStates.unfurledLinks[url]) return null;\r\n\r\n  if (hasText && (image || (type === 'photo' && blurhash))) {\r\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\r\n    let blurhashImage;\r\n    if (!image) {\r\n      const w = 44;\r\n      const h = 44;\r\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = w;\r\n      canvas.height = h;\r\n      const ctx = canvas.getContext('2d');\r\n      const imageData = ctx.createImageData(w, h);\r\n      imageData.data.set(blurhashPixels);\r\n      ctx.putImageData(imageData, 0, 0);\r\n      blurhashImage = canvas.toDataURL();\r\n    }\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link ${blurhashImage ? '' : size}`}\r\n        lang={language}\r\n        dir=\"auto\"\r\n      >\r\n        <div class=\"card-image\">\r\n          <img\r\n            src={image || blurhashImage}\r\n            width={width}\r\n            height={height}\r\n            loading=\"lazy\"\r\n            alt={imageDescription || ''}\r\n            onError={(e) => {\r\n              try {\r\n                e.target.style.display = 'none';\r\n              } catch (e) {}\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\" dir=\"auto\">\r\n            {domain}\r\n          </p>\r\n          <p class=\"title\" dir=\"auto\">\r\n            {title}\r\n          </p>\r\n          <p class=\"meta\" dir=\"auto\">\r\n            {description || providerName || authorName}\r\n          </p>\r\n        </div>\r\n      </a>\r\n    );\r\n  } else if (type === 'photo') {\r\n    return (\r\n      <a\r\n        href={url}\r\n        target=\"_blank\"\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class=\"card photo\"\r\n      >\r\n        <img\r\n          src={embedUrl}\r\n          width={width}\r\n          height={height}\r\n          alt={title || description}\r\n          loading=\"lazy\"\r\n          style={{\r\n            height: 'auto',\r\n            aspectRatio: `${width}/${height}`,\r\n          }}\r\n        />\r\n      </a>\r\n    );\r\n  } else if (type === 'video') {\r\n    if (/youtube/i.test(providerName)) {\r\n      // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\r\n      const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\r\n      if (videoID) {\r\n        return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        class=\"card video\"\r\n        style={{\r\n          aspectRatio: `${width}/${height}`,\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    );\r\n  } else if (hasText && !image) {\r\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link no-image`}\r\n        lang={language}\r\n      >\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\">\r\n            <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\r\n          </p>\r\n          <p class=\"title\">{title}</p>\r\n          <p class=\"meta\">{description || providerName || authorName}</p>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nfunction EditedAtModal({\r\n  statusID,\r\n  instance,\r\n  fetchStatusHistory = () => {},\r\n  onClose,\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const [editHistory, setEditHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const editHistory = await fetchStatusHistory();\r\n        console.log(editHistory);\r\n        setEditHistory(editHistory);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"edit-history\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Edit History</h2>\r\n        {uiState === 'error' && <p>Failed to load history</p>}\r\n        {uiState === 'loading' && (\r\n          <p>\r\n            <Loader abrupt /> Loading&hellip;\r\n          </p>\r\n        )}\r\n      </header>\r\n      <main tabIndex=\"-1\">\r\n        {editHistory.length > 0 && (\r\n          <ol>\r\n            {editHistory.map((status) => {\r\n              const { createdAt } = status;\r\n              const createdAtDate = new Date(createdAt);\r\n              return (\r\n                <li key={createdAt} class=\"history-item\">\r\n                  <h3>\r\n                    <time>\r\n                      {niceDateTime(createdAtDate, {\r\n                        formatOpts: {\r\n                          weekday: 'short',\r\n                          second: 'numeric',\r\n                        },\r\n                      })}\r\n                    </time>\r\n                  </h3>\r\n                  <Status\r\n                    status={status}\r\n                    instance={instance}\r\n                    size=\"s\"\r\n                    withinContext\r\n                    readOnly\r\n                    previewMode\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REACTIONS_LIMIT = 80;\r\nfunction ReactionsModal({ statusID, instance, onClose }) {\r\n  const { masto } = api({ instance });\r\n  const [uiState, setUIState] = useState('default');\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const reblogIterator = useRef();\r\n  const favouriteIterator = useRef();\r\n\r\n  async function fetchAccounts(firstLoad) {\r\n    setShowMore(false);\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        if (firstLoad) {\r\n          reblogIterator.current = masto.v1.statuses.listRebloggedBy(statusID, {\r\n            limit: REACTIONS_LIMIT,\r\n          });\r\n          favouriteIterator.current = masto.v1.statuses.listFavouritedBy(\r\n            statusID,\r\n            {\r\n              limit: REACTIONS_LIMIT,\r\n            },\r\n          );\r\n        }\r\n        const [{ value: reblogResults }, { value: favouriteResults }] =\r\n          await Promise.allSettled([\r\n            reblogIterator.current.next(),\r\n            favouriteIterator.current.next(),\r\n          ]);\r\n        if (reblogResults.value?.length || favouriteResults.value?.length) {\r\n          if (reblogResults.value?.length) {\r\n            for (const account of reblogResults.value) {\r\n              const theAccount = accounts.find((a) => a.id === account.id);\r\n              if (!theAccount) {\r\n                accounts.push({\r\n                  ...account,\r\n                  _types: ['reblog'],\r\n                });\r\n              } else {\r\n                theAccount._types.push('reblog');\r\n              }\r\n            }\r\n          }\r\n          if (favouriteResults.value?.length) {\r\n            for (const account of favouriteResults.value) {\r\n              const theAccount = accounts.find((a) => a.id === account.id);\r\n              if (!theAccount) {\r\n                accounts.push({\r\n                  ...account,\r\n                  _types: ['favourite'],\r\n                });\r\n              } else {\r\n                theAccount._types.push('favourite');\r\n              }\r\n            }\r\n          }\r\n          setAccounts(accounts);\r\n          setShowMore(!reblogResults.done || !favouriteResults.done);\r\n        } else {\r\n          setShowMore(false);\r\n        }\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAccounts(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"reactions-container\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Boosted/Favourited by…</h2>\r\n      </header>\r\n      <main>\r\n        {accounts.length > 0 ? (\r\n          <>\r\n            <ul class=\"reactions-list\">\r\n              {accounts.map((account) => {\r\n                const { _types } = account;\r\n                return (\r\n                  <li key={account.id + _types}>\r\n                    <div class=\"reactions-block\">\r\n                      {_types.map((type) => (\r\n                        <Icon\r\n                          icon={\r\n                            {\r\n                              reblog: 'rocket',\r\n                              favourite: 'heart',\r\n                            }[type]\r\n                          }\r\n                          class={`${type}-icon`}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <AccountBlock account={account} instance={instance} />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            {uiState === 'default' ? (\r\n              showMore ? (\r\n                <InView\r\n                  onChange={(inView) => {\r\n                    if (inView) {\r\n                      fetchAccounts();\r\n                    }\r\n                  }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"plain block\"\r\n                    onClick={() => fetchAccounts()}\r\n                  >\r\n                    Show more&hellip;\r\n                  </button>\r\n                </InView>\r\n              ) : (\r\n                <p class=\"ui-state insignificant\">The end.</p>\r\n              )\r\n            ) : (\r\n              uiState === 'loading' && (\r\n                <p class=\"ui-state\">\r\n                  <Loader abrupt />\r\n                </p>\r\n              )\r\n            )}\r\n          </>\r\n        ) : uiState === 'loading' ? (\r\n          <p class=\"ui-state\">\r\n            <Loader abrupt />\r\n          </p>\r\n        ) : uiState === 'error' ? (\r\n          <p class=\"ui-state\">Unable to load accounts</p>\r\n        ) : (\r\n          <p class=\"ui-state insignificant\">No one yet.</p>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StatusButton({\r\n  checked,\r\n  count,\r\n  class: className,\r\n  title,\r\n  alt,\r\n  icon,\r\n  onClick,\r\n  ...props\r\n}) {\r\n  if (typeof title === 'string') {\r\n    title = [title, title];\r\n  }\r\n  if (typeof alt === 'string') {\r\n    alt = [alt, alt];\r\n  }\r\n\r\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\r\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\r\n\r\n  useEffect(() => {\r\n    if (checked) {\r\n      setButtonTitle(title[1] || '');\r\n      setIconAlt(alt[1] || '');\r\n    } else {\r\n      setButtonTitle(title[0] || '');\r\n      setIconAlt(alt[0] || '');\r\n    }\r\n  }, [checked, title, alt]);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      title={buttonTitle}\r\n      class={`plain ${className} ${checked ? 'checked' : ''}`}\r\n      onClick={(e) => {\r\n        if (!onClick) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onClick(e);\r\n      }}\r\n      {...props}\r\n    >\r\n      <Icon icon={icon} size=\"l\" alt={iconAlt} />\r\n      {!!count && (\r\n        <>\r\n          {' '}\r\n          <small title={count}>{shortenNumber(count)}</small>\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function formatDuration(time) {\r\n  if (!time) return;\r\n  let hours = Math.floor(time / 3600);\r\n  let minutes = Math.floor((time % 3600) / 60);\r\n  let seconds = Math.round(time % 60);\r\n\r\n  if (hours === 0) {\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  } else {\r\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\r\n      .toString()\r\n      .padStart(2, '0')}`;\r\n  }\r\n}\r\n\r\nconst denylistDomains = /(twitter|github)\\.com/i;\r\nconst failedUnfurls = {};\r\n\r\nfunction _unfurlMastodonLink(instance, url) {\r\n  const snapStates = snapshot(states);\r\n  if (denylistDomains.test(url)) {\r\n    return;\r\n  }\r\n  if (failedUnfurls[url]) {\r\n    return;\r\n  }\r\n  const instanceRegex = new RegExp(instance + '/');\r\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\r\n    return Promise.resolve(snapStates.unfurledLinks[url]);\r\n  }\r\n  console.debug('🦦 Unfurling URL', url);\r\n\r\n  let remoteInstanceFetch;\r\n  let theURL = url;\r\n  if (/\\/\\/elk\\.[^\\/]+\\/[^.]+\\.[^.]+/i.test(theURL)) {\r\n    // E.g. https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\r\n  }\r\n  const urlObj = new URL(theURL);\r\n  const domain = urlObj.hostname;\r\n  const path = urlObj.pathname;\r\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\r\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\r\n  const statusMatch = statusRegex.exec(path);\r\n  if (statusMatch) {\r\n    const id = statusMatch[3];\r\n    const { masto } = api({ instance: domain });\r\n    remoteInstanceFetch = masto.v1.statuses.fetch(id).then((status) => {\r\n      if (status?.id) {\r\n        return {\r\n          status,\r\n          instance: domain,\r\n        };\r\n      } else {\r\n        throw new Error('No results');\r\n      }\r\n    });\r\n  }\r\n\r\n  const { masto } = api({ instance });\r\n  const mastoSearchFetch = masto.v2\r\n    .search({\r\n      q: url,\r\n      type: 'statuses',\r\n      resolve: true,\r\n      limit: 1,\r\n    })\r\n    .then((results) => {\r\n      if (results.statuses.length > 0) {\r\n        const status = results.statuses[0];\r\n        return {\r\n          status,\r\n          instance,\r\n        };\r\n      } else {\r\n        throw new Error('No results');\r\n      }\r\n    });\r\n\r\n  function handleFulfill(result) {\r\n    const { status, instance } = result;\r\n    const { id } = status;\r\n    const selfURL = `/${instance}/s/${id}`;\r\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\r\n    const data = {\r\n      id,\r\n      instance,\r\n      url: selfURL,\r\n    };\r\n    states.unfurledLinks[url] = data;\r\n    saveStatus(status, instance, {\r\n      skipThreading: true,\r\n    });\r\n    return data;\r\n  }\r\n  function handleCatch(e) {\r\n    failedUnfurls[url] = true;\r\n  }\r\n\r\n  if (remoteInstanceFetch) {\r\n    return Promise.any([remoteInstanceFetch, mastoSearchFetch])\r\n      .then(handleFulfill)\r\n      .catch(handleCatch);\r\n  } else {\r\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\r\n  }\r\n}\r\n\r\nfunction nicePostURL(url) {\r\n  if (!url) return;\r\n  const urlObj = new URL(url);\r\n  const { host, pathname } = urlObj;\r\n  const path = pathname.replace(/\\/$/, '');\r\n  // split only first slash\r\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\r\n  return (\r\n    <>\r\n      {host}\r\n      {username ? (\r\n        <>\r\n          /{username}\r\n          <wbr />\r\n          <span class=\"more-insignificant\">/{restPath}</span>\r\n        </>\r\n      ) : (\r\n        <span class=\"more-insignificant\">{path}</span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst unfurlMastodonLink = throttle(\r\n  mem(_unfurlMastodonLink, {\r\n    cacheKey: (instance, url) => `${instance}:${url}`,\r\n  }),\r\n);\r\n\r\nfunction FilteredStatus({ status, filterInfo, instance, containerProps = {} }) {\r\n  const {\r\n    account: { avatar, avatarStatic, bot, group },\r\n    createdAt,\r\n    visibility,\r\n    reblog,\r\n  } = status;\r\n  const isReblog = !!reblog;\r\n  const filterTitleStr = filterInfo?.titlesStr || '';\r\n  const createdAtDate = new Date(createdAt);\r\n  const statusPeekText = statusPeek(status.reblog || status);\r\n\r\n  const [showPeek, setShowPeek] = useState(false);\r\n  const bindLongPressPeek = useLongPress(\r\n    () => {\r\n      setShowPeek(true);\r\n    },\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const statusPeekRef = useTruncated();\r\n\r\n  return (\r\n    <div\r\n      class={isReblog ? (group ? 'status-group' : 'status-reblog') : ''}\r\n      {...containerProps}\r\n      title={statusPeekText}\r\n      onContextMenu={(e) => {\r\n        e.preventDefault();\r\n        setShowPeek(true);\r\n      }}\r\n      {...bindLongPressPeek()}\r\n    >\r\n      <article class=\"status filtered\" tabindex=\"-1\">\r\n        <b\r\n          class=\"status-filtered-badge clickable badge-meta\"\r\n          title={filterTitleStr}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setShowPeek(true);\r\n          }}\r\n        >\r\n          <span>Filtered</span>\r\n          <span>{filterTitleStr}</span>\r\n        </b>{' '}\r\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\r\n        <span class=\"status-filtered-info\">\r\n          <span class=\"status-filtered-info-1\">\r\n            <NameText account={status.account} instance={instance} />{' '}\r\n            <Icon\r\n              icon={visibilityIconsMap[visibility]}\r\n              alt={visibilityText[visibility]}\r\n              size=\"s\"\r\n            />{' '}\r\n            {isReblog ? (\r\n              'boosted'\r\n            ) : (\r\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n            )}\r\n          </span>\r\n          <span class=\"status-filtered-info-2\">\r\n            {isReblog && (\r\n              <>\r\n                <Avatar\r\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\r\n                  squircle={bot}\r\n                />{' '}\r\n              </>\r\n            )}\r\n            {statusPeekText}\r\n          </span>\r\n        </span>\r\n      </article>\r\n      {!!showPeek && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowPeek(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"filtered-status-peek\" class=\"sheet\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => setShowPeek(false)}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <Link\r\n                ref={statusPeekRef}\r\n                class=\"status-link\"\r\n                to={`/${instance}/s/${status.id}`}\r\n                onClick={() => {\r\n                  setShowPeek(false);\r\n                }}\r\n                data-read-more=\"Read more →\"\r\n              >\r\n                <Status status={status} instance={instance} size=\"s\" readOnly />\r\n              </Link>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\r\n  if (!id || !instance) return;\r\n  const snapStates = useSnapshot(states);\r\n  const sKey = statusKey(id, instance);\r\n  const quotes = snapStates.statusQuotes[sKey];\r\n  const uniqueQuotes = quotes?.filter(\r\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\r\n  );\r\n\r\n  if (!uniqueQuotes?.length) return;\r\n  if (level > 2) return;\r\n\r\n  return uniqueQuotes.map((q) => {\r\n    return (\r\n      <Link\r\n        key={q.instance + q.id}\r\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\r\n        class=\"status-card-link\"\r\n        data-read-more=\"Read more →\"\r\n      >\r\n        <Status\r\n          statusID={q.id}\r\n          instance={q.instance}\r\n          size=\"s\"\r\n          quoted={level + 1}\r\n        />\r\n      </Link>\r\n    );\r\n  });\r\n});\r\n\r\nexport default memo(Status);\r\n","import './compose.css';\r\n\r\nimport '@github/text-expander-element';\r\nimport equal from 'fast-deep-equal';\r\nimport { forwardRef } from 'preact/compat';\r\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport stringLength from 'string-length';\r\nimport { uid } from 'uid/single';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport supportedLanguages from '../data/status-supported-languages';\r\nimport urlRegex from '../data/url-regex';\r\nimport { api } from '../utils/api';\r\nimport db from '../utils/db';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport localeMatch from '../utils/locale-match';\r\nimport openCompose from '../utils/open-compose';\r\nimport states, { saveStatus } from '../utils/states';\r\nimport store from '../utils/store';\r\nimport {\r\n  getCurrentAccount,\r\n  getCurrentAccountNS,\r\n  getCurrentInstance,\r\n} from '../utils/store-utils';\r\nimport supports from '../utils/supports';\r\nimport useInterval from '../utils/useInterval';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport AccountBlock from './account-block';\r\n// import Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\nimport Modal from './modal';\r\nimport Status from './status';\r\n\r\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\r\n  const [code, common, native] = l;\r\n  acc[code] = {\r\n    common,\r\n    native,\r\n  };\r\n  return acc;\r\n}, {});\r\n\r\n/* NOTES:\r\n  - Max character limit includes BOTH status text and Content Warning text\r\n*/\r\n\r\nconst expiryOptions = {\r\n  '5 minutes': 5 * 60,\r\n  '30 minutes': 30 * 60,\r\n  '1 hour': 60 * 60,\r\n  '6 hours': 6 * 60 * 60,\r\n  '12 hours': 12 * 60 * 60,\r\n  '1 day': 24 * 60 * 60,\r\n  '3 days': 3 * 24 * 60 * 60,\r\n  '7 days': 7 * 24 * 60 * 60,\r\n};\r\nconst expirySeconds = Object.values(expiryOptions);\r\nconst oneDay = 24 * 60 * 60;\r\n\r\nconst expiresInFromExpiresAt = (expiresAt) => {\r\n  if (!expiresAt) return oneDay;\r\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\r\n  return expirySeconds.find((s) => s >= delta) || oneDay;\r\n};\r\n\r\nconst menu = document.createElement('ul');\r\nmenu.role = 'listbox';\r\nmenu.className = 'text-expander-menu';\r\n\r\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\r\nconst windowMargin = 16;\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      const { left, width } = entry.boundingClientRect;\r\n      const { innerWidth } = window;\r\n      if (left + width > innerWidth) {\r\n        menu.style.left = innerWidth - width - windowMargin + 'px';\r\n      }\r\n    }\r\n  });\r\n});\r\nobserver.observe(menu);\r\n\r\nconst DEFAULT_LANG = localeMatch(\r\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\r\n  supportedLanguages.map((l) => l[0]),\r\n  'en',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\r\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\r\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\r\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\r\nfunction countableText(inputText) {\r\n  return inputText\r\n    .replace(urlRegexObj, urlPlaceholder)\r\n    .replace(usernameRegex, '$1@$3');\r\n}\r\n\r\nfunction Compose({\r\n  onClose,\r\n  replyToStatus,\r\n  editStatus,\r\n  draftStatus,\r\n  standalone,\r\n  hasOpener,\r\n}) {\r\n  console.warn('RENDER COMPOSER');\r\n  const { masto, instance } = api();\r\n  const [uiState, setUIState] = useState('default');\r\n  const UID = useRef(draftStatus?.uid || uid());\r\n  console.log('Compose UID', UID.current);\r\n\r\n  const currentAccount = getCurrentAccount();\r\n  const currentAccountInfo = currentAccount.info;\r\n\r\n  const { configuration } = getCurrentInstance();\r\n  console.log('⚙️ Configuration', configuration);\r\n\r\n  const {\r\n    statuses: { maxCharacters, maxMediaAttachments, charactersReservedPerUrl },\r\n    mediaAttachments: {\r\n      supportedMimeTypes,\r\n      imageSizeLimit,\r\n      imageMatrixLimit,\r\n      videoSizeLimit,\r\n      videoMatrixLimit,\r\n      videoFrameRateLimit,\r\n    },\r\n    polls: { maxOptions, maxCharactersPerOption, maxExpiration, minExpiration },\r\n  } = configuration;\r\n\r\n  const textareaRef = useRef();\r\n  const spoilerTextRef = useRef();\r\n  const [visibility, setVisibility] = useState('public');\r\n  const [sensitive, setSensitive] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    store.session.get('currentLanguage') || DEFAULT_LANG,\r\n  );\r\n  const prevLanguage = useRef(language);\r\n  const [mediaAttachments, setMediaAttachments] = useState([]);\r\n  const [poll, setPoll] = useState(null);\r\n\r\n  const prefs = store.account.get('preferences') || {};\r\n\r\n  const oninputTextarea = () => {\r\n    if (!textareaRef.current) return;\r\n    textareaRef.current.dispatchEvent(new Event('input'));\r\n  };\r\n  const focusTextarea = () => {\r\n    setTimeout(() => {\r\n      console.debug('FOCUS textarea');\r\n      textareaRef.current?.focus();\r\n    }, 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (replyToStatus) {\r\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\r\n      if (spoilerText && spoilerTextRef.current) {\r\n        spoilerTextRef.current.value = spoilerText;\r\n      }\r\n      const mentions = new Set([\r\n        replyToStatus.account.acct,\r\n        ...replyToStatus.mentions.map((m) => m.acct),\r\n      ]);\r\n      const allMentions = [...mentions].filter(\r\n        (m) => m !== currentAccountInfo.acct,\r\n      );\r\n      if (allMentions.length > 0) {\r\n        textareaRef.current.value = `${allMentions\r\n          .map((m) => `@${m}`)\r\n          .join(' ')} `;\r\n        oninputTextarea();\r\n      }\r\n      focusTextarea();\r\n      setVisibility(\r\n        visibility === 'public' && prefs['posting:default:visibility']\r\n          ? prefs['posting:default:visibility']\r\n          : visibility,\r\n      );\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      setSensitive(sensitive);\r\n    } else if (editStatus) {\r\n      const { visibility, language, sensitive, poll, mediaAttachments } =\r\n        editStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      setUIState('loading');\r\n      (async () => {\r\n        try {\r\n          const statusSource = await masto.v1.statuses.fetchSource(\r\n            editStatus.id,\r\n          );\r\n          console.log({ statusSource });\r\n          const { text, spoilerText } = statusSource;\r\n          textareaRef.current.value = text;\r\n          textareaRef.current.dataset.source = text;\r\n          oninputTextarea();\r\n          focusTextarea();\r\n          spoilerTextRef.current.value = spoilerText;\r\n          setVisibility(visibility);\r\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\r\n          setSensitive(sensitive);\r\n          setPoll(composablePoll);\r\n          setMediaAttachments(mediaAttachments);\r\n          setUIState('default');\r\n        } catch (e) {\r\n          console.error(e);\r\n          alert(e?.reason || e);\r\n          setUIState('error');\r\n        }\r\n      })();\r\n    } else {\r\n      focusTextarea();\r\n      console.log('Apply prefs', prefs);\r\n      if (prefs['posting:default:visibility']) {\r\n        setVisibility(prefs['posting:default:visibility']);\r\n      }\r\n      if (prefs['posting:default:language']) {\r\n        setLanguage(prefs['posting:default:language']);\r\n      }\r\n      if (prefs['posting:default:sensitive']) {\r\n        setSensitive(prefs['posting:default:sensitive']);\r\n      }\r\n    }\r\n    if (draftStatus) {\r\n      const {\r\n        status,\r\n        spoilerText,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      } = draftStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      textareaRef.current.value = status;\r\n      oninputTextarea();\r\n      focusTextarea();\r\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\r\n      if (visibility) setVisibility(visibility);\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      if (sensitive !== null) setSensitive(sensitive);\r\n      if (composablePoll) setPoll(composablePoll);\r\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\r\n    }\r\n  }, [draftStatus, editStatus, replyToStatus]);\r\n\r\n  const formRef = useRef();\r\n\r\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\r\n  const canClose = () => {\r\n    const { value, dataset } = textareaRef.current;\r\n\r\n    // check if loading\r\n    if (uiState === 'loading') {\r\n      console.log('canClose', { uiState });\r\n      return false;\r\n    }\r\n\r\n    // check for status and media attachments\r\n    const hasMediaAttachments = mediaAttachments.length > 0;\r\n    if (!value && !hasMediaAttachments) {\r\n      console.log('canClose', { value, mediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if all media attachments have IDs\r\n    const hasIDMediaAttachments =\r\n      mediaAttachments.length > 0 &&\r\n      mediaAttachments.every((media) => media.id);\r\n    if (hasIDMediaAttachments) {\r\n      console.log('canClose', { hasIDMediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if status contains only \"@acct\", if replying\r\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\r\n    const hasOnlyAcct =\r\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\r\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\r\n    if (!isSelf && hasOnlyAcct) {\r\n      console.log('canClose', { isSelf, hasOnlyAcct });\r\n      return true;\r\n    }\r\n\r\n    // check if status is same with source\r\n    const sameWithSource = value === dataset?.source;\r\n    if (sameWithSource) {\r\n      console.log('canClose', { sameWithSource });\r\n      return true;\r\n    }\r\n\r\n    console.log('canClose', {\r\n      value,\r\n      hasMediaAttachments,\r\n      hasIDMediaAttachments,\r\n      poll,\r\n      isSelf,\r\n      hasOnlyAcct,\r\n      sameWithSource,\r\n      uiState,\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  const confirmClose = () => {\r\n    if (!canClose()) {\r\n      const yes = confirm(beforeUnloadCopy);\r\n      return yes;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Show warning if user tries to close window with unsaved changes\r\n    const handleBeforeUnload = (e) => {\r\n      if (!canClose()) {\r\n        e.preventDefault();\r\n        e.returnValue = beforeUnloadCopy;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload, {\r\n      capture: true,\r\n    });\r\n    return () =>\r\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\r\n        capture: true,\r\n      });\r\n  }, []);\r\n\r\n  const getCharCount = () => {\r\n    const { value } = textareaRef.current;\r\n    const { value: spoilerText } = spoilerTextRef.current;\r\n    return stringLength(countableText(value)) + stringLength(spoilerText);\r\n  };\r\n  const updateCharCount = () => {\r\n    const count = getCharCount();\r\n    states.composerCharacterCount = count;\r\n  };\r\n  useEffect(updateCharCount, []);\r\n\r\n  const escDownRef = useRef(false);\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      escDownRef.current = true;\r\n      // This won't be true if this event is already handled and not propagated 🤞\r\n    },\r\n    {\r\n      enableOnFormTags: true,\r\n    },\r\n  );\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      if (!standalone && escDownRef.current && confirmClose()) {\r\n        onClose();\r\n      }\r\n      escDownRef.current = false;\r\n    },\r\n    {\r\n      enableOnFormTags: true,\r\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\r\n      keyup: true,\r\n    },\r\n  );\r\n\r\n  const prevBackgroundDraft = useRef({});\r\n  const draftKey = () => {\r\n    const ns = getCurrentAccountNS();\r\n    return `${ns}#${UID.current}`;\r\n  };\r\n  const saveUnsavedDraft = () => {\r\n    // Not enabling this for editing status\r\n    // I don't think this warrant a draft mode for a status that's already posted\r\n    // Maybe it could be a big edit change but it should be rare\r\n    if (editStatus) return;\r\n    const key = draftKey();\r\n    const backgroundDraft = {\r\n      key,\r\n      replyTo: replyToStatus\r\n        ? {\r\n            /* Smaller payload of replyToStatus. Reasons:\r\n              - No point storing whole thing\r\n              - Could have media attachments\r\n              - Could be deleted/edited later\r\n            */\r\n            id: replyToStatus.id,\r\n            account: {\r\n              id: replyToStatus.account.id,\r\n              username: replyToStatus.account.username,\r\n              acct: replyToStatus.account.acct,\r\n            },\r\n          }\r\n        : null,\r\n      draftStatus: {\r\n        uid: UID.current,\r\n        status: textareaRef.current.value,\r\n        spoilerText: spoilerTextRef.current.value,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      },\r\n    };\r\n    if (!equal(backgroundDraft, prevBackgroundDraft.current) && !canClose()) {\r\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\r\n      db.drafts\r\n        .set(key, {\r\n          ...backgroundDraft,\r\n          state: 'unsaved',\r\n          updatedAt: Date.now(),\r\n        })\r\n        .then(() => {\r\n          console.debug('DRAFT saved', key, backgroundDraft);\r\n        })\r\n        .catch((e) => {\r\n          console.error('DRAFT failed', key, e);\r\n        });\r\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\r\n    }\r\n  };\r\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\r\n  useEffect(() => {\r\n    saveUnsavedDraft();\r\n    // If unmounted, means user discarded the draft\r\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\r\n    return () => {\r\n      db.drafts.del(draftKey());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleItems = (e) => {\r\n      const { items } = e.clipboardData || e.dataTransfer;\r\n      const files = [];\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        if (item.kind === 'file') {\r\n          const file = item.getAsFile();\r\n          if (file && supportedMimeTypes.includes(file.type)) {\r\n            files.push(file);\r\n          }\r\n        }\r\n      }\r\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\r\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n        return;\r\n      }\r\n      console.log({ files });\r\n      if (files.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\r\n        const max = maxMediaAttachments - mediaAttachments.length;\r\n        const allowedFiles = files.slice(0, max);\r\n        if (allowedFiles.length <= 0) {\r\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n          return;\r\n        }\r\n        const mediaFiles = allowedFiles.map((file) => ({\r\n          file,\r\n          type: file.type,\r\n          size: file.size,\r\n          url: URL.createObjectURL(file),\r\n          id: null,\r\n          description: null,\r\n        }));\r\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\r\n      }\r\n    };\r\n    window.addEventListener('paste', handleItems);\r\n    const handleDragover = (e) => {\r\n      // Prevent default if there's files\r\n      if (e.dataTransfer.items.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n    window.addEventListener('dragover', handleDragover);\r\n    window.addEventListener('drop', handleItems);\r\n    return () => {\r\n      window.removeEventListener('paste', handleItems);\r\n      window.removeEventListener('dragover', handleDragover);\r\n      window.removeEventListener('drop', handleItems);\r\n    };\r\n  }, [mediaAttachments]);\r\n\r\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\r\n\r\n  return (\r\n    <div id=\"compose-container-outer\">\r\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\r\n        <div class=\"compose-top\">\r\n          {currentAccountInfo?.avatarStatic && (\r\n            // <Avatar\r\n            //   url={currentAccountInfo.avatarStatic}\r\n            //   size=\"xl\"\r\n            //   alt={currentAccountInfo.username}\r\n            //   squircle={currentAccountInfo?.bot}\r\n            // />\r\n            <AccountBlock\r\n              account={currentAccountInfo}\r\n              accountInstance={currentAccount.instanceURL}\r\n              hideDisplayName\r\n            />\r\n          )}\r\n          {!standalone ? (\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  const newWin = openCompose({\r\n                    editStatus,\r\n                    replyToStatus,\r\n                    draftStatus: {\r\n                      uid: UID.current,\r\n                      status: textareaRef.current.value,\r\n                      spoilerText: spoilerTextRef.current.value,\r\n                      visibility,\r\n                      language,\r\n                      sensitive,\r\n                      poll,\r\n                      mediaAttachments,\r\n                    },\r\n                  });\r\n\r\n                  if (!newWin) {\r\n                    alert('Looks like your browser is blocking popups.');\r\n                    return;\r\n                  }\r\n\r\n                  onClose();\r\n                }}\r\n              >\r\n                <Icon icon=\"popout\" alt=\"Pop out\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"light close-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  if (confirmClose()) {\r\n                    onClose();\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon=\"x\" />\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            hasOpener && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  if (!window.opener) {\r\n                    alert('Looks like you closed the parent window.');\r\n                    return;\r\n                  }\r\n\r\n                  if (window.opener.__STATES__.showCompose) {\r\n                    const yes = confirm(\r\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\r\n                    );\r\n                    if (!yes) return;\r\n                  }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  onClose({\r\n                    fn: () => {\r\n                      const passData = {\r\n                        editStatus,\r\n                        replyToStatus,\r\n                        draftStatus: {\r\n                          uid: UID.current,\r\n                          status: textareaRef.current.value,\r\n                          spoilerText: spoilerTextRef.current.value,\r\n                          visibility,\r\n                          language,\r\n                          sensitive,\r\n                          poll,\r\n                          mediaAttachments,\r\n                        },\r\n                      };\r\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\r\n                      window.opener.__STATES__.showCompose = true;\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"popin\" alt=\"Pop in\" />\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n        {!!replyToStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={replyToStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend reply-to\">\r\n              Replying to @\r\n              {replyToStatus.account.acct || replyToStatus.account.username}\r\n              &rsquo;s post\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!!editStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={editStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend\">Editing source post</div>\r\n          </div>\r\n        )}\r\n        <form\r\n          ref={formRef}\r\n          class={`form-visibility-${visibility}`}\r\n          style={{\r\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\r\n            opacity: uiState === 'loading' ? 0.5 : 1,\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n              formRef.current.dispatchEvent(\r\n                new Event('submit', { cancelable: true }),\r\n              );\r\n            }\r\n          }}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(e.target);\r\n            const entries = Object.fromEntries(formData.entries());\r\n            console.log('ENTRIES', entries);\r\n            let { status, visibility, sensitive, spoilerText } = entries;\r\n\r\n            // Pre-cleanup\r\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\r\n\r\n            // Validation\r\n            /* Let the backend validate this\r\n          if (stringLength(status) > maxCharacters) {\r\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\r\n            return;\r\n          }\r\n          if (\r\n            sensitive &&\r\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\r\n          ) {\r\n            alert(\r\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\r\n            );\r\n            return;\r\n          }\r\n          */\r\n            if (poll) {\r\n              if (poll.options.length < 2) {\r\n                alert('Poll must have at least 2 options');\r\n                return;\r\n              }\r\n              if (poll.options.some((option) => option === '')) {\r\n                alert('Some poll choices are empty');\r\n                return;\r\n              }\r\n            }\r\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\r\n\r\n            if (mediaAttachments.length > 0) {\r\n              // If there are media attachments, check if they have no descriptions\r\n              const hasNoDescriptions = mediaAttachments.some(\r\n                (media) => !media.description?.trim?.(),\r\n              );\r\n              if (hasNoDescriptions) {\r\n                const yes = confirm(\r\n                  'Some media have no descriptions. Continue?',\r\n                );\r\n                if (!yes) return;\r\n              }\r\n            }\r\n\r\n            // Post-cleanup\r\n            spoilerText = (sensitive && spoilerText) || undefined;\r\n            status = status === '' ? undefined : status;\r\n\r\n            setUIState('loading');\r\n            (async () => {\r\n              try {\r\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\r\n                if (mediaAttachments.length > 0) {\r\n                  // Upload media attachments first\r\n                  const mediaPromises = mediaAttachments.map((attachment) => {\r\n                    const { file, description, id } = attachment;\r\n                    console.log('UPLOADING', attachment);\r\n                    if (id) {\r\n                      // If already uploaded\r\n                      return attachment;\r\n                    } else {\r\n                      const params = removeNullUndefined({\r\n                        file,\r\n                        description,\r\n                      });\r\n                      return masto.v2.mediaAttachments\r\n                        .create(params)\r\n                        .then((res) => {\r\n                          if (res.id) {\r\n                            attachment.id = res.id;\r\n                          }\r\n                          return res;\r\n                        });\r\n                    }\r\n                  });\r\n                  const results = await Promise.allSettled(mediaPromises);\r\n\r\n                  // If any failed, return\r\n                  if (\r\n                    results.some((result) => {\r\n                      return result.status === 'rejected' || !result.value?.id;\r\n                    })\r\n                  ) {\r\n                    setUIState('error');\r\n                    // Alert all the reasons\r\n                    results.forEach((result) => {\r\n                      if (result.status === 'rejected') {\r\n                        console.error(result);\r\n                        alert(result.reason || `Attachment #${i} failed`);\r\n                      }\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  console.log({ results, mediaAttachments });\r\n                }\r\n\r\n                /* NOTE:\r\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\r\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\r\n              */\r\n                let params = {\r\n                  status,\r\n                  // spoilerText,\r\n                  spoiler_text: spoilerText,\r\n                  language,\r\n                  sensitive,\r\n                  poll,\r\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\r\n                  media_ids: mediaAttachments.map(\r\n                    (attachment) => attachment.id,\r\n                  ),\r\n                };\r\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\r\n                  params.media_attributes = mediaAttachments.map(\r\n                    (attachment) => {\r\n                      return {\r\n                        id: attachment.id,\r\n                        description: attachment.description,\r\n                        // focus\r\n                        // thumbnail\r\n                      };\r\n                    },\r\n                  );\r\n                } else if (!editStatus) {\r\n                  params.visibility = visibility;\r\n                  // params.inReplyToId = replyToStatus?.id || undefined;\r\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\r\n                }\r\n                params = removeNullUndefined(params);\r\n                console.log('POST', params);\r\n\r\n                let newStatus;\r\n                if (editStatus) {\r\n                  newStatus = await masto.v1.statuses.update(\r\n                    editStatus.id,\r\n                    params,\r\n                  );\r\n                  saveStatus(newStatus, instance, {\r\n                    skipThreading: true,\r\n                  });\r\n                } else {\r\n                  try {\r\n                    newStatus = await masto.v1.statuses.create(params, {\r\n                      idempotencyKey: UID.current,\r\n                    });\r\n                  } catch (_) {\r\n                    // If idempotency key fails, try again without it\r\n                    newStatus = await masto.v1.statuses.create(params);\r\n                  }\r\n                }\r\n                setUIState('default');\r\n\r\n                // Close\r\n                onClose({\r\n                  // type: post, reply, edit\r\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\r\n                  newStatus,\r\n                  instance,\r\n                });\r\n              } catch (e) {\r\n                console.error(e);\r\n                alert(e?.reason || e);\r\n                setUIState('error');\r\n              }\r\n            })();\r\n          }}\r\n        >\r\n          <div class=\"toolbar stretch\">\r\n            <input\r\n              ref={spoilerTextRef}\r\n              type=\"text\"\r\n              name=\"spoilerText\"\r\n              placeholder=\"Content warning\"\r\n              disabled={uiState === 'loading'}\r\n              class=\"spoiler-text-field\"\r\n              lang={language}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              style={{\r\n                opacity: sensitive ? 1 : 0,\r\n                pointerEvents: sensitive ? 'auto' : 'none',\r\n              }}\r\n              onInput={() => {\r\n                updateCharCount();\r\n              }}\r\n            />\r\n            <label\r\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\r\n              title=\"Content warning or sensitive media\"\r\n            >\r\n              <input\r\n                name=\"sensitive\"\r\n                type=\"checkbox\"\r\n                checked={sensitive}\r\n                disabled={uiState === 'loading'}\r\n                onChange={(e) => {\r\n                  const sensitive = e.target.checked;\r\n                  setSensitive(sensitive);\r\n                  if (sensitive) {\r\n                    spoilerTextRef.current?.focus();\r\n                  } else {\r\n                    textareaRef.current?.focus();\r\n                  }\r\n                }}\r\n              />\r\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n            </label>{' '}\r\n            <label\r\n              class={`toolbar-button ${\r\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\r\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\r\n              title={`Visibility: ${visibility}`}\r\n            >\r\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\r\n              <select\r\n                name=\"visibility\"\r\n                value={visibility}\r\n                onChange={(e) => {\r\n                  setVisibility(e.target.value);\r\n                }}\r\n                disabled={uiState === 'loading' || !!editStatus}\r\n              >\r\n                <option value=\"public\">\r\n                  Public <Icon icon=\"earth\" />\r\n                </option>\r\n                <option value=\"unlisted\">Unlisted</option>\r\n                <option value=\"private\">Followers only</option>\r\n                <option value=\"direct\">Private mention</option>\r\n              </select>\r\n            </label>{' '}\r\n          </div>\r\n          <Textarea\r\n            ref={textareaRef}\r\n            placeholder={\r\n              replyToStatus\r\n                ? 'Post your reply'\r\n                : editStatus\r\n                ? 'Edit your post'\r\n                : 'What are you doing?'\r\n            }\r\n            required={mediaAttachments?.length === 0}\r\n            disabled={uiState === 'loading'}\r\n            lang={language}\r\n            onInput={() => {\r\n              updateCharCount();\r\n            }}\r\n            maxCharacters={maxCharacters}\r\n            performSearch={(params) => {\r\n              const { type, q, limit } = params;\r\n              if (type === 'accounts') {\r\n                return masto.v1.accounts.search({\r\n                  q,\r\n                  limit,\r\n                  resolve: false,\r\n                });\r\n              }\r\n              return masto.v2.search(params);\r\n            }}\r\n          />\r\n          {mediaAttachments?.length > 0 && (\r\n            <div class=\"media-attachments\">\r\n              {mediaAttachments.map((attachment, i) => {\r\n                const { id, file } = attachment;\r\n                const fileID = file?.size + file?.type + file?.name;\r\n                return (\r\n                  <MediaAttachment\r\n                    key={id || fileID || i}\r\n                    attachment={attachment}\r\n                    disabled={uiState === 'loading'}\r\n                    lang={language}\r\n                    onDescriptionChange={(value) => {\r\n                      setMediaAttachments((attachments) => {\r\n                        const newAttachments = [...attachments];\r\n                        newAttachments[i].description = value;\r\n                        return newAttachments;\r\n                      });\r\n                    }}\r\n                    onRemove={() => {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.filter((_, j) => j !== i);\r\n                      });\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n              <label class=\"media-sensitive\">\r\n                <input\r\n                  name=\"sensitive\"\r\n                  type=\"checkbox\"\r\n                  checked={sensitive}\r\n                  disabled={uiState === 'loading'}\r\n                  onChange={(e) => {\r\n                    const sensitive = e.target.checked;\r\n                    setSensitive(sensitive);\r\n                  }}\r\n                />{' '}\r\n                <span>Mark media as sensitive</span>{' '}\r\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n              </label>\r\n            </div>\r\n          )}\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              maxOptions={maxOptions}\r\n              maxExpiration={maxExpiration}\r\n              minExpiration={minExpiration}\r\n              maxCharactersPerOption={maxCharactersPerOption}\r\n              poll={poll}\r\n              disabled={uiState === 'loading'}\r\n              onInput={(poll) => {\r\n                if (poll) {\r\n                  const newPoll = { ...poll };\r\n                  setPoll(newPoll);\r\n                } else {\r\n                  setPoll(null);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          <div\r\n            class=\"toolbar wrap\"\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span>\r\n              <label class=\"toolbar-button\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept={supportedMimeTypes.join(',')}\r\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\r\n                  disabled={\r\n                    uiState === 'loading' ||\r\n                    mediaAttachments.length >= maxMediaAttachments ||\r\n                    !!poll\r\n                  }\r\n                  onChange={(e) => {\r\n                    const files = e.target.files;\r\n                    if (!files) return;\r\n\r\n                    const mediaFiles = Array.from(files).map((file) => ({\r\n                      file,\r\n                      type: file.type,\r\n                      size: file.size,\r\n                      url: URL.createObjectURL(file),\r\n                      id: null, // indicate uploaded state\r\n                      description: null,\r\n                    }));\r\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\r\n\r\n                    // Validate max media attachments\r\n                    if (\r\n                      mediaAttachments.length + mediaFiles.length >\r\n                      maxMediaAttachments\r\n                    ) {\r\n                      alert(\r\n                        `You can only attach up to ${maxMediaAttachments} files.`,\r\n                      );\r\n                    } else {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.concat(mediaFiles);\r\n                      });\r\n                    }\r\n                    // Reset\r\n                    e.target.value = '';\r\n                  }}\r\n                />\r\n                <Icon icon=\"attachment\" />\r\n              </label>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={\r\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\r\n                }\r\n                onClick={() => {\r\n                  setPoll({\r\n                    options: ['', ''],\r\n                    expiresIn: 24 * 60 * 60, // 1 day\r\n                    multiple: false,\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"poll\" alt=\"Add poll\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  setShowEmoji2Picker(true);\r\n                }}\r\n              >\r\n                <Icon icon=\"emoji2\" />\r\n              </button>\r\n            </span>\r\n            <div class=\"spacer\" />\r\n            {uiState === 'loading' ? (\r\n              <Loader abrupt />\r\n            ) : (\r\n              <CharCountMeter\r\n                maxCharacters={maxCharacters}\r\n                hidden={uiState === 'loading'}\r\n              />\r\n            )}\r\n            <label\r\n              class={`toolbar-button ${\r\n                language !== prevLanguage.current ? 'highlight' : ''\r\n              }`}\r\n            >\r\n              <span class=\"icon-text\">\r\n                {supportedLanguagesMap[language]?.native}\r\n              </span>\r\n              <select\r\n                name=\"language\"\r\n                value={language}\r\n                onChange={(e) => {\r\n                  const { value } = e.target;\r\n                  setLanguage(value || DEFAULT_LANG);\r\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\r\n                }}\r\n                disabled={uiState === 'loading'}\r\n              >\r\n                {supportedLanguages\r\n                  .sort(([codeA, commonA], [codeB, commonB]) => {\r\n                    const { contentTranslationHideLanguages = [] } =\r\n                      states.settings;\r\n                    // Sort codes that same as language, prevLanguage, DEFAULT_LANGUAGE and all the ones in states.settings.contentTranslationHideLanguages, to the top\r\n                    if (\r\n                      codeA === language ||\r\n                      codeA === prevLanguage ||\r\n                      codeA === DEFAULT_LANG ||\r\n                      contentTranslationHideLanguages?.includes(codeA)\r\n                    )\r\n                      return -1;\r\n                    if (\r\n                      codeB === language ||\r\n                      codeB === prevLanguage ||\r\n                      codeB === DEFAULT_LANG ||\r\n                      contentTranslationHideLanguages?.includes(codeB)\r\n                    )\r\n                      return 1;\r\n                    return commonA.localeCompare(commonB);\r\n                  })\r\n                  .map(([code, common, native]) => (\r\n                    <option value={code}>\r\n                      {common} ({native})\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </label>{' '}\r\n            <button\r\n              type=\"submit\"\r\n              class=\"large\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showEmoji2Picker && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEmoji2Picker(false);\r\n            }\r\n          }}\r\n        >\r\n          <CustomEmojisModal\r\n            masto={masto}\r\n            instance={instance}\r\n            onClose={() => {\r\n              setShowEmoji2Picker(false);\r\n            }}\r\n            onSelect={(emoji) => {\r\n              const emojiWithSpace = ` ${emoji} `;\r\n              const textarea = textareaRef.current;\r\n              if (!textarea) return;\r\n              const { selectionStart, selectionEnd } = textarea;\r\n              const text = textarea.value;\r\n              const newText =\r\n                text.slice(0, selectionStart) +\r\n                emojiWithSpace +\r\n                text.slice(selectionEnd);\r\n              textarea.value = newText;\r\n              textarea.selectionStart = textarea.selectionEnd =\r\n                selectionEnd + emojiWithSpace.length;\r\n              textarea.focus();\r\n              textarea.dispatchEvent(new Event('input'));\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction autoResizeTextarea(textarea) {\r\n  if (!textarea) return;\r\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\r\n  if (offsetHeight < window.innerHeight) {\r\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\r\n    // No idea why it does that, will re-investigate in far future\r\n    const offset = offsetHeight - clientHeight;\r\n    textarea.style.height = value ? scrollHeight + offset + 'px' : null;\r\n  }\r\n}\r\n\r\nconst Textarea = forwardRef((props, ref) => {\r\n  const { masto } = api();\r\n  const [text, setText] = useState(ref.current?.value || '');\r\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\r\n  const snapStates = useSnapshot(states);\r\n  const charCount = snapStates.composerCharacterCount;\r\n\r\n  const customEmojis = useRef();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        console.log({ emojis });\r\n        customEmojis.current = emojis;\r\n      } catch (e) {\r\n        // silent fail\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const textExpanderRef = useRef();\r\n  const textExpanderTextRef = useRef('');\r\n  useEffect(() => {\r\n    let handleChange, handleValue, handleCommited;\r\n    if (textExpanderRef.current) {\r\n      handleChange = (e) => {\r\n        // console.log('text-expander-change', e);\r\n        const { key, provide, text } = e.detail;\r\n        textExpanderTextRef.current = text;\r\n\r\n        if (text === '') {\r\n          provide(\r\n            Promise.resolve({\r\n              matched: false,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (key === ':') {\r\n          // const emojis = customEmojis.current.filter((emoji) =>\r\n          //   emoji.shortcode.startsWith(text),\r\n          // );\r\n          const emojis = filterShortcodes(customEmojis.current, text);\r\n          let html = '';\r\n          emojis.forEach((emoji) => {\r\n            const { shortcode, url } = emoji;\r\n            html += `\r\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\r\n                <img src=\"${encodeHTML(\r\n                  url,\r\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \r\n                :${encodeHTML(shortcode)}:\r\n              </li>`;\r\n          });\r\n          // console.log({ emojis, html });\r\n          menu.innerHTML = html;\r\n          provide(\r\n            Promise.resolve({\r\n              matched: emojis.length > 0,\r\n              fragment: menu,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        const type = {\r\n          '@': 'accounts',\r\n          '#': 'hashtags',\r\n        }[key];\r\n        provide(\r\n          new Promise((resolve) => {\r\n            const searchResults = performSearch({\r\n              type,\r\n              q: text,\r\n              limit: 5,\r\n            });\r\n            searchResults.then((value) => {\r\n              if (text !== textExpanderTextRef.current) {\r\n                return;\r\n              }\r\n              console.log({ value, type, v: value[type] });\r\n              const results = value[type] || value;\r\n              console.log('RESULTS', value, results);\r\n              let html = '';\r\n              results.forEach((result) => {\r\n                const {\r\n                  name,\r\n                  avatarStatic,\r\n                  displayName,\r\n                  username,\r\n                  acct,\r\n                  emojis,\r\n                } = result;\r\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\r\n                // const item = menuItem.cloneNode();\r\n                if (acct) {\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\r\n                      <span class=\"avatar\">\r\n                        <img src=\"${encodeHTML(\r\n                          avatarStatic,\r\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\r\n                      </span>\r\n                      <span>\r\n                        <b>${displayNameWithEmoji || username}</b>\r\n                        <br>@${encodeHTML(acct)}\r\n                      </span>\r\n                    </li>\r\n                  `;\r\n                } else {\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\r\n                      <span>#<b>${encodeHTML(name)}</b></span>\r\n                    </li>\r\n                  `;\r\n                }\r\n                menu.innerHTML = html;\r\n              });\r\n              console.log('MENU', results, menu);\r\n              resolve({\r\n                matched: results.length > 0,\r\n                fragment: menu,\r\n              });\r\n            });\r\n          }),\r\n        );\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-change',\r\n        handleChange,\r\n      );\r\n\r\n      handleValue = (e) => {\r\n        const { key, item } = e.detail;\r\n        if (key === ':') {\r\n          e.detail.value = `:${item.dataset.value}:`;\r\n        } else {\r\n          e.detail.value = `${key}${item.dataset.value}`;\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-value',\r\n        handleValue,\r\n      );\r\n\r\n      handleCommited = (e) => {\r\n        const { input } = e.detail;\r\n        setText(input.value);\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-committed',\r\n        handleCommited,\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (textExpanderRef.current) {\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-change',\r\n          handleChange,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-value',\r\n          handleValue,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-committed',\r\n          handleCommited,\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <text-expander ref={textExpanderRef} keys=\"@ # :\">\r\n      <textarea\r\n        autoCapitalize=\"sentences\"\r\n        autoComplete=\"on\"\r\n        autoCorrect=\"on\"\r\n        spellCheck=\"true\"\r\n        dir=\"auto\"\r\n        rows=\"6\"\r\n        cols=\"50\"\r\n        {...textareaProps}\r\n        ref={ref}\r\n        name=\"status\"\r\n        value={text}\r\n        onKeyDown={(e) => {\r\n          // Get line before cursor position after pressing 'Enter'\r\n          const { key, target } = e;\r\n          if (key === 'Enter') {\r\n            try {\r\n              const { value, selectionStart } = target;\r\n              const textBeforeCursor = value.slice(0, selectionStart);\r\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\r\n              if (lastLine) {\r\n                // If line starts with \"- \" or \"12. \"\r\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\r\n                  // insert \"- \" at cursor position\r\n                  const [_, preSpaces, bullet, postSpaces, anything] =\r\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\r\n                  if (anything) {\r\n                    e.preventDefault();\r\n                    const [number] = bullet.match(/\\d+/) || [];\r\n                    const newBullet = number ? `${+number + 1}.` : '-';\r\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\r\n                    target.setRangeText(text, selectionStart, selectionStart);\r\n                    const pos = selectionStart + text.length;\r\n                    target.setSelectionRange(pos, pos);\r\n                  } else {\r\n                    // trim the line before the cursor, then insert new line\r\n                    const pos = selectionStart - lastLine.length;\r\n                    target.setRangeText('', pos, selectionStart);\r\n                  }\r\n                  autoResizeTextarea(target);\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // silent fail\r\n              console.error(e);\r\n            }\r\n          }\r\n        }}\r\n        onInput={(e) => {\r\n          const { target } = e;\r\n          setText(target.value);\r\n          autoResizeTextarea(target);\r\n          props.onInput?.(e);\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          height: '4em',\r\n          '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\r\n        }}\r\n      />\r\n    </text-expander>\r\n  );\r\n});\r\n\r\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\r\n  const snapStates = useSnapshot(states);\r\n  const charCount = snapStates.composerCharacterCount;\r\n  const leftChars = maxCharacters - charCount;\r\n  if (hidden) {\r\n    return <meter class=\"donut\" hidden />;\r\n  }\r\n  return (\r\n    <meter\r\n      class={`donut ${\r\n        leftChars <= -10\r\n          ? 'explode'\r\n          : leftChars <= 0\r\n          ? 'danger'\r\n          : leftChars <= 20\r\n          ? 'warning'\r\n          : ''\r\n      }`}\r\n      value={charCount}\r\n      max={maxCharacters}\r\n      data-left={leftChars}\r\n      title={`${leftChars}/${maxCharacters}`}\r\n      style={{\r\n        '--percentage': (charCount / maxCharacters) * 100,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction MediaAttachment({\r\n  attachment,\r\n  disabled,\r\n  lang,\r\n  onDescriptionChange = () => {},\r\n  onRemove = () => {},\r\n}) {\r\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\r\n  const { type, id, file } = attachment;\r\n  const url = file ? URL.createObjectURL(file) : attachment.url;\r\n  console.log({ attachment });\r\n  const [description, setDescription] = useState(attachment.description);\r\n  const suffixType = type.split('/')[0];\r\n  const debouncedOnDescriptionChange = useDebouncedCallback(\r\n    onDescriptionChange,\r\n    250,\r\n  );\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const textareaRef = useRef(null);\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showModal && textareaRef.current) {\r\n      timer = setTimeout(() => {\r\n        textareaRef.current.focus();\r\n      }, 100);\r\n    }\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [showModal]);\r\n\r\n  const descTextarea = (\r\n    <>\r\n      {!!id && !supportsEdit ? (\r\n        <div class=\"media-desc\">\r\n          <span class=\"tag\">Uploaded</span>\r\n          <p title={description}>\r\n            {attachment.description || <i>No description</i>}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={description || ''}\r\n          lang={lang}\r\n          placeholder={\r\n            {\r\n              image: 'Image description',\r\n              video: 'Video description',\r\n              audio: 'Audio description',\r\n            }[suffixType]\r\n          }\r\n          autoCapitalize=\"sentences\"\r\n          autoComplete=\"on\"\r\n          autoCorrect=\"on\"\r\n          spellCheck=\"true\"\r\n          dir=\"auto\"\r\n          disabled={disabled}\r\n          maxlength=\"1500\" // Not unicode-aware :(\r\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\r\n          onInput={(e) => {\r\n            const { value } = e.target;\r\n            setDescription(value);\r\n            debouncedOnDescriptionChange(value);\r\n          }}\r\n        ></textarea>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div class=\"media-attachment\">\r\n        <div\r\n          class=\"media-preview\"\r\n          tabIndex=\"0\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          {suffixType === 'image' ? (\r\n            <img src={url} alt=\"\" />\r\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n            <video src={url} playsinline muted />\r\n          ) : suffixType === 'audio' ? (\r\n            <audio src={url} controls />\r\n          ) : null}\r\n        </div>\r\n        {descTextarea}\r\n        <div class=\"media-aside\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain close-button\"\r\n            disabled={disabled}\r\n            onClick={onRemove}\r\n          >\r\n            <Icon icon=\"x\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowModal(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <h2>\r\n                {\r\n                  {\r\n                    image: 'Edit image description',\r\n                    video: 'Edit video description',\r\n                    audio: 'Edit audio description',\r\n                  }[suffixType]\r\n                }\r\n              </h2>\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <div class=\"media-preview\">\r\n                {suffixType === 'image' ? (\r\n                  <img src={url} alt=\"\" />\r\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n                  <video src={url} playsinline controls />\r\n                ) : suffixType === 'audio' ? (\r\n                  <audio src={url} controls />\r\n                ) : null}\r\n              </div>\r\n              <div class=\"media-form\">\r\n                {descTextarea}\r\n                <footer>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"light block\"\r\n                    onClick={() => {\r\n                      setShowModal(false);\r\n                    }}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Poll({\r\n  lang,\r\n  poll,\r\n  disabled,\r\n  onInput = () => {},\r\n  maxOptions,\r\n  maxExpiration,\r\n  minExpiration,\r\n  maxCharactersPerOption,\r\n}) {\r\n  const { options, expiresIn, multiple } = poll;\r\n\r\n  return (\r\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\r\n      <div class=\"poll-choices\">\r\n        {options.map((option, i) => (\r\n          <div class=\"poll-choice\" key={i}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={option}\r\n              disabled={disabled}\r\n              maxlength={maxCharactersPerOption}\r\n              placeholder={`Choice ${i + 1}`}\r\n              lang={lang}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              onInput={(e) => {\r\n                const { value } = e.target;\r\n                options[i] = value;\r\n                onInput(poll);\r\n              }}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"plain2 poll-button\"\r\n              disabled={disabled || options.length <= 1}\r\n              onClick={() => {\r\n                options.splice(i, 1);\r\n                onInput(poll);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" size=\"s\" />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain2 poll-button\"\r\n          disabled={disabled || options.length >= maxOptions}\r\n          onClick={() => {\r\n            options.push('');\r\n            onInput(poll);\r\n          }}\r\n        >\r\n          +\r\n        </button>{' '}\r\n        <label class=\"multiple-choices\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={multiple}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { checked } = e.target;\r\n              poll.multiple = checked;\r\n              onInput(poll);\r\n            }}\r\n          />{' '}\r\n          Multiple choices\r\n        </label>\r\n        <label class=\"expires-in\">\r\n          Duration{' '}\r\n          <select\r\n            value={expiresIn}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n              poll.expiresIn = value;\r\n              onInput(poll);\r\n            }}\r\n          >\r\n            {Object.entries(expiryOptions)\r\n              .filter(([label, value]) => {\r\n                return value >= minExpiration && value <= maxExpiration;\r\n              })\r\n              .map(([label, value]) => (\r\n                <option value={value} key={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain remove-poll-button\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            onInput(null);\r\n          }}\r\n        >\r\n          Remove poll\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction filterShortcodes(emojis, searchTerm) {\r\n  searchTerm = searchTerm.toLowerCase();\r\n\r\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\r\n  return emojis\r\n    .sort((a, b) => {\r\n      let aLower = a.shortcode.toLowerCase();\r\n      let bLower = b.shortcode.toLowerCase();\r\n\r\n      let aStartsWith = aLower.startsWith(searchTerm);\r\n      let bStartsWith = bLower.startsWith(searchTerm);\r\n      let aContains = aLower.includes(searchTerm);\r\n      let bContains = bLower.includes(searchTerm);\r\n      let bothStartWith = aStartsWith && bStartsWith;\r\n      let bothContain = aContains && bContains;\r\n\r\n      return bothStartWith\r\n        ? a.length - b.length\r\n        : aStartsWith\r\n        ? -1\r\n        : bStartsWith\r\n        ? 1\r\n        : bothContain\r\n        ? a.length - b.length\r\n        : aContains\r\n        ? -1\r\n        : bContains\r\n        ? 1\r\n        : 0;\r\n    })\r\n    .slice(0, 5);\r\n}\r\n\r\nfunction encodeHTML(str) {\r\n  return str.replace(/[&<>\"']/g, function (char) {\r\n    return '&#' + char.charCodeAt(0) + ';';\r\n  });\r\n}\r\n\r\nfunction removeNullUndefined(obj) {\r\n  for (let key in obj) {\r\n    if (obj[key] === null || obj[key] === undefined) {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction CustomEmojisModal({\r\n  masto,\r\n  instance,\r\n  onClose = () => {},\r\n  onSelect = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const customEmojisList = useRef([]);\r\n  const [customEmojis, setCustomEmojis] = useState({});\r\n  const recentlyUsedCustomEmojis = useMemo(\r\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\r\n  );\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        // Group emojis by category\r\n        const emojisCat = {\r\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\r\n            emojis.find((e) => e.shortcode === emoji.shortcode),\r\n          ),\r\n        };\r\n        const othersCat = [];\r\n        emojis.forEach((emoji) => {\r\n          if (!emoji.visibleInPicker) return;\r\n          customEmojisList.current?.push?.(emoji);\r\n          if (!emoji.category) {\r\n            othersCat.push(emoji);\r\n            return;\r\n          }\r\n          if (!emojisCat[emoji.category]) {\r\n            emojisCat[emoji.category] = [];\r\n          }\r\n          emojisCat[emoji.category].push(emoji);\r\n        });\r\n        if (othersCat.length) {\r\n          emojisCat['--others--'] = othersCat;\r\n        }\r\n        setCustomEmojis(emojisCat);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <b>Custom emojis</b>{' '}\r\n        {uiState === 'loading' ? (\r\n          <Loader />\r\n        ) : (\r\n          <small class=\"insignificant\"> • {instance}</small>\r\n        )}\r\n      </header>\r\n      <main>\r\n        <div class=\"custom-emojis-list\">\r\n          {uiState === 'error' && (\r\n            <div class=\"ui-state\">\r\n              <p>Error loading custom emojis</p>\r\n            </div>\r\n          )}\r\n          {uiState === 'default' &&\r\n            Object.entries(customEmojis).map(\r\n              ([category, emojis]) =>\r\n                !!emojis?.length && (\r\n                  <>\r\n                    <div class=\"section-header\">\r\n                      {{\r\n                        '--recent--': 'Recently used',\r\n                        '--others--': 'Others',\r\n                      }[category] || category}\r\n                    </div>\r\n                    <section>\r\n                      {emojis.map((emoji) => (\r\n                        <button\r\n                          key={emoji}\r\n                          type=\"button\"\r\n                          class=\"plain4\"\r\n                          onClick={() => {\r\n                            onClose();\r\n                            requestAnimationFrame(() => {\r\n                              onSelect(`:${emoji.shortcode}:`);\r\n                            });\r\n                            let recentlyUsedCustomEmojis =\r\n                              store.account.get('recentlyUsedCustomEmojis') ||\r\n                              [];\r\n                            const recentlyUsedEmojiIndex =\r\n                              recentlyUsedCustomEmojis.findIndex(\r\n                                (e) => e.shortcode === emoji.shortcode,\r\n                              );\r\n                            if (recentlyUsedEmojiIndex !== -1) {\r\n                              // Move emoji to index 0\r\n                              recentlyUsedCustomEmojis.splice(\r\n                                recentlyUsedEmojiIndex,\r\n                                1,\r\n                              );\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                            } else {\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                              // Remove unavailable ones\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.filter((e) =>\r\n                                  customEmojisList.current?.find?.(\r\n                                    (emoji) => emoji.shortcode === e.shortcode,\r\n                                  ),\r\n                                );\r\n                              // Limit to 10\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.slice(0, 10);\r\n                            }\r\n\r\n                            // Store back\r\n                            store.account.set(\r\n                              'recentlyUsedCustomEmojis',\r\n                              recentlyUsedCustomEmojis,\r\n                            );\r\n                          }}\r\n                          title={`:${emoji.shortcode}:`}\r\n                        >\r\n                          <picture>\r\n                            {!!emoji.staticUrl && (\r\n                              <source\r\n                                srcset={emoji.staticUrl}\r\n                                media=\"(prefers-reduced-motion: reduce)\"\r\n                              />\r\n                            )}\r\n                            <img\r\n                              class=\"shortcode-emoji\"\r\n                              src={emoji.url || emoji.staticUrl}\r\n                              alt={emoji.shortcode}\r\n                              width=\"16\"\r\n                              height=\"16\"\r\n                              loading=\"lazy\"\r\n                              decoding=\"async\"\r\n                            />\r\n                          </picture>\r\n                        </button>\r\n                      ))}\r\n                    </section>\r\n                  </>\r\n                ),\r\n            )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compose;\r\n","import { useLayoutEffect } from 'preact/hooks';\r\nimport { matchPath } from 'react-router-dom';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport states from './states';\r\n\r\nconst { VITE_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\r\n\r\nexport default function useTitle(title, path) {\r\n  function setTitle() {\r\n    const { currentLocation } = states;\r\n    const hasPaths = Array.isArray(path);\r\n    let paths = hasPaths ? path : [];\r\n    // Workaround for matchPath not working for optional path segments\r\n    // https://github.com/remix-run/react-router/discussions/9862\r\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\r\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\r\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\r\n    }\r\n    let matched = false;\r\n    if (paths.length) {\r\n      matched = paths.some((p) => matchPath(p, currentLocation));\r\n    } else if (path) {\r\n      matched = matchPath(path, currentLocation);\r\n    }\r\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\r\n    if (matched) {\r\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const unsub = subscribeKey(states, 'currentLocation', setTitle);\r\n    setTitle();\r\n    return unsub;\r\n  }, [title, path]);\r\n}\r\n"],"file":"assets/useTitle-128c296e.js"}