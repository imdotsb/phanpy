{"version":3,"mappings":"4uCAEO,SAASA,GAAWC,EAAI,CAC7B,MAAMC,EAAWC,EAAMC,MAAMC,QAAQ,UAAU,GAAK,GAC7CH,SAASI,KAAYC,KAAEC,KAAKP,KAAOA,CAAE,GAAKC,EAAS,CAAC,CAC7D,CAEO,SAASO,GAAwBC,EAAa,CAEnD,OADiBP,EAAMC,MAAMC,QAAQ,UAAU,GAAK,IACpCC,KAAYC,KAAEG,cAAgBA,CAAW,CAC3D,CAEO,SAASC,GAAqBC,EAAU,CAE7C,OADiBT,EAAMC,MAAMC,QAAQ,UAAU,GAAK,IACpCC,KAAYC,KAAEM,cAAgBD,CAAQ,CACxD,CAEO,SAASE,IAAoB,CAC7BC,OAAOC,6BAIZ,MAAAC,EAAAd,EAAA,8BAEMe,OADiBf,IAAkB,CAEzC,CACF,SAAAgB,IAAA,CAEO,MAAAD,EAA+BJ,KAC9BI,CACA,YAAAL,EACJA,MACM,GAAAZ,CAAEA,CAAG,EAAAiB,EACb,MAAIA,WACJ,CACF,SAAAE,GAAAF,EAAA,CAEO,MAAAhB,UAA8B,wBAC7BA,IAAiBE,QAAcG,EAAA,UAAUW,EAAO,SAChDG,GACNA,EAAS,KAAAH,EAAA,KACPG,EAAIb,YAAeA,cACnBa,EAAIR,YAAcK,EAAQL,YAC1BQ,EAAIX,WAAsBA,UAErBR,EAAA,KAAAgB,CAAA,EAEPf,EAAA,yBAAAD,CAAA,EACME,UAAc,qBAAoBc,EAAA,QACxCf,CACF,SAAAmB,GAAAC,EAAA,CAEO,MAAArB,UAAoC,wBAEnCA,IAAiBE,QAAcG,EAAA,UAAUgB,EAAO,IAChDF,IACGA,EAAA,mBAAAE,EAAA,aAAAF,EAAA,cAAAE,EAAA,QAAAF,EAAA,qBAAAE,EAAA,iBACPF,EACMb,KAAKgB,CAITH,GAAWA,EAAA,KACT,GAAGA,CAAIb,EAETL,EAAA,yBAAAD,CAAA,EAEF,CAEJ,IAAAuB,GAAA,KAEsB,SAAAC,IAAA,CACf,GAAAD,GACDA,UAAwBA,IACxB,MAAAP,EAAAJ,KACII,EAA4Bf,EAAA,2BAC5BwB,EAAYxB,EAAYE,wBAAmB,EAC3CO,UAAmBC,GAAwB,CACzCY;;EAGDG,CAAA,IAAAzB,EAAA,uBAAiE,kBAElEC,EACNyB,CACA,CAAQ,SACVC,GAAAlB,EAAA,CACF,MAIA,cAAAmB,EACQ,oBAAAC,EACJD,eACAC,UACAC,YACAC,IACAC,kCACEvB,IAEEwB,8CAA0BA,IAE9BA,IACFA,EAAA,gBAAAA,EAAA,cAAAH,IAEEG,SAA2BH,4BAC7B,OAAAE,IAEME,oDAAuBA,EAAU,gBACvCA,EAAgB,gBAAhBA,EAAgB,cAAAF,EAAA,eACdE,EAAMC,aAAND,EAAMC,yBACND,EAAME,gBAANF,EAAME,cAAkBJ,EAAWI,gBAEnCF,CACF,GAAAN,EAEO,SAAAK,EACL,MAAAC,CAAGN,CACHK,CAEF,SAAAI,IAAA,CACF,MAAA5B,EAAAc,KAEO,OAAAI,GAA2ClB,CAAA,CAChD,CC1HF,MAAMR,GAAQ,CACZqC,IAAMC,GAAQ,CACZ,GAAI,CACF,OAAOC,aAAaC,QAAQF,CAAG,CAChC,MAAW,CACVG,OAAO,IACP,CACF,EACF,QAACH,GAAA,CACM,IACD,kBAAAtC,GAAA,IAAAsC,CAAA,QACKI,CACP,OAAOlB,IACPiB,CACA,EACF,KAAAH,EAAAK,IAAA,CACD,IACIC,OAAMD,aAAU,QAAAL,EAAAK,CAAA,CACf,OACF,OAAOJ,IACR,CACCE,EACA,SAAAH,EAAWK,IAAA,CACb,IACD,OAAA3C,GAAA,IAAAsC,EAAA,eAAAK,CAAA,EACDE,MAAa,CACP,WACF,GAEAJ,OAAQK,CACR,IACF,+BAAAR,CAAA,CACD,OACE,OAAW,IACR,CACF,GAEAG,GAAQK,CACR,IAAAR,GAAW,CACb,IACF,8BAAAA,CAAA,CACD,OAEKS,OAAO,IACR,GAEC,QAAAT,GAAqB,CACvB,GAASd,CACPiB,OAAO,KAAK,MAAGM,GAAA,IAAAT,CAAA,EACf,MAAW,CACb,WACD,CACM,MACD,CAAAA,EAAAK,IAAA,IACKD,CACP,OAAOlB,eAAG,QAAAc,EAAAK,CAAA,CACVF,MAAQK,CACR,OAAO,IACT,CACD,EACDF,QAAS,CAAAN,MAAY,CACnB,GAAI,CACF,OAAOU,SAAeC,KAAO,WAAY,EAC1C,MAAW,CACVR,OAAO,IACP,CACF,EACF,IAACH,GAAA,CACDO,IACM,iCAAAP,CAAA,CACF,MAAc,CACd,OAAOd,IACPiB,CACA,CACF,EAGI3B,GAAA,CACF,IAAAwB,GAAqB,CACvB,GAASd,CACPiB,OAAOzC,GAAMwB,QAAEc,CAAA,EAAAvB,GAAA,EACf,MAAW,CACb,WACF,CACD,cAED,IACMD,QAAUd,GAAA,QAAAsC,CAAA,MACX,OAAAY,EAAWnC,IAAA,EAAA4B,EACR3C,GAAA,QAAAsC,EAAAY,CAAA,OACKlD,CACP,OAAOwB,IACPiB,CACA,EACF,IAAAH,GAAA,CACD,IACIM,MAAIM,EAAYlD,GAAA,QAAAsC,CAAA,MACf,cAAAY,EAAAnC,GAAA,GACImC,GAAOlD,QAAMC,EAAOiD,CAAI,CAC9BA,MAAwB,CACxB,OAAOlD,IACR,CACCyC,CACA,EACF1C,EAAA,CACF,MAAAC,GACAmD,uBChGIC,GAAmB,kBAMnBC,GAAO,GAOPC,GAAc,GACpB3C,OAAO4C,iBAAmBD,GAG1B,IAAIE,GAEG,SAASC,GAAW,CAAEjD,WAAUF,aAAY,EAAG,CAChD,eAAeoD,KAAKlD,CAAQ,IAC9BA,EAAWA,EACRmD,QAAQ,eAAgB,EAAE,EAC1BA,QAAQ,OAAQ,EAAE,EAClBC,eAEL,MAAMC,EAAMrD,EAAY,WAAUA,CAAS,GAAK,WAAU4C,EAAiB,GAQrEU,EAAS,CACbC,MAPYC,GAAoB,CAChCH,MACAvD,cACA2D,QAAS,GACX,CAAC,EAICzD,WACAF,eAEF+C,UAAK7C,CAAQ,EAAIsD,EACZR,GAAY9C,CAAQ,IAAG8C,GAAY9C,CAAQ,EAAI,IAChDF,IAAagD,GAAY9C,CAAQ,EAAEF,CAAW,EAAIwD,GAE/CA,CACT,CAIO,eAAeI,GAAaJ,EAAQtD,EAAU,CACnDiC,KAAO,CACD,MAAAsB,EAAEA,aAAOzD,IACf,IAAAF,EACA,GAAIA,CACAA,EAAA,MAAA2D,EAAA,yBACWA,EACf,GAAE,CAAA3D,EACE,IACEA,EAAA,MAAA2D,EAAA,yBACWA,EAEjB,IAAA3D,EAAA,OACA,MAEM,IAAA+D,EACJ,MACG,aAAAC,CACHC,EAAI,CAAE,EAAe,OAAAC,EACrB,eACM,MACN3C,WAAiB0C,EAAI,CAAE,CAAEE,IAAU,EAAAnE,EAAWmB,EAACxB,EAAA,+BAgBjD,IAfIK,GAAIkE,KACR/C,GAAe+C,GAAQH,GAAM,QAAQ,eAAiB,IAAE,kCAAA/D,GAE7CI,IAMXe,EAAAf,EAAA,eAAAJ,KAEW,MAACI,QAAQ,YAAae,CAAS,EAG1C,uBACA6C,GAAAG,GAAA,CAGE9B,MAAO+B,EAAKC,GAAkC,CAC9C,gBAAAF,GAAAH,EACA,YAAA9D,EACMkE,eAAY,cAEL,UAAAA,CACXE,CACF,CAGAjC,eAAsCkC,GAAAb,EAAAtD,EAASF,EAAAsE,EAAA,CACjD,MACF,MAAAb,KAEAc,EAAA,MAAAd,EAAA,gCACOhE,EAAA,6BAAiC8E,EAAYvE,IAClDU,GAAM,CAAE+C,mBAAgBvD,EAAA,cAClBqE,cAEC,SAAAD,EACF,CAEL5D,CAGa,eAAA8D,GAAAhB,EAAA,CACXc,IACA,MACJ,MAAAb,KAEAgB,EAAA,MAAAhB,EAAA,uBACAhE,EAAsB+E,0BAAeA,CAAS,OACxC,GAGG,YAASlC,CAChB,SAAApC,EACE,YAAAF,EACAmC,YACF,QAAA3B,CACF,oBAI6CkE,GAF7CxE,IACAA,IAAA,sBACsDA,GAAAF,EAAA,CAAEQ,2CAAc,SAAAN,EACpE,YAAAF,CACA,GACU,CACV,MAAAyD,aAEA,EAAAD,EACItD,OACIsD,QAEStD,YAAUF,SAAc,iBACjC,SAAAE,EAAS+D,CAAU,KACzB,UAAO/D,KAAA8C,GACLS,GAAKT,GAAA9C,CAAA,EAAAF,CAAA,GACI,MAAAwD,EAAAR,GAAA9C,CAAA,EAAAF,CAAA,EACH,CACN2E,QACAzE,WACD,EAAAsD,EACH,eAGE,UAAAS,EACA9B,SACWjC,cAAY8C,GACjBA,gBAEIQ,CACN,MAAMhD,EAAAT,GAAAC,CAAA,KAAOQ,EAAA,CAAEyD,sBAAoB/D,EAAAM,EAAA,iCAC5BgD,EAAAL,GAAA,CACA,SAAAjD,EACI,YAAAF,EACH,EACN2E,CACAzE,QACD,UAAA+D,CACI,EAAAT,EACE,MAAI,CACX,MAAAC,EACIjD,YACF,OAAAgD,EACA,cAAiBhD,GACXgD,WAAgCxD,KAAY,OAAE,0CAIzC0E,EAETC,KADMnE,GAAAlB,GAAAoF,CAAA,EACNC,GACAzE,sBACDA,EAAAM,EAAA,iCACIgD,IAAAoB,EAAA5B,GAAA9C,CAAA,gBAAA0E,EAAA5E,KAAAmD,GAAA,CACL,SAAAjD,EACF,YAAAF,CACF,GACF,CACF,MAAAyD,aAEA,EAAAD,EACIhD,MAAO,CACTA,QACIA,YACF,OAAAgD,EACA,cAAiBhD,GACXgD,WAEmBxD,KAAY,OAAE,qBAAA0E,CAAA,cACxBT,kBAER,KACLA,mBAAS,YAAA/D,QACH,CACNyE,SAAmB,MACnBzE,uBACD,OAAAgD,GACI,iBACL,SAAAhD,CACF,EAGF,IAAMK,iBAAc,eAAoBL,EAAE,OAE1C,YAAAF,KAEE,OAAAkD,KAAqB2B,EAAA7B,GAAU9C,KAAV,YAAA2E,EAAyB7E,KAAAmD,GAAA,CACrC,SAAAjD,EACLuD,gBAEAD,CACAmB,SAAmB,MACnBzE,uBACD,OAAAgD,GACH,iBAEI3C,WACMP,CAAY,MAAIO,EAAcN,GAAAC,CAAA,KACrB4E,EAAA,OAEM9E,EAAA8E,EAAA,YAAE9E,qCAAc,SAAAE,EAChC,YAAAF,IAEI,CACTwD,QACAmB,WACAzE,IACF,MAAC,CACH,MAAAuD,EAEA,UAAAQ,EACIa,SACF,cAAiB,GACXtB,WAEmBxD,CAAY,MAAEwD,EAAAT,GAAA7C,CAAA,GAAAiD,GAAA,CACvC,SAAAjD,IAAe+D,CAAU,MAAAR,EACzB,UAAAQ,iBAEEA,QACM,CACNU,QACAzE,YACF,OAAAsD,EACF,gBAAAxD,EAEMwD,UAAwCtD,CAAS,IACxC+D,GAAWjE,aAAsBkD,GAAA,MACzC,UAAAA,GAAA,UACLO,OAAKP,GACLe,cAAS,GACTT,SAAMN,GAAA,aAGP3C,EAAA,CACH,oBAEA,YAAAL,CACA,IACE,OAAAgD,KAAO6B,EAAA/B,GAAA9C,CAAA,gBAAA6E,EAAA/E,KAAAmD,GAAA,CACLM,WACAQ,aACAT,GACAmB,CACAzE,MAAQgD,SACT,UAAAA,GAAA,UACH,OAAAA,GACI3C,cAAgB,GACZ,SAAAL,EAAeC,OAGEqD,EAAAT,GAAAD,EAAA,GAAAK,GAAA,CAAEnD,WAAY,GAC9B,oBAGLwD,IACAmB,OACAzE,QACF,UAAA+D,EACF,OAAAT,mBAEA,SAAAV,GAEyC5C,CAA2B,OAAE,SACtE,kBAAAgD,WAAee,cAAU,EChT3B5D,OAAO2E,WAAaC,GAEpB,SAASA,GAAUC,EAAO,CACpB,OAAOA,GAAU,WACnBA,EAAQ,CAAEC,KAAMD,IAElB,KAAM,CAAEE,UAASC,QAAO,GAAGC,CAAM,EAAGJ,EAC9BK,EAAQC,GAAS,CACrBC,UAAY,GAAEL,GAAWF,EAAMQ,YAAc,aAAe,EAAG,GAC/DC,QAAS,SACTC,SAAU,SACV,GAAGN,EACHF,QAASA,IAAM,CACbA,WAAUG,EACZ,CACF,CAAC,EACD,OAAIF,EACFQ,WAAW,IAAM,CACfN,EAAMN,UAAS,CAChB,EAAEI,CAAK,EAERE,EAAMN,UAAS,EAEVM,CACT,CC1BA,SAAwBO,GAAoBvC,EAAK,CAC3C,IACI,MAAEwC,WAAUC,QAAS,IAAIC,IAAI1C,CAAG,EACtC,MACE,eAAeH,KAAK2C,CAAQ,GAC5B,uDAAuD3C,KAAK2C,CAAQ,GACpE,wBAAwB3C,KAAK2C,CAAQ,GACrC,oCAAoC3C,KAAK2C,CAAQ,GACjD,4BAA4B3C,KAAK4C,CAAI,OAE7B,CACH,QACT,CACF,CCXA3F,OAAO6F,OAASC,GAED,SAASC,GAAIC,EAAIC,EAAO,GAAI,CACzC,OAAOH,GAAME,EAAI,CAAE,GAAGC,EAAMC,QAAS,GAAIC,YAAa,EAAK,CAAC,CAC9D,CCJe,SAASC,GAAKJ,EAAIC,EAAO,GAAI,CAC1C,OAAOF,GAAIC,EAAI,CAAEK,UAAW,GAAM,GAAGJ,CAAK,CAAC,CAC7C,CCHe,SAASK,GAAUN,EAAIO,EAAU,CAC9C,IAAIC,EAAQ,GACRC,EAAY,GAEhB,SAASC,GAAc,CACrB,GAAIF,EAAMG,SAAW,EAAG,CACtBF,EAAY,GACZ,MACF,CAEeD,EAAMI,UAErBpB,WAAWkB,EAAaH,CAAQ,CAClC,CAEA,OAAO,YAAaM,EAAM,CACxB,MAAMC,EAASA,IAAMd,EAAGe,MAAM,KAAMF,CAAI,EACxCL,EAAMQ,KAAKF,CAAM,EAEZL,IACHA,EAAY,GACZjB,WAAWkB,EAAaH,CAAQ,GAGtC,CCnBO,MAAMU,GAAWC,GAAU,CAChCC,MAAO,EACPZ,SAAU,GACZ,CAAC,EAEKa,GAAkB,yBAClBC,GAAgB,GACtB,SAASC,GAAoBzH,EAAUqD,EAAK,OACpCqE,QAAaC,GAASC,CAAM,EAI9BJ,GAHAD,GAAgBrE,KAAKG,CAAG,GAGxBmE,GAAcnE,CAAG,EACnB,OAGF,GADsB,IAAIwE,OAAO7H,EAAW,GAAG,EAC7BkD,MAAKwE,IAAWI,cAAczE,CAAG,IAA5BqE,cAA+BrE,GAAG,EACvD,OAAO0E,QAAQC,QAAQN,EAAWI,cAAczE,CAAG,CAAC,EAE9C4E,MAEJC,IACAC,mCAAS9E,UAGT8E,IAAA,yBAAwCA,KAE5C,mDAAAA,CAAA,IAGIA,IAAA,oCAAmDA,KAEvD,mCAAAA,CAAA,IAKEA,EAAiBC,WAFfD,EAAA,MAAmCA,UACH,iBAAQ,kBACzBC,IAEnB,IAAAC,EAEIA,IACAA,EAAA,QAAAF,CAAA,CACO,aAET,CACF,MAAArE,EAAAuE,EAAA,SACMvE,IAAgBwE,SAGhBC,EAFc1C,mCAEA,KAAA2C,CAAA,EACdC,MACN,MAAiBpJ,EAAAoJ,EAAA,GACTpJ,CACA,MAAAqJ,CAAA,EAAEnF,aAAcO,CAAA,GAAmBoE,EAACQ,EAAA,oBAAArJ,CAAA,eAAAsJ,GAAA,CACpBpF,iBAIlB,OACS,OAAAoF,EACLA,YAGG,6BACuB,CAC9B,EAEN,MAEM,MAAApF,CAAEA,gBAAc,CAAEvD,EAAU4I,EAAArF,EAAA,iBAClC,EAAA4E,EAEIU,KAAGV,WACHW,QAAM,GACNd,MAAS,IACF,KAAAe,GAAA,CAERC,KAAkB,kBAETL,OACC,OAFY7B,WAAY,GAG7B6B,YAGG,6BACuB,CAC9B,EACF,SAACM,EAAAC,EAAA,CAEH,MACQ,OAAAP,EAAEA,YAAQ3I,EAAakJ,CACvB,GAAA7J,CAAEA,IAAOsJ,iBACTQ,EAAW,CACjBlH,KACA,SAAamH,EACX/J,OACAW,SACKmJ,mBACPE,GAAAV,EAAAS,EAAA,CACOtB,gBACPuB,GACiB3G,CAAA,CAEVA,cACT8E,GAAAnE,CAAA,IACA,CACEmE,SACF,cAAAoB,EAAA,aAAAZ,EAAAsB,IAAA,WAAAA,EAAA,kBAEyBpB,EAAA,UAAAU,CAAA,CAKvB,EAKSV,MAA0B,QAAsBqB,CAAA,EAElDC,EAAaR,KAAkBC,SAAmBM,CAAA,CAEzD,CAA6D,MAC/DE,GAAArC,GAAAK,EAAA,ECxHIG,GAAS8B,GAAM,CACnBC,WAAY,CAAE,EAEdC,aAAc,KACdC,gBAAiB,KACjBrI,SAAU,CAAE,EACZsI,mBAAoB,CAAE,EACtBC,KAAM,CAAE,EAERC,QAAS,CAAE,EACXC,SAAU,KACVC,kBAAmB,KACnBC,cAAe,CAAE,EACjBC,kBAAmB,KACnBC,iBAAkB,CAAE,EACpBC,qBAAsB,GACtBC,2BAA4B,KAC5BC,iBAAkB,EAClBC,sBAAuB,CACrBpL,GAAI,KACJqL,QAAS,CACV,EACDC,SAAU,CAAE,EACZC,cAAe,CAAE,EACjBC,gBAAiB,CAAE,EACnB/C,cAAe,CAAE,EACjBgD,aAAc,CAAE,EAChBC,mBAAoB,CAAE,EACtBC,YAAa,CAAE,EACf1L,SAAU,CAAE,EACZ2L,kBAAmB,KAEnBC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,eAAgB,GAChBC,sBAAuB,GACvBC,0BAA2B,GAC3BC,oBAAqB,GACrBC,aAAc,GACdC,eAAgB,GAEhBC,UAAW,CAAE,EAEbC,SAAU,CACRC,YAAa,GACbC,kBAAmB,KACnBC,qBAAsB,GACtBC,eAAgB,GAChBC,mBAAoB,GACpBC,iCAAkC,KAClCC,gCAAiC,CAAE,EACnCC,6BAA8B,GAC9BC,kBAAmB,GACnBC,UAAW,EACb,CACF,CAAC,EAEDC,EAAe7E,GAER,SAAS8E,IAAa,CAG3B9E,GAAOwC,kBAAoB7K,EAAMe,QAAQuB,IAAI,mBAAmB,GAAK,KACrE+F,GAAOiE,UAAYtM,EAAMe,QAAQuB,IAAI,WAAW,GAAK,GACrD+F,GAAOkE,SAASC,YACdxM,EAAMe,QAAQuB,IAAI,sBAAsB,GAAK,GAC/C+F,GAAOkE,SAASE,kBACdzM,EAAMe,QAAQuB,IAAI,4BAA4B,GAAK,KACjDtC,EAAMe,QAAQuB,IAAI,+BAA+B,IACnD+F,GAAOkE,SAASG,qBAAuB,IAEzCrE,GAAOkE,SAASI,eACd3M,EAAMe,QAAQuB,IAAI,yBAAyB,GAAK,GAClD+F,GAAOkE,SAASK,mBACd5M,EAAMe,QAAQuB,IAAI,6BAA6B,GAAK,GACtD+F,GAAOkE,SAASM,iCACd7M,EAAMe,QAAQuB,IAAI,2CAA2C,GAAK,KACpE+F,GAAOkE,SAASO,gCACd9M,EAAMe,QAAQuB,IAAI,0CAA0C,GAAK,GACnE+F,GAAOkE,SAASQ,6BACd/M,EAAMe,QAAQuB,IAAI,uCAAuC,GAAK,GAChE+F,GAAOkE,SAASS,kBACdhN,EAAMe,QAAQuB,IAAI,4BAA4B,GAAK,GACrD+F,GAAOkE,SAASU,UAAYjN,EAAMe,QAAQuB,IAAI,oBAAoB,GAAK,EACzE,CAEA8K,GAAa/E,GAAQ,oBAAsBgF,GAAM,CAC/C3K,UAAoB,wBAAI2F,GAAA,qBAE1BiF,GAAEjF,GAAAkF,GAAA,CACFD,SAAUjF,GAASkF,EAAY3K,EAAA4K,CAAA,IAAAD,EAC7B7K,EAAa,KAAgB,+BAC7B1C,EAAW,QAAO,IAAM,uBAAuBuN,KAEtCtE,EAAQ,QAAI,+BACnBjJ,EAAA,wCAAA4C,CAAA,EAEOqG,EAAQ,QAAI,kCACnBjJ,EAAA,yCAAA4C,CAAA,EAEOqG,UAASpG,IAAgC,+BAChD7C,EAAA,4CAAA4C,CAAA,EAEOqG,EAAQ,QAAI,6CACnBjJ,EAAA,sDAAA4C,CAAA,EAEOqG,EAAQ,QAAI,iDACnBjJ,EAAA,wDAAA4C,CAAA,EAEEF,8CAAyB,KAAAuG,EAAA,YACzBjJ,EAAMe,QAAQ8B,IAAI,2CAA2CwF,GAAQ,0CAEnEY,EAAA,0CACFjJ,EAAMe,QAAQ8B,IACZ,+BAAAD,CAAA,GAIAqG,iBAAS,MAAK,aAChBjJ,EAAMe,QAAQ8B,IAAI,wBAA8B,EAE9CoG,EAAO,KAAE,6BACXjJ,EAAMe,QAAQ8B,IAAI,qBAAoByJ,GAAS,IAkB7C,SAAamB,GAAQ3N,EAAAW,EAAA,CAC3B4H,GAAMvI,EACR,OAAAW,EAAA,GAAAA,CAAA,IAAAX,CAAA,GAAAA,CAEA,CACOA,SAAI4N,GAAAC,EAAAlN,EAAA,CACT,GAAOA,GACT,MAAA8B,EAAAkL,GAAAE,EAAAlN,CAAA,EAEA,UAAyBiN,SAASnL,CAAA,CAChC,CACE,OAAA8F,GAAYoF,SAASE,CAAS,CAC9B,CACF,SAAA7D,GAAAV,EAAA3I,EAAAoG,EAAA,CACA,OAAapG,cACfoG,EAAApG,EAEOA,EAAA,MAEHoG,KAAI,CACJpG,WAAW,GACb,cAAAmN,EAAA,GACM,cAAAC,EAAA,EACJC,QACAF,aACAC,QAAgBH,GAAAtE,EAAA,GAAA3I,CAAA,EACdoG,IAAUkH,GACVC,GAAS5E,EAAA2E,CAAA,IACb,eAAe,IAAY,SAC3B,MAAKD,EAAYC,KAAW,GAAAtN,CAAA,EAI1B,cAHY2I,UAAQ2E,EAAY,QAAAA,EAAA,SAEhC1F,GAAM9F,SAAeA,CAAA,KACjBwL,qBAAWE,GAAS7E,CACxB,MAAA8E,EAAAT,GAAArE,EAAA,UAAA3I,CAAA,EACA4H,GAAe,SAAI6F,CAAI9E,EAAMA,EAAA,MAC7B,KACQ8E,oBAAQT,IACdpF,MAAM8F,KAAmB/E,QAAa,GAAA3I,CAAA,EACxC4H,GAAA,SAAA8F,CAAA,EAAA/E,EAAA,MACAf,GAAU,aAAY9F,CAAA,IACd4L,KAAOV,SACP,SAAAhN,CACN4H,EAEIvI,CACAW,GAINmN,uBAEFQ,GAAAhF,EAAA,QAAAA,EAAA3I,CAAA,EACI,EAIJoN,uBAEAQ,GAAAjF,EAAA,QAAAA,EAAA3I,CAAA,EACI,GAGF,SAAE6N,GAAAlF,EAAAmF,EAAA,CACJ,MACF,MAAAvK,EAEA,SAAAvD,CACQ,EAAA+N,GAAA,CAAExK,SAAKuK,CAAE9N,GAAmBA,MAAU8N,EAAa,eAAEE,EAAArF,EAAAsF,EAAA,GAC3D,MACIC,cACJ,mBAAAC,CACQ,EAAAxF,KAAa,CAAAyF,GAAAD,IAAAxF,EAAA,WAAEwF,UACrB,GAAIC,GAAYD,IAAsBxF,EAAW,QAAQ,GACvD,KAAO,eAIP,MAAA7G,EAAAkL,GAAAoB,EAAApO,CAAA,EACF,IAAAqO,EAAAzG,GAAA,SAAA9F,CAAA,SACA,GAAMA,IAAe,EAAY,mCACjC,kBAAiB8F,GAAe,WAAI0G,EAAC,IAAAJ,CAAA,GAEnCG,EAAIH,MAAeK,GAASH,EAAA7K,CAAA,EAC5B8F,GAAUtB,EAAepC,EAAU,CACnC,gBACA0I,EACAhF,CAAuD,MAAE,UAAA2E,EAAAK,EAAA,EAAAJ,CAAA,EAAAtF,CAAA,CAC3D,CACA,OAAAqF,EAAArF,CAAA,OAAAnH,GAAA,CACAA,EAAkBwM,UACpBxM,EAAA,SAAAmH,EAAAsF,IAAA,CACOD,QAAehB,GACfrE,KAAe3I,CAAA,EACdwB,GAAQ,mBAAaM,CAAA,EAAAmM,EAAA,CACvBhM,WAEQH,OAEN,MAAA6L,GAAAlH,GAAAoH,GAAA,KACJW,GAAA,8BAEI,SAAQZ,GAAAjF,EAAA3I,EAAA,CACZiC,MACA,SAAApB,CACN,EAAAkN,GAAA,EACOU,2BAGP,GADgBC,MAAQ,KAAcD,CAAA,GAE9B,MAAAf,EAAAV,GAAArE,GAAA,YAAAA,EAAA,GAAA3I,CAAA,EAAEA,GAAQ,UAAEa,EAClB,IAD2C2N,GAAA,mEAC9B,SAAS7O,GAAS,CAC/B,QAAgBA,EAAA,KAER+N,QADKrK,IAAAsF,EAAA,KAAAtF,IAAAsF,EAAA,SACiCtF,CAAA,CACrC,WAAU,CAAA1D,EAAAgP,IAAU,CAC3BlF,GAAqB5I,EAAiBlB,iBAG7BuJ,GAEIwE,IACS,cAAGrK,GAAG,aAAeqK,CAAO,KAC9C9F,GAAoB,aAAIhC,CAAmB,MAGzBgC,GAAA,aAAgB8F,CAAA,EAAAiB,CAAA,GAC5B/G,gBAAS8F,CAAA,SAAAiB,EAAA,EAAAzF,CAAA,EAEb,EACEtB,EACF,EAEEA,SAAOkD,MAAmB8D,IAC5BrL,EAAA,oBAAA2J,CAAA,SACF,EC/RR,SAAS2B,GAAY1I,EAAIhB,EAAO2J,EAAMC,EAAW,CAC/C,MAAMC,EAAgBC,GAAO9I,CAAE,EAC/B+I,GAAU,IAAM,CACdF,EAAcG,QAAUhJ,CAC1B,EAAG,CAACA,EAAI2I,CAAI,CAAC,EAEbI,GAAU,IAAM,CACV,CAACH,GAAa5J,IAAU,MAAQA,IAAU,IAC9C6J,EAAcG,QAAO,CACvB,EAAG,CAACJ,CAAS,CAAC,EAEdG,GAAU,IAAM,CACd,GAAI/J,IAAU,MAAQA,IAAU,GAAO,OAEvC,MAAM9F,EAAK+P,YADEC,IAAML,EAAcG,UACJhK,CAAK,EAClC,MAAO,IAAMmK,cAAcjQ,CAAE,CAC/B,EAAG,CAAC8F,CAAK,CAAC,CACZ,CCnBe,SAASoK,GAAYnJ,EAAM,CACxC,MAAM/C,EAAM,IAAI0C,IAAI,YAAa5F,OAAOc,QAAQ,EAC1C,CAAEuO,MAAOC,EAAaC,OAAQC,GAAiBxP,OAAOyP,OACtDC,EAAOC,KAAKC,IAAI,GAAIN,EAAc,KAAO,CAAC,EAC1CO,EAAMF,KAAKC,IAAI,GAAIJ,EAAe,KAAO,CAAC,EAC1CH,EAAQM,KAAKG,IAAIR,EAAa,GAAG,EACjCC,EAASI,KAAKG,IAAIN,EAAc,GAAG,EACnCO,GAAS9J,iBAAM+J,MAAOL,KAAKM,OAAM,EACjCC,EAASlQ,OAAOmQ,KACpBjN,EACA,UAAY6M,EACX,SAAQV,CAAM,WAAUE,CAAO,SAAQG,CAAK,QAAOG,CAAI,EAC1D,EAEA,OAAIK,EAKFA,EAAOE,YAAcnK,EAErBoK,MAAM,6CAA6C,EAG9CH,CACT,o4BCzBaI,GAAQ,CACnBC,EAAGA,IAAMC,EAAA,WAAO,gCAAoC,uCACpDC,MAAOA,IAAMD,EAAA,WAAO,gCAAoC,uCACxDE,SAAUA,IAAMF,EAAA,WAAO,mCAAuC,uCAC9D,eAAgBG,IAAMH,EAAA,WAAO,uCAA2C,uCACxE,WAAYI,IAAMJ,EAAA,WAAO,uCAA2C,uCACpEK,SAAUA,IAAML,EAAA,WAAO,qCAAyC,uCAChEM,OAAQA,IAAMN,EAAA,WAAO,iCAAqC,uCAC1D,aAAcO,IAAMP,EAAA,WAAO,qCAAyC,uCACpE,cAAeQ,IAAMR,EAAA,WAAO,sCAA0C,uCACtE,WAAYS,IAAMT,EAAA,WAAO,mCAAuC,uCAChE,aAAcU,IAAMV,EAAA,WAAO,qCAAyC,uCACpEW,MAAOA,IAAMX,EAAA,WAAO,gCAAoC,uCACxDY,KAAMA,IAAMZ,EAAA,WAAO,+BAAmC,uCACtDa,OAAQA,IAAMb,EAAA,WAAO,iCAAqC,uCAC1D,YAAac,IAAMd,EAAA,WAAO,oCAAwC,uCAClE,WAAYe,IAAMf,EAAA,WAAO,gCAAoC,uCAC7DgB,QAASA,IAAMhB,EAAA,WAAO,+BAAmC,uCACzDiB,QAASA,IAAMjB,EAAA,WAAO,iCAAqC,uCAC3DkB,SAAUA,IAAMlB,EAAA,WAAO,oCAAwC,uCAC/D5G,KAAMA,IAAM4G,EAAA,WAAO,iCAAqC,uCACxDmB,aAAcA,IAAMnB,EAAA,WAAO,uCAA2C,uCACtEoB,OAAQA,IAAMpB,EAAA,WAAO,sCAA0C,uCAC/D,aAAcqB,IAAMrB,EAAA,WAAO,mCAAuC,uCAClEsB,KAAM,CAAC,IAAMtB,EAAA,WAAO,oCAAwC,uCAAG,OAAO,EACtEuB,OAAQA,IAAMvB,EAAA,WAAO,iCAAqC,uCAC1DwB,MAAOA,IAAMxB,EAAA,WAAO,oCAAwC,uCAC5DyB,GAAIA,IAAMzB,EAAA,WAAO,6BAAiC,uCAClD0B,WAAYA,IAAM1B,EAAA,WAAO,qCAAyC,uCAClE2B,OAAQA,IAAM3B,EAAA,WAAO,mCAAuC,uCAC5D4B,KAAMA,IAAM5B,EAAA,WAAO,qCAAyC,uCAC5D6B,KAAMA,IAAM7B,EAAA,WAAO,iCAAqC,uCACxD8B,MAAOA,IAAM9B,EAAA,WAAO,iCAAqC,uCACzD+B,SAAUA,IAAM/B,EAAA,WAAO,wCAA4C,uCACnEgC,OAAQA,IAAMhC,EAAA,WAAO,wCAA4C,uCACjEiC,MAAO,CAAC,IAAMjC,EAAA,WAAO,wCAA4C,uCAAG,QAAQ,EAC5EkC,KAAMA,IAAMlC,EAAA,WAAO,qCAAyC,uCAC5D,eAAgBmC,IAAMnC,EAAA,WAAO,+BAAmC,uCAChE,gBAAiBoC,IAAMpC,EAAA,WAAO,gCAAoC,uCAClE,eAAgBqC,IAAMrC,EAAA,WAAO,+BAAmC,uCAChEsC,MAAO,CACL,UAAM,OAAO,wCAA4C,uCACzD,SACA,YAAY,EAEdC,OAAQA,IAAMvC,EAAA,WAAO,gCAAoC,uCACzDwC,MAAOA,IAAMxC,EAAA,WAAO,gCAAoC,uCACxDyC,IAAKA,IAAMzC,EAAA,WAAO,oCAAwC,uCAC1D0C,KAAMA,IAAM1C,EAAA,WAAO,iCAAqC,uCACxD2C,KAAMA,IAAM3C,EAAA,WAAO,qCAAyC,uCAC5D4C,OAAQA,IAAM5C,EAAA,WAAO,mCAAuC,uCAC5D6C,QAASA,IAAM7C,EAAA,WAAO,kCAAsC,uCAC5D/Q,KAAMA,IAAM+Q,EAAA,WAAO,sCAA0C,uCAC7D8C,SAAUA,IAAM9C,EAAA,WAAO,oCAAwC,uCAC/D+C,KAAMA,IAAM/C,EAAA,WAAO,iCAAqC,uCACxDgD,UAAWA,IAAMhD,EAAA,WAAO,+BAAmC,uCAC3DiD,IAAKA,IAAMjD,EAAA,WAAO,8BAAkC,uCACpDkD,MAAO,CAAC,IAAAlD,EAAA,IAAM,OAAO,8BAAkC,uCAAG,QAAQ,EAClEmD,IAAKA,IAAMnD,EAAA,WAAO,gCAAoC,uCACtDoD,KAAMA,IAAMpD,EAAA,WAAO,iCAAqC,uCACxDqD,QAASA,IAAMrD,EAAA,WAAO,kCAAsC,uCAC5DsD,MAAOA,IAAMtD,EAAA,WAAO,kCAAsC,uCAC1DuD,SAAUA,IAAMvD,EAAA,WAAO,mCAAuC,uCAC9DwD,UAAWA,IAAMxD,EAAA,WAAO,qCAAyC,uCACjEyD,KAAMA,IAAMzD,EAAA,WAAO,+BAAmC,uCACtD0D,UAAWA,IAAM1D,EAAA,WAAO,oCAAwC,uCAChE2D,KAAMA,IAAM3D,EAAA,WAAO,+BAAmC,uCACtD4D,MAAOA,IAAM5D,EAAA,WAAO,mCAAuC,uCAC3D6D,KAAMA,IAAM7D,EAAA,WAAO,sCAA0C,uCAC7D8D,OAAQA,IAAM9D,EAAA,WAAO,iCAAqC,uCAC1D+D,MAAOA,IAAM/D,EAAA,WAAO,wCAA4C,uCAChEgE,QAAS,CACP,IAAMhE,EAAA,WAAO,wCAA4C,uCACzD,QAAQ,EAEViE,KAAMA,IAAMjE,EAAA,WAAO,iCAAqC,uCACxDkE,KAAMA,IAAMlE,EAAA,WAAO,+BAAmC,uCACtDmE,QAASA,IAAMnE,EAAA,WAAO,oCAAwC,uCAC9DoE,OAAQA,IAAMpE,EAAA,WAAO,kCAAsC,uCAC3DqE,OAAQA,IAAMrE,EAAA,WAAO,mCAAuC,uCAC5DsE,MAAOA,IAAMtE,EAAA,WAAO,qCAAyC,uCAC7DuE,MAAOA,IAAMvE,EAAA,WAAO,gCAAoC,uCACxDwE,QAASA,IAAMxE,EAAA,WAAO,mCAAuC,uCAC7DyE,QAASA,IAAMzE,EAAA,WAAO,mCAAuC,uCAC7D0E,SAAUA,IAAM1E,EAAA,WAAO,uCAA2C,uCAClEH,MAAOA,IAAMG,EAAA,WAAO,gCAAoC,uCACxD2E,MAAOA,IAAM3E,EAAA,WAAO,gCAAoC,uCACxD,kBAAmB4E,IACjB5E,EAAA,WAAO,0CAA8C,uCACvD,oBAAqB6E,IACnB7E,EAAA,WAAO,4CAAgD,uCACzD8E,UAAWA,IAAM9E,EAAA,WAAO,oCAAwC,uCAChE,eAAgB+E,IAAM/E,EAAA,WAAO,oCAAwC,uCACrE,kBAAmBgF,IAAMhF,EAAA,WAAO,uCAA2C,uCAC3EiF,SAAUA,IAAMjF,EAAA,WAAO,mCAAuC,uCAC9DkF,MAAOA,IAAMlF,EAAA,WAAO,gCAAoC,uCACxDmF,MAAOA,IAAMnF,EAAA,WAAO,yCAA6C,uCACjEoF,MAAOA,IAAMpF,EAAA,WAAO,sCAA0C,uCAC9DqF,MAAOA,IAAMrF,EAAA,WAAO,gCAAoC,uCACxDsF,SAAUA,IAAMtF,EAAA,WAAO,qCAAyC,uCAChEqD,QAASA,IAAMrD,EAAA,WAAO,oCAAwC,uCAC9DjC,SAAUA,IAAMiC,EAAA,WAAO,mCAAuC,uCAC9D,eAAgBuF,IAAMvF,EAAA,WAAO,uCAA2C,sCAC1E,EClGMwF,GAAQ,CACZC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,IAAK,EACP,EAEMC,GAAW,GAGXC,GAAUzQ,GACd,SAAU,CAAEuJ,QAAOE,SAAQiH,OAAMC,SAAQC,MAAK,EAAG,CAC/C,OACEC,EAAA,OACEC,QAAU,OAAMvH,CAAM,IAAGE,CAAO,GAChCsH,wBAAyB,CAAEC,OAAQN,CAAK,EACxCO,MAAO,CACLC,UAAY,GAAEP,EAAU,UAASA,CAAO,IAAK,EAAG,IAC9CC,EAAQ,aAAc,EACvB,EACH,EACD,CAEL,EACA,CACEO,eAAgB,GAChB/Q,QAASgR,OAAOC,KAAK7G,EAAK,EAAE3J,OAC5ByQ,WAAYA,CAACC,EAAaC,IACxBD,EAAYE,OAASD,EAAOC,MAAQF,EAAYb,OAASc,EAAOd,IACpE,CACF,EAEA,SAASgB,EAAK,CACZD,OACAE,OAAO,IACPC,MACAC,QACAC,MAAOxS,EAAY,GACnB2R,QAAQ,CAAC,CACX,EAAG,CACD,GAAI,CAACQ,EAAa,YAEZM,QAAW7B,GAAMyB,CAAI,EACvBK,MAAYxH,GAAMiH,CAAI,EAC1B,GAAI,CAACO,EACK3V,YAEV,IAAAsU,EAAAC,EAEID,MAAQC,aACRqB,GAAcD,KAAYA,GAE9B,MAAAE,EAAAC,CAAA,EAAAC,EAAA5B,GAAAiB,CAAA,GAEMY,EAAWF,MACXE,eACNpJ,GAAgBoJ,EAAA,UAAAZ,KACgC,UACjC,MAAAa,EAAA,MAAAN,IACLM,WAAwB,EAC9BH,QAAyB,OACzB3B,KACF6B,EAAG,QAAAZ,EACHY,OACEZ,EAAK,QAET,cACEnS,CAAA,GACEwS,MAAQD,GAAiBD,EACzBC,MAAOA,CACA,SAAAE,CAAA,KACLxI,UAAmBwI,CAAA,KACnBtI,IAAoB,EAEtB,SAAAyI,GAECA,aAaGT,cACAlI,OAAgBA,SAChBE,OAAiBA,KACjBiH,SACAC,OACAC,GACD,CCnGT,SAAS2B,GAAgBrS,EAAI2I,EAAO,GAAI,CAClC,CAAC3I,GAAM,OAAOA,GAAO,YACzB+I,GAAU,IAAM,CACd,MAAMuJ,EAAU,IAAIC,aACpBD,SAAQE,iBAAiB,QAASxS,CAAE,EAC7B,IAAM,CACXsS,EAAQG,QAAO,EAElB,EAAE9J,CAAI,CACT,CAEA,MAAA+J,GAAe1Y,OAAOuY,aAAeF,GAAkB,IAAM,CAAE,ECLzDM,GAAkBpK,SAASqK,eAAe,iBAAiB,EAEjE,SAASC,GAAM,CAAEC,WAAUC,UAAShU,UAAS6S,MAAOxS,CAAU,EAAG,CAC/D,GAAI,CAAC0T,EAAiB,YAEtB,MAAME,EAAWlK,KACjBC,GAAU,IAAM,CACVkK,MAAQzT,WAAW,IAAM,OAC3B,MAAM0T,GAAeF,IAAShK,UAATgK,cAAkBG,cAAc,mBACjDD,GACFA,EAAaE,MAAM,GAEpB,GAAG,EACC,UAAMC,aAAaJ,CAAK,CACjC,EAAG,CAAE,GAEL,MAAMK,EAAuBtZ,OAAOuY,aAC9BgB,EAASC,GACb,MACA,IAAM,CACJhU,WAAW,IAAM,CACLuT,GAAA,MAAAA,KACT,CAAC,GAEN,CACEU,QAAS,CAACH,GAAwB,CAAC,CAACP,EAGpCW,QAAS,GACTC,MAAO,IAET,CAACZ,CAAO,CACV,EACgBA,KAAS,CAACA,CAAO,CAAC,EAE5BF,QACJlC,EAAA,OACEiD,IAAeC,GAAA,OACbb,EAAShK,QAAU6K,EACnBN,EAAOvK,UAAU6K,mBAAMV,gBAANU,qBAAsB,qBAAsBA,CAC/D,EACAzU,YACAL,QAAgBlE,GAAA,CACdkE,WAAUlE,GACNA,EAAEiZ,SAAWjZ,EAAEkZ,gBACjBhB,WAAUlY,GAEd,EACAmZ,SAAS,KACTC,QAAgBpZ,GAAA,aACVA,EAAEiZ,SAAWjZ,EAAEkZ,iBACjBf,aAAShK,UAATgK,cAAkBG,gBAAlBH,qBAAkC,qBAAlCA,cAAsDI,QAAtDJ,gBAEJ,EAAEF,WAGC,EAGAoB,UAAarB,EAAOF,EAAe,CAG5C,CCpEA,SAASwB,GAAO,CAAEC,SAAQC,SAAQ,GAAGxV,CAAM,EAAG,CAC5C,OACE8R,EAAA,WACM9R,EACJ+S,MAAQ,oBAAmBwC,EAAS,SAAW,EAAG,IAChDC,EAAS,SAAW,EACrB,GAAEvB,SAEHnC,EAAA,QAAMiB,MAAM,SAAU,EAClB,CAEV,CCPA,MAAM5B,GAAQ,CACZC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,IAAK,GACLiE,KAAM,EACR,EAEMC,GAAa,GAEbC,GAASxa,OAAOya,gBAClB,IAAIA,gBAAgB,EAAG,CAAC,EACxBlM,SAASmM,cAAc,QAAQ,EAC7BC,GAAMH,GAAOI,WAAW,KAAM,CAClCC,mBAAoB,EACtB,CAAC,EAED,SAASC,GAAO,CAAE5X,MAAKuU,OAAMC,MAAM,GAAIqD,WAAU,GAAGlW,CAAM,EAAG,CAC3D4S,EAAOzB,GAAMyB,CAAI,GAAKA,GAAQzB,GAAME,EACpC,MAAM8E,EAAYlM,KACZmM,EAAY,gBAAgBlY,KAAKG,CAAG,EAC1C,OACEyT,EAAA,QACEiD,IAAKoB,EACLpD,MAAQ,UAASmD,EAAW,WAAa,EAAG,IAC1CR,GAAWrX,CAAG,EAAI,YAAc,EACjC,GACD6T,MAAO,CACL1H,MAAOoI,EACPlI,OAAQkI,CACV,EACAE,MAAOD,EAAI,GACP7S,EAAKiU,SAER,CAAC,CAAC5V,GACDyT,EAAA,OACEuE,IAAKhY,EACLmM,MAAOoI,EACPlI,OAAQkI,EACRC,MACAyD,QAAQ,OACRC,SAAS,QACTC,YACEd,GAAWrX,CAAG,IAAMoY,QAAa,CAACL,EAC9B,YACAK,OAENC,QAAgB1a,GAAA,CACVA,EAAEiZ,OAAOuB,cACXxa,EAAEiZ,OAAOuB,YAAc,KACvBxa,EAAEiZ,OAAOoB,IAAMhY,EAEnB,EACAsY,OAAe3a,GAAA,CACTma,EAAUhM,UAAmBA,UAAQyM,QAAQC,OAAS,IACtDnB,GAAWrX,CAAG,IAAMoY,SACpBL,GACJU,eAAe,IAAM,CACf,IAEI,MAAEtM,QAAOE,UAAW1O,EAAEiZ,OACxBU,GAAOnL,QAAUA,IAAOmL,GAAOnL,MAAQA,GACvCmL,GAAOjL,SAAWA,IAAQiL,GAAOjL,OAASA,GAC9CoL,GAAIiB,UAAU/a,EAAEiZ,OAAQ,EAAG,CAAC,EAC5B,MAAM+B,EAAYlB,GAAImB,aAAa,EAAG,EAAGzM,EAAOE,CAAM,EAEhDwM,EACJF,EAAUtZ,KAAKsS,OACb,CAACmH,EAAOxN,IAAMA,EAAI,IAAM,GAAKwN,GAAS,GACxC,EAAErV,QACCkV,EAAUtZ,KAAKoE,OAAS,GAC3B,GACEoV,GAEQ/M,UAAQiN,UAAUC,IAAI,WAAW,EAE7C3B,GAAWrX,CAAG,EAAI6Y,EAClBpB,GAAIwB,UAAU,EAAG,EAAG9M,EAAOE,CAAM,OACvB,CAEVgL,GAAWrX,CAAG,EAAI,EACpB,EACD,EACH,EACD,EAEC,CAEV,CAEA,MAAe6C,MAAI+U,EAAM,ECpFnBsB,GAAOC,GAAW,CAACxX,EAAO+U,IAAQ,CAClC0C,MACA,IACFA,EAAiBC,GAAY,OACnB,CAAC,CACT5W,OAAQ7E,SAAS6E,MAAQ,IAAI3C,QAAQ,KAAM,EAAE,EAAEwZ,OAC/C7W,IAAS,KAAWA,EAAA,KAClB,MAAE8W,KAAI,GAAGC,CAAc7X,IAGzB,GAAEc,GAAQA,IAAS,KAAOA,EAAKgX,SAAS,GAAG,EACzC,IACF,MAAMC,EAAa,IAAIhX,IAAID,EAAM7E,SAAS+b,MAAM,EAC5CD,KAAWE,aAAarF,KAAM,CAC1BsF,QAAkBhF,MAAMiF,KAAKJ,EAAWE,aAAaG,SAAS,EACjEC,IAAI,CAAC,CAACvb,EAAKK,CAAK,IAAO,GAAEL,CAAI,IAAGwb,mBAAmBnb,CAAK,CAAE,EAAC,EAC3Dob,KAAK,GAAG,EACJR,IAAWlX,SAAW,IAAMqX,CACrC,OACU,CAAC,CAGf,MAAMM,EAAW1X,IAAS8W,GAAMa,mBAAmB3X,CAAI,IAAM8W,EAC7D,OACE9F,EAAA,KACEiD,MACA2D,KAAO,IAAGd,CAAG,GAAE,GACXC,EACJ9E,MAAQ,GAAE/S,EAAM+S,OAAS,EAAG,IAAGyF,EAAW,YAAc,EAAG,GAC3DtY,QAAgBlE,GAAA,YACVA,OAAEkZ,gBAAFlZ,cAAiB2c,aAAjB3c,QAA6B4c,QAAQ,MAEvC5c,EAAE6c,gBAAgB,EAEhBpB,IAAgB7U,EAAOgC,aAAe6S,IAC1CzX,IAAME,UAANF,eAAgBhE,EAClB,EACD,CAEL,CAAC,ECpDK8c,GAAOpP,SAASqP,gBAChB7G,GAAQ8G,iBAAiBF,EAAI,EAC7BG,GAA4B,EAElC,IAAIC,GAAiB,CAAC,EAAG,EAAG,EAAG,CAAC,EAChC,SAASC,IAAoB,CAE3B,MAAMC,EAAmBlH,GAAMmH,iBAAiB,WAAW,EACrDC,EAAqBpH,GAAMmH,iBAAiB,aAAa,EACzDE,EAAsBrH,GAAMmH,iBAAiB,cAAc,EAC3DG,EAAoBtH,GAAMmH,iBAAiB,YAAY,EAC7DH,GAAiB,CAEfpO,KAAKC,IAAI,EAAG0O,SAASL,EAAkB,EAAE,CAAC,EAC1CtO,KAAKC,IAAI,EAAG0O,SAASH,EAAoB,EAAE,CAAC,EAC5CxO,KAAKC,IAAI,EAAG0O,SAASF,EAAqB,EAAE,CAAC,EAC7CzO,KAAKC,IAAI,EAAG0O,SAASD,EAAmB,EAAE,CAAC,CAAC,CAEhD,CACAE,sBAAsBP,EAAiB,EAEvC,SAASQ,GAAuBC,EAAW,GAAI,CAK7C,OAJYV,GACTb,IAAI,CAACzQ,EAAG+B,KAAO/B,GAAKqR,KAA8BW,EAASjQ,CAAC,GAAK,EAAE,EACnE4O,KAAK,GAAG,CAGb,CAGIsB,IAAIC,SAAS,+BAA+B,GAC9C3e,OAAOwY,iBAAiB,SAAUwF,GAAmB,CAAEY,QAAS,EAAK,CAAC,ECxBxE,SAASC,GAAMha,EAAO,CACd,MAAEia,iBAAgBC,YAAaC,CAAiBna,IAChD4S,EAAOwH,KACPF,EAAcC,WAAchQ,QAAUgQ,EAAelQ,GAAO,EAElE,OACE6H,EAACuI,GAAI,CACHC,mBAAoBX,GAAuB,EAC3CY,eAAiB,GAAE3H,EAAKpI,KAAM,IAAGoI,EAAKlI,MAAO,GAC7C8P,eAAc,MACVxa,EACJka,cACAD,eAAgB,CACd/Z,QAAgBlE,GAAA,WACVA,EAAEiZ,SAAWjZ,EAAEkZ,iBACjBgF,OAAY/P,UAAZ+P,cAAqBO,YAArBP,kBAEFD,mBAAgB/Z,UAAhB+Z,eAA0Bje,EAC5B,EACA,GAAGie,CACL,EACD,CAEL,CCxBA,SAASS,GAAY,CACnBC,UAAU,GACVC,UAAU,GACVC,eACAC,oBACAC,aACA,GAAG/a,CACL,EAAG,CACK,MAAEiU,WAAU/T,UAAS,GAAG2X,CAAc7X,IAC5C,GAAI,CAAC4a,EACCD,SAAgB7I,EAACkJ,GAAQ,IAAKhb,EAAQ,EACtCE,EACK+a,GAAahH,EAAU,CAC5B/T,UACD,EAEI+T,EAEHiH,QAASP,EAAUQ,GAAUnB,GAC7BoB,EAAUnR,KAChB,OACEoR,EAACH,EAAM,CACLhB,YAAakB,EACbE,YAAY,YACZC,UAAU,SACVC,SAAS,OACTC,IAAK,GACL1Z,MAAO,EACP2Z,cAAc,kBAAiB,GAC3B7D,EACJ8D,WAAYhB,EAAUlE,OAAYxC,EAClC2H,MAAOjB,EAAU1G,EAAWwC,OAE5BoF,UAAW,CACTC,cAAsB9f,GAAA,SAChBA,EAAE+f,cAAgB,WACpBX,OAAQjR,UAARiR,cAAiBY,WAAjBZ,gBAEJ,EACAa,eAAuBjgB,GAAA,SACjBA,EAAE+f,cAAgB,WACpBX,OAAQjR,UAARiR,cAAiBY,WAAjBZ,gBAEJ,CACF,EAAEnH,SAAA,CAEFnC,EAACkJ,GAAQ,CAACza,UAAWua,EAAmB5a,UAAiB+T,SACtD4G,CACO,GACTE,CAAU,EACL,CAEZ,CCxDA,SAASmB,GAAU,CAAEjc,OAAMkc,QAAO,EAAG,CACnC,GAAI,CAAClc,EAAa,SAEdA,GADA,EAACkc,WAAQra,SACT7B,EAAKmc,QAAQ,GAAG,IAAM,GAAWnc,SACrC,MAAMoc,EAAQ,IAAIxZ,OACf,KAAIsZ,EAAO9D,IAAKrc,GAAMA,EAAEsgB,SAAS,EAAE/D,KAAK,GAAG,CAAE,KAC9C,GACF,EAuBOgE,OAtBUtc,EAAKuc,MAAMH,CAAK,EAAEhE,IAAcoE,GAAA,CAC/C,MAAMC,EAAQP,EAAOzhB,KAAYsB,KAAEsgB,YAAcG,CAAI,EACrD,GAAIC,EAAO,CACH,MAAEre,MAAKse,WAAcD,IAC3B,OACErB,EAAA,WAAApH,UACEnC,EAAA,UAAQ8K,OAAQD,EAAW5L,MAAM,mCAAoC,EACrEe,EAAA,OAEEuE,IAAKhY,EACLwU,IAAK4J,EACL1J,MAAM,wBACNvI,MAAM,KACNE,OAAO,KACP4L,QAAQ,OACRC,SAAS,OAAO,EAPXkG,CAQN,CAAC,EACK,CAEb,CACOA,SACR,CAEH,CAEA,MAAAI,GAAeC,GACbZ,GACA,CAACa,EAAUC,IACTD,kBAAS9c,OAAS+c,EAAS/c,QAC3B8c,IAASZ,SAATY,cAAiBjb,YAAWkb,IAASb,SAATa,cAAiBlb,QACjD,EC/BMmb,GAAe,IAAIC,KAAKC,SAAS,KAAM,CAC3CC,YAAa,MACf,CAAC,EAED,SAASC,GAAS,CAChB/hB,UACAN,WACAsiB,aACAC,WACAC,QACA9P,WACAxN,SACF,EAAG,CACK,MAAEud,OAAMC,SAAQC,eAActjB,KAAIgE,MAAKzC,cAAaugB,SAAQ/N,KAChE9S,IACE,IAAEsiB,UAAatiB,IACb,MAACuiB,EAAGC,EAAOC,CAAK,EAAIN,EAAKO,MAAM,eAAe,GAAK,CAAGP,EAAI,EAE1DQ,EAAkBL,EAASxf,YAAY,EAAEuZ,KAAK,EAC9CuG,GAAsBtiB,GAAe,IAAIwC,cAAcuZ,OACvDwG,EAAuBD,EAC1B/f,QAAQ,oCAAqC,EAAE,EAC/CA,QAAQ,OAAQ,EAAE,EACfigB,EAAmCD,EAAqBhgB,QAC5D,cACA,EACF,EAEA,MACE,CAACqf,IACAS,IAAoBC,GACnBD,IAAoBE,GACpBF,IAAoBG,GACpBnB,GAAaoB,QAAQJ,EAAiBE,CAAoB,IAAM,KAEvDP,EAAA,MAIXvC,EAAA,KACEtI,MAAQ,aAAYwK,EAAW,YAAc,EAAG,IAAGC,EAAQ,QAAU,EAAG,GACxE9E,KAAMra,EACN4W,OAAQvH,EAAW,SAAW,KAC9BoF,MAAQ,GAAElX,EAAe,GAAEA,CAAY,IAAK,EAAG,IAAG6hB,CAAK,GACvDvd,QAAgBlE,GAAA,CACV0R,MAGAxN,IAFJlE,EAAEsiB,eAAe,EACjBtiB,EAAE6c,gBAAgB,EACd3Y,EAAS,OAAOA,EAAQlE,CAAC,EAC7B4G,EAAOwD,YAAc,CACnB9K,UACAN,YAEJ,EAAEiZ,SAEDqJ,IACCjC,EAAAkD,EAAA,CAAAtK,SAAA,CACEnC,EAACmE,GAAM,CAAC5X,IAAKsf,GAAgBD,EAAQxH,SAAU9H,CAAM,GAAE,GAAG,CAC1D,GAEHxS,GAAe,CAAC4hB,EACfnC,EAAAkD,EAAA,CAAAtK,UACEnC,EAAA,KAAAmC,SACEnC,EAACoK,GAAS,CAACjc,KAAMrE,EAAaugB,SAAiB,CAC9C,GACF,CAACoB,GAAYK,GACZvC,EAAAkD,EAAA,CAAAtK,SAAA,CACG,IACDoH,EAAA,KAAApH,SAAA,CAAG,IAAE2J,CAAQ,EAAI,CAAC,EAClB,CACH,EACD,EACAJ,EACF1L,EAAA,KAAAmC,SAAI2J,EAAY,EAEhB9L,EAAA,KAAAmC,SAAI2J,EAAY,EAEjBL,GACClC,EAAAkD,EAAA,CAAAtK,SACEnC,GAAK,SACLuJ,EAAA,KAAApH,SAAG,KACC6J,EACFhM,EAAA,QAAMiB,MAAM,KAAIkB,SAAE8J,EAAY,CAAC,EAC9B,CAAC,EACJ,CACH,EACA,CAEP,CAEA,MAAejB,MAAKO,GAAU,CAACN,EAAUC,IAAa,CAE9C,MAAE1hB,SAAYyhB,IACd,CAAEzhB,QAASkjB,CAAexB,IACzB1hB,wBAASmiB,SAASe,iBAAYf,KACvC,CAAC,EC5FDgB,GAAMC,OAAOC,EAAY,EACzBF,GAAMC,OAAOE,EAAe,EAC5BH,GAAMC,OAAOG,EAAY,EAEzB,MAAMC,GAAM,IAAI5B,KAAK6B,eAErB,SAAwBC,GAAa,CAAEC,WAAUC,QAAO,EAAG,CACzD,GAAI,CAACD,EAAiB,YAChBE,QAAOC,GAAQ,IAAMX,GAAMQ,CAAQ,EAAG,CAACA,CAAQ,CAAC,EAChDI,EAAUD,GAAQ,IAAM,CAC5B,GAAIF,IAAW,QAAS,CAEtB,MAAMI,EAAMb,KAEZ,OADgBa,EAAIC,KAAKJ,EAAM,KAAK,GACrB,GAAKG,EAAIE,SAAWL,EAAKK,OAC/BL,EAAKM,UAELX,GAAII,OAAOC,EAAKO,OAAQ,EAEnC,CACA,OAAOP,EAAKQ,SAAQ,EACnB,CAACR,EAAMD,CAAM,CAAC,EACXU,EAAKR,GAAQ,IAAMD,EAAKU,cAAe,CAACV,CAAI,CAAC,EAC7CrM,EAAQsM,GAAQ,IAAMD,EAAKD,OAAO,MAAM,EAAG,CAACC,CAAI,CAAC,EAEvD,OACErN,EAAA,QAAMmN,SAAUW,EAAI9M,QAAamB,SAC9BoL,EACG,CAEV,kmHCtCA,SAASS,MAAgB9d,EAAM,CAEzB,IACKgc,UAAM,GAAGhc,CAAI,OACV,CAEV,OADsBA,EAAK,CAAC,GACJ,EAC1B,CACF,CACM+d,SAAc7e,GAAI4e,EAAY,ECR9BE,GAAU,CACd,IAAI9C,KAAK6B,eAAiBkB,kBAAkBC,SAC5C,GAAGC,UAAUC,SAAS,EAGlBC,GAAwBN,GAC5BC,GACAM,GAA2BjI,IAAW/G,KAAEiP,KAAKpiB,QAAQ,IAAK,GAAG,CAAC,EAC9D,IACF,EAEA,SAASqiB,GAA2BC,EAAe,GAAO,CACxD,GAAIA,EAAc,CACV,MAAErZ,oCAAqCxE,EAAOkE,SACpD,GAAIM,EACKA,QAEX,CACOiZ,SACT,CCxBA,SAAwBK,GAAgBH,EAAM,CACxC,IACF,OAAO,IAAIrD,KAAKyD,aAAaR,UAAUC,UAAW,CAChDtc,KAAM,WACP,EAAE8c,GAAGL,CAAI,OACA,CACVtjB,WACO,ECPX,SAAS4jB,GAAY5gB,EAAMkc,EAAS,GAAI,CACtC,OAAKlc,GACD,CAACkc,EAAOra,QACR7B,EAAKmc,QAAQ,GAAG,IAAM,IAG1BD,EAAO2E,QAASpE,GAAU,CACxB,KAAM,CAAEJ,YAAWK,YAAWte,KAAK,EAAGqe,EACtCzc,EAAOA,EAAK9B,QACV,IAAI0E,OAAQ,IAAGyZ,CAAU,IAAI,GAAG,EAC/B,4BAA2BK,CAAU,+FAA8Fte,CAAI,WAAUie,CAAU,wEAC9J,CACF,CAAC,EAEMrc,GAbW,EAcpB,CCZA,MAAMuJ,GAAUE,SAASmM,cAAc,KAAK,EACtCkL,GAAuB,CAAC,QAAS,UAAW,SAAS,EAE3D,SAASC,GAAgBvX,EAASrI,EAAO,GAAI,CAC3C,KAAM,CAAE+a,SAAQ8E,iBAAiBA,IAAM,CAAC,CAAG,EAAG7f,EAC9C,IAAI8f,EAAkBzX,EACtB,MAAM0X,EAAMzX,SAASmM,cAAc,KAAK,EACxCsL,EAAIC,UAAYF,EAChB,MAAMG,EAAU,MAAMnjB,KAAKgjB,CAAe,EACpCI,EAAeJ,EAAgBpJ,SAAS,KAAK,EAiCnD,GA/BIuJ,IAGyBF,EAAII,iBAAiB,0BAA0B,EACvDT,QAAS/R,GAAS,CACnCA,EAAKyS,aAAa,SAAU,QAAQ,CACtC,CAAC,EAGaL,EAAII,iBAAiB,UAAU,EACvCT,QAAS/R,GAAS,CACtBA,EAAKqI,UAAU0J,QAASW,GAAM,CACvBV,GAAqBjJ,SAAS2J,CAAC,GAClC1S,EAAKqI,UAAUsK,OAAOD,CAAC,CAE3B,CAAC,CACH,CAAC,GAICJ,GACYF,EAAII,iBAAiB,SAAS,EACtCT,QAAS/R,GAAS,CAClB,gBAAgB7Q,KAAK6Q,EAAK4S,YAAYhK,KAAM,KAC9C5I,EAAKqI,UAAUC,IAAI,cAAc,EACjCuK,GAAY7S,CAAI,EAEpB,CAAC,EAICsS,EAAS,CACX,MAAMQ,EAAQV,EAAII,iBAAiB,SAAS,EACtCO,EAAY,GAClBD,EAAMf,QAAS/R,GAAS,CACtB,MAAM9O,EAAO8O,EAAKgT,UAAUpK,KAAI,EAC1BqK,EAAcjT,EAAKuF,cAAc,GAAG,EAE1C,GAAI,qBAAqBpW,KAAK+B,CAAI,EAAG,CAEnC,KAAM,CAAC4d,EAAGD,EAAU9e,CAAM,EAAImB,EAAKuc,MAAM,GAAG,EACvCwF,IAED,CAACF,EAAUG,KAAK,CAAC,CAACC,CAAC,IAAMA,IAAMtE,CAAQ,GACvCkE,EAAUG,KAAK,CAAC,CAACC,EAAGC,CAAC,IAAMD,IAAMtE,GAAYuE,IAAMrjB,CAAM,GAEzDiQ,EAAKqS,UAAa,UAASxD,CAAS,UACpCkE,EAAU3f,KAAK,CAACyb,EAAU9e,CAAM,CAAC,GAEjCiQ,EAAKqS,UAAa,UAASxD,CAAS,IAAG9e,CAAO,WAGlDiQ,EAAKqI,UAAUC,IAAI,SAAS,CAC9B,CAEI,YAAYnZ,KAAK+B,CAAI,IAClB+hB,IAAajT,EAAKqS,UAAa,UAASnhB,EAAKmiB,MAAM,CAAC,CAAE,WAC3DrT,EAAKqI,UAAUC,IAAI,UAAW,SAAS,EAE3C,CAAC,CACH,CAKA,IAAIgL,EAsHJ,GArHInB,EAAgBpJ,SAAS,GAAG,IAC9BuK,EAAYC,GAAiBnB,CAAG,EAChCkB,EAAUvB,QAAS9L,GAAS,CAC1B,IAAIuN,EAAOvN,EAAKwN,UACbrkB,QAAQ,KAAM,OAAO,EACrBA,QAAQ,KAAM,MAAM,EACpBA,QAAQ,KAAM,MAAM,EACnBge,IACFoG,EAAO1B,GAAY0B,EAAMpG,CAAM,GAEjC3S,GAAQ4X,UAAYmB,EAEpBvN,EAAKyN,YAAY,GAAGjZ,GAAQkZ,UAAU,CACxC,CAAC,GAMCpB,GACa,CAAC,GAAGH,EAAII,iBAAiB,GAAG,CAAC,EAAEvR,OAAQ2S,GACpD,gBAAgBzkB,KAAKykB,EAAEZ,UAAUpK,KAAM,EACzC,EACOmJ,QAASpR,GAAU,CACxB,MAAMkT,EAAMlZ,SAASmM,cAAc,KAAK,EAExCnG,EAAM6R,iBAAiB,IAAI,EAAET,QAAS+B,GAAOA,EAAGJ,YAAY;AAAA,CAAI,CAAC,EACjEG,EAAIxB,UAAa,SAAQ1R,EAAM0R,UAAUzJ,KAAI,CAAG,UAChDjI,EAAM+S,YAAYG,CAAG,CACvB,CAAC,EAICtB,GACiB,CAAC,GAAGH,EAAII,iBAAiB,GAAG,CAAC,EAElBvR,OAAQ2S,GAAM,QAAQzkB,KAAKykB,EAAEZ,SAAS,CAAC,EAE1DjB,QAASpR,GAAU,CAC5B,MAAMoT,EAAiB,CAACpT,CAAK,EAC7B,IAAI4R,EAAe,GACfyB,EAAerT,EACnB,KAAOqT,EAAaC,oBAAoB,CACtC,MAAMC,EAAOF,EAAaC,mBAC1B,GAAIC,GAAQA,EAAKC,UAAY,IAC3B,GAAI,QAAQhlB,KAAK+kB,EAAKlB,SAAS,EAAG,CAChCe,EAAe3gB,KAAK8gB,CAAI,EACxB3B,EAAe,GACf,KACF,MACEwB,EAAe3gB,KAAK8gB,CAAI,MAG1B,OAEFF,EAAeE,CACjB,CACA,GAAI3B,EAAc,CAChB,MAAMsB,EAAMlZ,SAASmM,cAAc,KAAK,EACxCiN,EAAehC,QAAS6B,GAAM,CAE5BA,EAAEpB,iBAAiB,IAAI,EAAET,QAAS+B,GAAOA,EAAGJ,YAAY;AAAA,CAAI,CAAC,CAC/D,CAAC,EACD,MAAMU,EAAWL,EAAezK,IAAKsK,GAAMA,EAAEvB,SAAS,EAAE7I,KAAK;AAAA;AAAA,CAAM,EACnEqK,EAAIxB,UAAa,sBAAqB+B,CAAS,UAC/CzT,EAAM+S,YAAYG,CAAG,EACrBE,EAAehC,QAAS6B,GAAMA,EAAEjB,OAAQ,EAC1C,CACF,CAAC,EAMCR,EAAgBpJ,SAAS,GAAG,IAC9BuK,EAAYC,GAAiBnB,CAAG,EAChCkB,EAAUvB,QAAS9L,GAAS,CAC1B,IAAIuN,EAAOvN,EAAKwN,UACbrkB,QAAQ,KAAM,OAAO,EACrBA,QAAQ,KAAM,MAAM,EACpBA,QAAQ,KAAM,MAAM,EACnB,WAAWD,KAAKqkB,CAAI,IACtBA,EAAOA,EAAKa,WAAW,aAAc,iBAAiB,GAExD5Z,GAAQ4X,UAAYmB,EAEpBvN,EAAKyN,YAAY,GAAGjZ,GAAQkZ,UAAU,CACxC,CAAC,GAMC,gBAAgBxkB,KAAKgjB,CAAe,IACtCmB,EAAYC,GAAiBnB,EAAK,CAChCkC,aAAc,CAAC,GAAG,CACpB,CAAC,EACDhB,EAAUvB,QAAS9L,GAAS,CAC1B,IAAIuN,EAAOvN,EAAKwN,UACbrkB,QAAQ,KAAM,OAAO,EACrBA,QAAQ,KAAM,MAAM,EACpBA,QAAQ,KAAM,MAAM,EACnB,+BAA+BD,KAAKqkB,CAAI,IAC1CA,EAAOA,EAAKa,WACV,mCACA,4FACF,GAEF5Z,GAAQ4X,UAAYmB,EAEpBvN,EAAKyN,YAAY,GAAGjZ,GAAQkZ,UAAU,CACxC,CAAC,GAMCxB,EAAgBpJ,SAAS,GAAG,EAAG,CACjC,IAAIwL,EAAY,KAChB,MAAMC,EAA2B,CAAC,GAAGpC,EAAII,iBAAiB,GAAG,CAAC,EAAEvR,OAC9D,CAAC2S,EAAG1Z,IAAU,CACZ,IAAIua,EAAe,EACnB,QAAS7Z,EAAI,EAAGA,EAAIgZ,EAAED,WAAW5gB,OAAQ6H,IAAK,CAC5C,MAAMqL,EAAO2N,EAAED,WAAW/Y,CAAC,EAE3B,GAAIqL,EAAKyO,WAAaC,KAAKC,WAEzB,GADa3O,EAAK2M,YAAYhK,KAAI,IACrB,GACX,MAAO,WAEA3C,EAAKkO,UAAY,KAErB,GAAIlO,EAAKkO,UAAY,IAAK,CAC/B,MAAMU,EAAW5O,EAAK2M,YAAYhK,KAAI,EACtC,GAAI,CAACiM,GAAY,CAACA,EAASC,WAAW,GAAG,EACvC,MAAO,GAEPL,GAEJ,KACE,OAAO,EAEX,CAQA,GAJIA,EAAe,GAIfA,EAAe,GAAKF,GAAara,IAAUqa,EAAY,EACzDA,SAAYra,EACL,EAEX,CACF,EACIsa,WAA0BzhB,QAC5ByhB,EAAyBzC,QAAS6B,GAAM,CACtCA,EAAEvL,UAAUC,IAAI,kBAAkB,EAClCsL,EAAE7P,MAAQ6P,EAAEZ,SACd,CAAC,CAEL,CAEA,OAAId,GACFnK,eAAe,IAAMmK,EAAeE,CAAG,CAAC,EAI1CD,EAAkBC,EAAIC,UAEfF,CACT,CACA,MAAM4C,GAAiB5iB,GAAI8f,EAAe,EAEpC+C,GAAsB,CAE1B,QAEA,MACA,QACA,QACA,OACA,MACA,QAEA,QACA,SACA,SACA,UACA,SACA,SAEA,MACA,OAEA,SACA,WACA,SAEA,QACA,SACA,WAEA,OACA,UAAU,EAENC,GAAyB3R,OAAO4R,YACpCF,GAAoB1L,IAAK6L,GAAa,CAACA,EAAU,EAAI,CAAC,CACxD,EAEMC,GAAmB,+BACnBC,GAAqB,GAE3B,SAASxC,GAAY7S,EAAM,OACzB,GAAI,GAACA,IAAQA,IAAKuF,gBAALvF,eAAqB,MAGlC,GAAI,CACF,MAAM1Q,EAAM0Q,EAAKgT,UAAUpK,KAAI,EACzB0M,GAAUhmB,EAAI2f,MAAMmG,EAAgB,GAAK,CAAE,GAAE,CAAC,GAAK,GACzD,GAAI,CAACE,EAAQ,OACb,MAAMC,EAAajmB,EAAI+jB,MACrBiC,EAAOviB,OACPuiB,EAAOviB,OAASsiB,EAClB,EACMG,EAASlmB,EAAI+jB,MAAMiC,EAAOviB,OAASsiB,EAAkB,EACrDI,EAASnmB,EAAI+jB,MAAMiC,EAAOviB,MAAM,EAAEA,OAASsiB,GACjDrV,EAAKqS,UAAa,2BAA0BiD,CAAO,sBACjDG,EAAS,WAAa,EACvB,IAAGF,CAAW,kCAAiCC,CAAO,SACzD,MAAY,CAAC,CACf,CAEA,SAASjC,GAAiBnB,EAAK/f,EAAO,GAAI,OACxC,MAAMihB,EAAY,GACZoC,EAAkBpS,OAAOqS,OAC7B,GACAV,IACA5iB,IAAKiiB,eAALjiB,cAAmBujB,OAAO,CAAClpB,EAAKmpB,KAC9BnpB,EAAImpB,CAAG,EAAI,GACJnpB,GACN,GACL,EACMopB,EAAOnb,SAASob,iBACpB3D,EACA4D,WAAWC,UACX,CACEC,WAAWjQ,EAAM,CACf,OAAIyP,EAAgBzP,EAAK2D,WAAWuL,QAAQ,EACnCa,WAAWG,cAEbH,WAAWI,aACpB,CACD,EACD,EACF,EACA,IAAInQ,EACJ,KAAQA,EAAO6P,EAAKO,YAClB/C,EAAUlgB,KAAK6S,CAAI,EAErB,OAAOqN,CACT,CCpVA,MAAMgD,GAAM3b,SAASmM,cAAc,KAAK,EACxC,SAASyP,GAAY/C,EAAM,CACzB,OAAKA,GACDnB,aAAYmB,EACbpkB,QAAQ,SAAU;AAAA;AAAA,CAAU,EAC5BA,QAAQ,UAAW;AAAA,CAAS,EAC/BknB,GAAI9D,iBAAiB,IAAI,EAAET,QAAgB+B,GAAA,CACzCA,EAAGJ,YAAY;AAAA,CAAI,EACpB,EAID4C,GAAI9D,iBAAiB,YAAY,EAAET,QAAgByE,GAAA,CACjDA,EAAG7D,OAAO,EACX,EAED2D,GAAI9D,iBAAiB,WAAW,EAAET,QAAgByE,GAAA,CAChDA,EAAGC,OAAO,KAAK,EAChB,EAEMH,GAAItD,UAAU5jB,QAAQ,cAAe;AAAA;AAAA,CAAM,EAAEwZ,QAlBlC,EAmBpB,CAEA,MAAezW,MAAIokB,EAAW,ECvB9B,SAASG,GAAmBrkB,EAAM,CAChC,KAAM,CAAEskB,WAAW,CAAE,EAAE1qB,WAAU2qB,cAAaC,WAAU,EAAIxkB,GAAQ,GACpE,OAAQpF,GAAM,SACZ,GAAI,CAAEiZ,QAAQ,EAAGjZ,EAKjB,GAJAiZ,EAASA,EAAO2D,QAAQ,GAAG,EACvB,CAAC3D,GAGDjZ,EAAE6pB,SAAW7pB,EAAE8pB,SAAW9pB,EAAE+pB,UAAY/pB,EAAEgqB,QAAUhqB,EAAEiqB,QAAU,EAClE,OAGF,MAAMC,GAAWjR,IAAOkR,kBAAPlR,cAAwB0M,YACnCyE,EAAqBF,iBAAUG,SAAS,KACxCC,EAAmBrR,EAAO8M,UAAU8B,WAAW,GAAG,EACxD,GACG5O,EAAOmC,UAAUmP,SAAS,OAAO,GAAKD,GACtCF,GAAsB,CAACE,EACxB,CACA,MAAME,GACJvR,EAAOX,cAAc,MAAM,GAAKW,GAChC8M,UAAUpK,OACNiG,EAAW4I,EAAWroB,QAAQ,KAAM,EAAE,EACtCE,EAAM4W,EAAOwR,aAAa,MAAM,EAChCC,EAAUhB,EAAShrB,KACtBgsB,GACCA,EAAQ9I,WAAaA,GACrB8I,EAAQjJ,OAASG,GACjB8I,EAAQroB,MAAQA,CACpB,EACA,GAAIqoB,EACF1qB,EAAEsiB,eAAc,EAChBtiB,EAAE6c,gBAAe,EACjBjW,EAAOwD,YAAc,CACnB9K,QAASorB,EAAQjJ,KACjBziB,oBAEO,CAAC,SAASkD,KAAKsoB,CAAU,EAAG,CACrCvpB,iBAA+B,EAC/BjB,EAAEsiB,gBAAe,EACjBtiB,MAAiB0c,EAAAzD,EAAE,qBACnBrS,cAAgC,CAC1B,UACJtH,UACAN,EAEJ,UAAA2qB,EAAA,CACK,MAAAgB,EAAkBT,GAAA,YAAAA,EAAA,cACvB,GAAAjR,qBAA6BiR,SAAUG,GAAQM,EAAK,CAChD1R,iBAAOmC,EACTpb,EAAEsiB,gBAAe,EACjBtiB,MAAiB4qB,EAAA3R,EAAE,kCACb2R,EAAY5rB,OAAWmD,CAAQ,MAASyoB,CAACjP,GAAM,OAAAiP,CAAA,GACrD,SAAa,KAAG5rB,WACJ,cAAAia,EAAA,qBAAA2Q,IAAA3Q,EAAA,OAAUjZ,EAAE,iBACxBC,EAAQ,gBAAe,IAEvB2G,aAAoB,CAGpB,yCAEA5G,SAAiB,SAAE4G,EAAA,cAAAqS,EAAA,cAInBhZ,CClER,KAAM,CAAEikB,SAAO,EAAI,IAAIhD,KAAK6B,eAAgB,EAACkB,gBAAe,EAEtD4G,GAAmBzlB,GAAS,CAChC,KAAM,CAAE0lB,WAAUC,WAAUC,YAAW,EAAI5lB,GAAQ,GAC7C6lB,EAAc,IAAIC,KAAM,EAACC,YAAW,EAC1C,OAAOjK,KAAK6B,eAAemB,GAAQ,CAEjCV,KAAMsH,IAAaG,EAAcxQ,OAAY,UAC7C3F,MAAO,QACPsW,IAAK,UAELC,KAAMN,EAAWtQ,OAAY,UAC7B6Q,OAAQP,EAAWtQ,OAAY,UAC/B,GAAGuQ,CACL,CAAC,CACH,EACMjI,GAAiB7d,GAAI2lB,EAAe,EAE1C,SAASU,GAAapI,EAAMqI,EAAS,CACnC,OAAMrI,aAAgB+H,OACpB/H,EAAO,IAAI+H,KAAK/H,CAAI,GAEVJ,GAAe,CACzB+H,SAAU3H,EAAKgI,YAAa,EAC5B,GAAGK,CACL,CAAC,EACoBtI,OAAOC,CAAI,CAElC,CC9BA,KAAM,CAAEe,SAAO,EAAIhD,KAAKuK,eAAexH,kBACjCyH,GAAgBxK,KAAKuK,aAAavH,GAAQ,CAC9CyH,SAAU,SACZ,CAAC,EAAEzI,OCSH,SAAS0I,GAAa,CACpBC,WACAvsB,UACAwsB,aAAa,KACbC,kBAAkB,GAClB/sB,WACA0S,WACAsa,WACA9nB,UACA+nB,eAAe,GACfC,YAAY,GACZC,kBACAC,kBAAkB,GAClBC,eAAe,CAAC,EAChBC,2BAA2B,EAC7B,EAAG,CACD,GAAIT,EACF,OACExM,EAAA,OAAKtI,MAAM,yBAAwBkB,SAAA,CACjCnC,EAACmE,GAAM,CAACrD,KAAMkV,EAAa,EAC3BzM,EAAA,QAAApH,UACEnC,EAAA,KAAAmC,SAAG,WAAW,EACdnC,EAAK,SACLA,EAAA,QAAMiB,MAAM,qBAAoBkB,SAAC,UAAa,CAAC,EAC3C,CAAC,EACJ,EAIT,GAAI,CAAC3Y,EACI,YAKH,MACJjB,KACAojB,OACAC,SACAC,eACA/hB,cACAgiB,WACAzB,SACA9d,MACAkqB,gBACAC,eACApa,MACAqa,SACAC,OACAva,QACAwa,iBACAC,WACEttB,IACA,IAACuiB,GAAGC,GAAOC,CAAK,EAAIN,EAAKO,MAAM,eAAe,GAAK,CAAGP,EAAI,EAC1D0K,IACFpK,EAAS,IAAGoK,CAAgB,IAGxBU,SAAgBJ,iBAAQ/tB,KAAYouB,GAAA,CAAC,CAACA,EAAEC,YAAc,CAAC,CAACD,EAAE3rB,OAE1D6rB,GAAuB,GAC7B,UAAW1f,KAAK+e,EACTC,EAAyBxQ,SAASxO,CAAC,IACjBA,IAAC,EAAI+e,EAAa/e,CAAC,GAG5C,MAAM2f,GACJD,GAAqBra,WACrBqa,GAAqBE,YACrBF,GAAqBG,UAEvB,OACE9N,EAAA,KACEtI,MAAM,gBACN2F,KAAMra,EACN4W,OAAQvH,EAAW,SAAW,KAC9BoF,MAAQ,IAAG2K,CAAK,GAChBvd,QAAgBlE,GAAA,CACV0R,MAEAxN,IADJlE,EAAEsiB,eAAe,EACbpe,EAAS,OAAOA,EAAQlE,CAAC,EACzBgsB,EAEF/rB,SAAS6E,KAAQ,IAAG9F,CAAS,MAAKX,CAAG,GAErCuI,EAAOwD,YAAc,CACnB9K,UACAN,YAGN,EAAEiZ,SAAA,CAEFnC,EAACmE,GAAM,CACL5X,IAAK0pB,EAAkBpK,EAAeD,GAAUC,EAChD/K,KAAMkV,EACN5R,SAAU9H,EACX,EACDiN,EAAA,QAAMtI,MAAM,wBAAuBkB,UAChC,CAACmU,GACAtW,EAAAyM,EAAA,CAAAtK,SACGrY,EACCkW,EAAA,KAAAmC,SACEnC,EAACoK,GAAS,CAACjc,KAAMrE,EAAaugB,SAAiB,EAC9C,EAEHrK,EAAA,KAAAmC,SAAI2J,EAAY,EAElB,EACD,IACHvC,EAAA,QAAMtI,MAAM,qBAAoBkB,SAAA,CAAC,IAC7B6J,GACFhM,EAAA,QAAM,EACLiM,CAAK,EACF,EACLkK,GACC5M,EAAAkD,EAAA,CAAAtK,SACEnC,GAAK,SACLuJ,EAAA,SAAOtI,MAAM,+BAA8BkB,SAAA,CAAC,UAClCsU,EACP,CAAC,CAACC,GACDnN,EAAAkD,EAAA,CAAAtK,SAAA,CACG,IAAI,iBACiB,IACrBsT,GAAaiB,EAAc,CAC1BzB,SAAU,GACX,CAAC,EACF,CACH,EACI,CAAC,EACR,EAEHmB,GACC7M,EAAA,OAAKtI,MAAM,sBAAqBkB,SAC7B7F,IACC0D,EAAAyM,EAAA,CAAAtK,SACEoH,EAAA,QAAMtI,MAAM,gBAAekB,SAAA,CACzBnC,EAACa,EAAI,CAACD,KAAK,KAAO,GACpB,cAAM,CACN,GAEH,CAAC,CAACvE,GACD2D,EAAAyM,EAAA,CAAAtK,SACEoH,EAAA,QAAMtI,MAAM,gBAAekB,SAAA,CACzBnC,EAACa,EAAI,CAACD,KAAK,OAAS,GACtB,UAAM,EACN,EAEHuW,IACCnX,EAAA,OAA2BiB,MAAM,8BAA6BkB,SAC5DnC,EAAA,OAAKiB,MAAM,yBAAwBkB,SAChC+U,GAAqBra,WACtBqa,GAAqBE,WACnBpX,EAAA,QAAMiB,MAAM,cAAakB,SAAC,QAAY,GACpC+U,GAAqBG,UACvBrX,EAAA,QAAMiB,MAAM,cAAakB,SAAC,WAAe,GACvC+U,GAAqBra,UACvBmD,EAAA,QAAMiB,MAAM,cAAakB,SAAC,WAAe,GACvC+U,GAAqBE,WACvBpX,EAAA,QAAMiB,MAAM,cAAakB,SAAC,aAAiB,GACzC,KACD,GAZGoU,EAAahuB,EAalB,EAEN,CAAC,CAACsuB,GACDtN,EAAA,QAAMtI,MAAM,KAAIkB,SACbyT,IAAciB,CAAc,EAAG,IAC/BA,IAAmB,EAAI,WAAa,WAAW,CAC5C,GAEP,CAAC,CAACE,IACDxN,EAAA,QAAMtI,MAAM,iBAAgBkB,SAAA,CAC1BnC,EAACa,EAAI,CAACD,KAAK,eAAeE,KAAK,IAAK,EAAE,IACtCd,EAAA,QACEE,wBAAyB,CACvBC,OAAQ6R,GAAe+E,GAAc1rB,MAAO,CAAEgf,SAAQ,CACxD,EACD,CAAC,CACE,GAEP,CAAC/N,GACA,CAACD,GACD,CAAC8a,IACD,CAACN,GACD,CAACE,IACD,CAAC,CAACD,GACAvN,EAAA,QAAMtI,MAAM,aAAYkB,SAAC,UAChB,IACPnC,EAAA,QAAMmN,SAAU2J,EAAU3U,SACvBsT,GAAaqB,EAAW,CACvB7B,SAAU,GACX,EACG,CAAC,EACH,CACP,EACA,CACN,EACG,CAAC,EACN,CAEP,yFC7MMqC,GAAgB,GAEtB,SAAStP,GAASuP,EAAS,CACzB,GAAI,CACF,KAAM,CAAEC,UAASxqB,QAAQ,EAAGhD,GAAkB,EACxCgB,EAAO,GAAEgC,CAAO,IAAGuqB,CAAQ,GACjC,GAAID,GAActsB,CAAG,EAAG,OAAOssB,GAActsB,CAAG,EAChD,MAAMysB,EAAQC,GAASH,CAAO,EAC9B,OAAKE,EACGH,GAActsB,CAAG,EAAI2sB,GAAUH,EAASC,EAAO,CACrDG,kBAAmB,GACnBC,MAAO,EACT,CAAC,EAJkB,EAKpB,MAAW,CACV,MAAO,EACT,CACF,glHCtBA,IAAAC,GAAA,CAAO,k6sBCWDC,GAAcC,GAAY,YAAa,cAAc,EAIrDC,GAAS,CACb3sB,IAAKA,CAACN,EAAKktB,IAAQ5sB,GAAIN,EAAKktB,EAAKH,EAAW,EAC5ChtB,IAAMC,GAAQD,GAAIC,EAAK+sB,EAAW,EAClCI,QAAU3X,GAAS2X,GAAQ3X,EAAMuX,EAAW,EAC5ClsB,IAAMb,GAAQa,GAAIb,EAAK+sB,EAAW,EAClCK,QAAU5X,GAAS4X,GAAQ5X,EAAMuX,EAAW,EAC5CM,MAAOA,IAAMA,GAAMN,EAAW,EAC9BvX,KAAMA,IAAMA,GAAKuX,EAAW,CAC9B,EAEeO,GAAA,CACbL,SACF,EC3BeM,GAAA,CACbC,OAAQ,QACRC,SAAU,QACVC,QAAS,OACTC,OAAQ,SACV,ECGA,SAAwBC,GAAK,CAC3Bzd,OACA0d,OACAC,WACA9a,UAAUA,IAAM,CAAC,EACjB+a,WAAWA,IAAM,CAAC,CACpB,EAAG,CACD,KAAM,CAACC,EAASC,CAAU,EAAI1X,EAAS,SAAS,EAC1C,CACJ2X,UACAC,YACA5wB,KACA6wB,WACAC,UACAC,WACAC,QACAC,cACAC,aACApP,QACElP,IACEue,EAAgB,CAAC,CAACP,GAAa,IAAI/D,KAAK+D,CAAS,EAsBjDQ,EAAiBH,GAAeC,EACtC,IAAIG,EAAiB,EAEjBD,GAAkB,IACHC,EAAA,EACRD,GAAkB,IACVC,EAAA,EACRD,GAAkB,MACVC,EAAA,GAGnB,KAAM,CAACC,EAAaC,CAAc,EAAIvY,EAAS,EAAK,EAC9CwY,EAAwBV,EAAQW,MAAaC,KAAER,aAAe,IAAI,EAExE,OACElQ,EAAA,OACEsP,OACAqB,IAAI,OACJjZ,MAAQ,QAAO6X,EAAW,YAAc,EAAG,IACzCE,IAAY,UAAY,UAAY,EACrC,GAAE7W,SAAA,CAED0X,GAAeE,GAA0BR,GAASL,EAClD3P,EAAAkD,EAAA,CAAAtK,UACEnC,EAAA,OAAKiB,MAAM,eAAckB,SACtBkX,EAAQ9S,IAAI,CAAC4T,EAAQtiB,IAAM,CACpB,MAAEmJ,QAAOyY,WAAYW,CAAqBD,IAC1CE,EAAaV,GACbS,EAAmBT,EAAkB,KAAKW,QAC1CV,CACF,EACA,EAEEW,EACJH,EAAmB,GACnBA,IACEphB,KAAKC,IAAI,GAAGogB,EAAQ9S,IAAK0T,GAAMA,EAAER,UAAU,CAAC,EAChD,OACElQ,EAAA,OAEEtI,MAAQ,2BACNsZ,EAAY,sBAAwB,EACrC,GACDna,MAAO,CACL,eAAiB,GAAEia,CAAW,GAChC,EAAElY,UAEFoH,EAAA,OAAKtI,MAAM,oBAAmBkB,UAC5BnC,EAAA,QAAAmC,SACEnC,EAACoK,GAAS,CAACjc,KAAM6S,EAAOqJ,SAAiB,EACrC,EACLkP,GAASD,EAAStT,SAASnO,CAAC,GAC3B0R,EAAAkD,EAAA,CAAAtK,SACG,KACDnC,EAACa,EAAI,CAACD,KAAK,eAAgB,CAAC,EAC5B,CACH,EACE,EACL2I,EAAA,OACEtI,MAAM,oBACND,MAAQ,GAAEoZ,CAAiB,QACzBA,IAAqB,EAAI,GAAK,GAC/B,GAAEjY,SAAA,CAEFkY,EAAW,GACd,EAAK,CAAC,GA1BA,GAAExiB,CAAE,IAAGmJ,CAAM,IAAGoZ,CAAiB,EA2BpC,EAER,CACE,GACJ,CAAClB,GAAW,CAACK,GACZhQ,EAAA,UACEtI,MAAM,0BACNuZ,SAAUxB,IAAY,UACtB5qB,QAAgBlE,GAAA,CACdA,EAAEsiB,eAAe,EACjBsN,EAAe,EAAK,CACtB,EAAE3X,SAAA,CAEFnC,EAACa,EAAI,CAACD,KAAK,aAAaE,KAAK,GAAK,GACpC,iBAAQ,CACT,EACD,EAEFyI,EAAA,QACEkR,SAAU,MAAOvwB,GAAM,CACrBA,EAAEsiB,eAAe,EACjB,MAAMkO,EAAOxwB,EAAEiZ,OACTwX,EAAW,IAAIC,SAASF,CAAI,EAC5BG,EAAU,GACP7L,UAAQ,CAAC3jB,EAAOL,IAAQ,CAC3BA,IAAQ,QACV6vB,EAAQxqB,KAAKhF,CAAK,CACpB,CACD,EACIwvB,EAAQ7qB,SACbipB,EAAW,SAAS,EACpB,MAAMF,EAAS8B,CAAO,EACtB5B,EAAW,SAAS,EACtB,EAAE9W,UAEFnC,EAAA,OAAKiB,MAAM,eAAckB,SACtBkX,EAAQ9S,IAAI,CAAC4T,EAAQtiB,IAAM,CACpB,MAAEmJ,OAAUmZ,IAClB,OACEna,EAAA,OAAKiB,MAAM,cAAakB,SACtBoH,EAAA,SAAOtI,MAAM,aAAYkB,UACvBnC,EAAA,SACEhO,KAAMonB,EAAW,WAAa,QAC9B0B,KAAK,OACLzvB,MAAOwM,EACP2iB,SAAUxB,IAAY,UACtBF,WACD,EACD9Y,EAAA,QAAMiB,MAAM,oBAAmBkB,SAC7BnC,EAACoK,GAAS,CAACjc,KAAM6S,EAAOqJ,SAAiB,EACrC,CAAC,EACF,EACJ,EAER,CACE,GACJ,CAACyO,GACA9Y,EAAA,UACEiB,MAAM,mBACNjP,KAAK,SACLwoB,SAAUxB,IAAY,UAAU7W,SACjC,OAEO,CACT,EACG,EAERoH,EAAA,KAAGtI,MAAM,YAAWkB,UACjB,CAAC+W,GAAW,CAACJ,GACZ9Y,EAAA,UACEhO,KAAK,SACLiP,MAAM,cACNuZ,SAAUxB,IAAY,UACtB5Y,MAAO,CACL2a,WAAY,EACd,EACA3sB,QAAgBlE,GAAA,CACdA,EAAEsiB,eAAe,EACjByM,EAAW,SAAS,GAEnB,UACC,MAAMjb,EAAQ,EACdib,EAAW,SAAS,KAExB,EACAjY,MAAM,UAASmB,SAEfnC,EAACa,EAAI,CAACD,KAAK,UAAUG,IAAI,UAAW,EAC9B,EAET,CAACwY,GAAS,CAACL,GAAW,CAACJ,GAAYiB,GAClCxQ,EAAA,UACEvX,KAAK,SACLiP,MAAM,cACNuZ,SAAUxB,IAAY,UACtB5qB,QAAgBlE,GAAA,CACdA,EAAEsiB,eAAe,EACjBsN,EAAe,CAACD,CAAW,CAC7B,EACA7Y,MAAO6Y,EAAc,eAAiB,eAAe1X,SAAA,CAErDnC,EAACa,EAAI,CACHD,KAAMiZ,EAAc,WAAa,YACjC9Y,IAAK8Y,EAAc,eAAiB,cACrC,GAAE,GAAG,EACA,EAET,CAACX,GAAW,CAACJ,GAAY,IAC1B9Y,EAAA,QAAMgB,MAAOyY,EAAWtX,SAAEyT,GAAc6D,CAAU,CAAQ,WACzDA,IAAe,EAAI,GAAK,IACxB,CAAC,CAACD,GAAeA,IAAgBC,GAChClQ,EAAAkD,EAAA,CAAAtK,SACG,KAAI,KACEnC,EAAA,QAAMgB,MAAOwY,EAAYrX,SAC7ByT,GAAc4D,CAAW,EACtB,EAAE,IAAI,QAEXA,IAAgB,EAAI,GAAK,GAAG,CAC7B,GACD,IAAI,KACCN,EAAU,QAAU,SAAU,IACrC,CAAC,CAACQ,GAAiB1Z,EAACkN,GAAY,CAACC,SAAUuM,EAAgB,CAAC,CAC5D,GAAE,GAAG,EACL,CAET,CC/OA,MAAMsB,GAAgBC,GAAa,ECCnC,SAASC,GAAYC,EAAUC,EAAe,CAC5C,GAAI,EAACD,WAAUnrB,QAAe,SACxBqrB,QAAiBF,EAASjd,OAAc8Y,GAAA,CACtC,MAAE9Y,QAAW8Y,IACbsE,EAAapd,EAAOqd,QAAQvV,SAASoV,CAAa,EACxD,OAAKE,EACApd,EAAOib,UACL,IAAI/D,KAAKlX,EAAOib,SAAS,MAAQ/D,KADVkG,EADN,EAEqB,CAC9C,EACD,GAAI,CAACD,EAAerrB,OAAe,SAE/BwrB,GADaH,EAAelL,QAAY6G,EAAE9Y,OAAOud,eAAiB,MAAM,EAEnE,OACLC,OAAQ,QAGZ,GADeL,EAAelL,QAAY6G,EAAE9Y,OAAOud,eAAiB,MAAM,EAC9D,CACV,MAAME,EAAeN,EAAe9U,IAAWyQ,KAAE9Y,OAAO8C,KAAK,EACtD,OACL0a,OAAQ,OACRE,OAAQD,EACRE,UAAWF,EAAalV,KAAK,KAAK,EAEtC,CACO,QACT,CACaqV,SAAa1sB,GAAI8rB,EAAW,EAEzBa,YAAaC,EAAMZ,EAAea,EAAkB,OAC5D,MAAEd,UAAaa,IAGjBE,GAFA,EAACf,WAAUnrB,SACAisB,KAAoBD,IAAKxyB,UAALwyB,cAAczzB,MAAO0zB,EACrC,SACbE,QAAcL,GAAWX,EAAUC,CAAa,EACtD,OAAKe,EACDA,EAAYT,SAAW,OADF,EAI3B,CACgBU,YAAcC,EAAOjB,EAAe,CAClD,GAAI,EAACiB,WAAOrsB,QAAQ,MAAO,GAC3B,GAAI,CAACorB,EAAsBiB,SAC3B,MAAMJ,EAAmBxzB,EAAMgD,QAAQV,IAAI,gBAAgB,EAC3D,OAAOsxB,EAAMne,OAAQ8d,GACnBD,GAAaC,EAAMZ,EAAea,CAAgB,CACpD,CACF,CCjDA,MAAM1I,GAAM3b,SAASmM,cAAc,KAAK,EACzB,SAASuY,GAAkB7L,EAAM,CAC9C,OAAKA,GACL8C,GAAIjE,UAAYmB,EAGhB8C,GAAI9D,iBAAiB,YAAY,EAAET,QAASyE,GAAO,CACjDA,EAAG7D,OAAM,CACX,CAAC,EACM2D,GAAItD,UAAUjgB,QAPH,CAQpB,CCVausB,SAAc,oBAAqBlzB,OAEzC,SAAS6V,GAAM/Q,EAAM0qB,EAAM,CAChC,GAAK0D,GACL,GAAI,CACEC,gBAAgBC,UAClBD,gBAAgBE,OAAM,EAExB,MAAMC,EAAY,IAAIC,yBAAyBzuB,CAAI,EAC/C0qB,IAAM8D,EAAU9D,KAAOA,GAC3B2D,gBAAgBtd,MAAMyd,CAAS,CAChC,OAAQzyB,EAAG,CACVwP,MAAMxP,CAAC,CACT,CACF,CCZA,SAAS2yB,GAAWhrB,EAAQ,CACpB,MAAEirB,cAAanlB,UAASwD,OAAM4hB,kBAAqBlrB,IACzD,IAAI1D,EAAO,GACP2uB,kBAAajX,OACPiX,KAER3uB,GAAQqlB,GAAY7b,CAAO,EAE7BxJ,EAAOA,EAAK0X,OACR1K,IACMhN,GAAA,OAEN4uB,WAAkB/sB,SAElB7B,GAAA,IACA4uB,EACGxW,IAEIhH,IAAA,CACCyd,MAAO,MACPC,KAAM,MACNC,MAAO,KACPC,MAAO,KACPC,QAAS,KACT7d,EAAEvN,IAAI,GAAK,EACjB,EACCyU,KAAK,EAAE,GAEPtY,CACT,CC3Be,SAASkvB,GAAa,CAAE5uB,YAAY,WAAY,EAAI,GAAI,CACrE,MAAMwU,EAAM9K,KACNmlB,EAAWC,GAAqB,CAAC,CAAE3kB,QAAO,IAAM,CACpD,GAAIqK,EAAI5K,QAAS,CACf,KAAM,CAAEmlB,gBAAiBva,EAAI5K,QAC7B,IAAIolB,EAAYD,EAAe5kB,EAC/B,GAAI6kB,EAAW,CACb,KAAM,CAAE7kB,OAAQ8kB,EAASC,WAAU,EAAIzW,iBAAiBjE,EAAI5K,OAAO,EAC7DulB,EAAiBjW,SAASgW,GAAaD,EAAS,EAAE,EACxDD,EAAYD,EAAeI,CAC7B,CACA3a,EAAI5K,QAAQiN,UAAUuY,OAAOpvB,EAAWgvB,CAAS,CACnD,CACD,EAAE,GAAG,EACNK,UAAkB,CAChB7a,MACA8a,IAAK,aACLT,UACF,CAAC,EACMra,CACT,CCNA,MAAM+a,GAAW,iCAAiC5xB,KAAKiiB,UAAU4P,SAAS,EAYpEC,GAAe,MACfC,GAAsBjwB,GAAA,CACpB,MAAE6S,MAAK8X,OAAM1hB,QAAO,GAAG7I,CAASJ,IACtC,MAAI,CAAC6S,GAAO,CAACA,EAAI8E,KAAK,EAAU,KAE9B0D,EAAA,UACEvX,KAAK,SACLiP,MAAM,sBAAqB,GACvB3S,EACJF,QAAgBlE,GAAA,CACdA,EAAE6c,gBAAgB,EAClB7c,EAAEsiB,eAAe,EACjB1b,EAAO+D,aAAe,CACpBkM,MACA8X,OAEJ,EACA7X,MAAM,oBAAmBmB,UAExB+b,GACA,CAAC,CAAC/mB,GAAS6I,EAAA,OAAAmC,SAAMhL,EAAW,CAAC,EACxB,CAEZ,EAEMinB,GAAsB,IACfC,GAAqBjvB,GAChCkvB,cAAStuB,OACLsuB,EAAQtuB,OAASouB,IACjB,iBAAiBhyB,KAAKkyB,EAAQzY,KAAM,GACpC,EACN,EAEA,SAAS0Y,GAAM,CACbtd,MAAOxS,EAAY,GACnBwQ,QACA6G,KACA+S,OACA2F,eACAC,cACAC,cACAC,WACAvwB,UAAUA,IAAM,CAAC,CACnB,EAAG,CACK,MACJwwB,WACAC,cACAC,OACAC,mBACAC,aACAC,YACA1yB,MACAyF,MACEiN,IACE,CAAEigB,WAAW,CAAC,EAAGC,QAAO1c,SAAUqc,GAAQ,GAE1CpmB,EAAQ8lB,EAAeU,iBAAUxmB,MAAQymB,iBAAOzmB,MAChDE,EAAS4lB,EAAeU,iBAAUtmB,OAASumB,iBAAOvmB,OAClDwmB,EAAWZ,EAAejyB,EAAMyyB,GAAczyB,EAC9C8yB,EAAiBb,EACnBS,EACAF,GAAoBE,EAClBK,EAAc5mB,GAASE,EAAS,YAAc,WAE9C2mB,EAAkBX,EAAWY,GAAwBZ,CAAQ,EAAI,KAEjEa,EAAWtnB,KAEbunB,MACJ,GAAIjd,EAAO,CAMT,MAAM7I,GAAM6I,EAAM7I,EAAI,GAAK,EAAK,IAC1B+lB,GAAM,EAAIld,EAAMkd,GAAK,EAAK,IACfD,EAAA,GAAE9lB,EAAE0gB,QAAQ,CAAC,CAAE,KAAIqF,EAAErF,QAAQ,CAAC,CAAE,GACnD,CAEA,MAAMsF,EAAWznB,KACX0nB,EAAWC,GAAY,CAAC,CAAElmB,IAAG+lB,IAAGI,YAAY,CAC1C,MAAE1nB,QAAS4G,EAAU2gB,IAE3B,GAAI3gB,GAAO,CACT,MAAM5T,GAAQ20B,GAAqB,CAAEpmB,IAAG+lB,IAAGI,SAAO,EAE9CA,KAAU,EACZ9gB,GAAMmB,MAAM6f,eAAe,WAAW,EAEtChhB,GAAMmB,MAAM8f,YAAY,YAAa70B,EAAK,EAG5C4T,GAAM6H,QAAQ,aAAa,EAAE1G,MAAM+f,YACjCJ,IAAS,KAAO,QAAU,EAC9B,CACF,EAAG,CAAE,GAEC,CAACK,GAAkBC,EAAmB,EAAI9e,EAAS,EAAK,EACxD+e,EAAsB,CAC1Bxd,QAASsd,GACTG,kBAAmB,GACnBC,gBAAiB,GACjBC,2BAA4B,GAC5BtY,eAAgB,CACd1Z,UAAW,aACX2R,MAAO,CACLsJ,SAAU,SAMZ,CACF,EACAmW,YAGIzW,GAASkE,GACb,IAAOxH,EAAM5X,GAAU8R,EAACyF,GAAI,CAACK,KAAO,GAAK5X,CAAQ,GAAI,MACrD,CAAC4X,CAAE,CACL,EAEM4a,GAAoBrB,EAAiB,IAAIpwB,IAAIowB,CAAc,EAAI,KAC/DsB,GACJ3uB,IAAS,WACT0uB,IACA,6BAA6Bt0B,KAAKs0B,GAAkB3xB,QAAQ,EACxD6xB,EACJ5uB,IAAS,WACT0uB,IACA,gCAAgCt0B,KAAKs0B,GAAkB3xB,QAAQ,EAC3D8xB,GACJ7uB,IAAS,SACRA,IAAS,WAAagtB,GAAc,CAAC2B,IAAgB,CAACC,EAEnDE,EAAY3oB,KACZ,CAAC4oB,GAAwBC,EAAyB,EAAIzf,EAAS,EAAK,EAC1E0f,GAAgB,IAAM,CAGpB,GAFI,CAACJ,IACD,CAACrC,GACD,CAACsC,EAAUzoB,QAAS,OAClB,MAAE6oB,cAAaC,gBAAiBL,EAAUzoB,QAC1C+oB,GAAU1oB,EAAQwoB,GAAetoB,EAASuoB,EAC5CC,IAASJ,GAA0BI,EAAO,GAC7C,CAAC1oB,EAAOE,CAAM,CAAC,EAElB,MAAMyoB,GACJh4B,OAAOi4B,aAAehC,IAAgB,WAAa,IAAO,KACtD3B,GAAY2B,IAAgB,WAAa,EAAI,IAC7CiC,GAAoB,CACxB,kBAAmBhC,GAAoB,OAAMA,EAAgB9Y,KAAK,GAAG,CAAE,KAEnE+a,GACJ9oB,GAASE,EACL,CACE,UAAY,GAAEF,CAAM,KACpB,WAAa,GAAEE,CAAO,KAEtB,gBAAkB,GACfF,EAAQE,EAAUI,KAAKC,IAAI0kB,GAAW0D,EAAe,CACvD,KACDI,YAAc,GAAE/oB,CAAM,MAAKE,CAAO,GAClC,GAAG2oB,IAEL,CACE,GAAGA,IAGLG,GAAWrD,GAAmBQ,CAAW,EACzC8C,GACJ,CAAC,CAACjD,GAAe,CAACF,GAAgB,CAAC,CAACK,GAAe,CAAC6C,GAChDE,GAAUD,GAEDzzB,GAAA,CACH,MAAEiU,WAAU,GAAG4D,EAAc7X,IACnC,OACEqb,EAAA,aAAYxD,GAAS5D,SAAA,CAClBA,EACDnC,EAAA,cACEiB,MAAM,gBACN4X,OACAqB,IAAI,OACJ9rB,QAAgBlE,IAAA,CACdA,GAAEsiB,eAAe,EACjBtiB,GAAE6c,gBAAgB,EAClBjW,EAAO+D,aAAe,CACpBkM,IAAK8d,EACLhG,OAEJ,EAAE1W,SAED0c,EACS,CAAC,EACP,GArBZgD,EAyBJ,GAAIhB,GAEkB1Y,wBAAe/H,MAAM0hB,QAAU,UAEnDb,GAAgB,IAAM,CACfjD,IACAQ,IACJ,SAAY,CACP,IACF,MAAMuD,MAAM3C,EAAU,CAAE4C,KAAM,UAAW,EACzCpC,EAASvnB,QAAQkM,IAAM6a,OACb,CACV,KAED,EACF,CAACA,CAAQ,CAAC,EAGXpf,EAAC4hB,GAAM,CAAAzf,SACLnC,EAACoJ,GAAM,CACLnG,IAAK6d,EACL7f,MAAQ,qBAAoBxS,CAAU,GACtCL,UACA,mBAAkBkxB,EAClB,eAAc,CAACqC,GACfvhB,MACEoe,EACI,CACEyD,gBAAkB,OAAMjD,CAAW,IACnCkD,eAAgBnB,GACX,GAAEroB,CAAM,MAAKE,CAAO,KACrB+L,OACJ,GAAG4c,IAELC,GACLrf,SAEAqc,EACCxe,EAACmiB,GAAc,IAAK7B,EAAmBne,SACrCnC,EAAA,OACEiD,IAAK2c,EACLrb,IAAK6a,EACLre,IAAK8d,EACLnmB,QACAE,SACA,mBAAkB0mB,EAClB9a,QAAQ,QACRC,SAAS,OACTI,OAAe3a,GAAA,CACbA,EAAEiZ,OAAO2D,QAAQ,cAAc,EAAE1G,MAAM6hB,gBAAkB,GACzD/3B,EAAEiZ,OAAO2D,QAAQ,aAAa,EAAE1G,MAAM0hB,QAAU,GAChDzB,GAAoB,EAAI,CAC1B,EACAzb,QAAgB1a,GAAA,CACR,MAAEqa,OAAQra,EAAEiZ,OACdoB,IAAQ6a,GAAYA,IAAaC,IACnCn1B,EAAEiZ,OAAOoB,IAAM8a,EAEnB,EACD,EACa,EAEhB9V,EAAAkD,EAAA,CAAAtK,UACEnC,EAAA,OACEuE,IAAK6a,EACLre,IAAK4gB,GAAiB,GAAK9C,EAC3BnmB,QACAE,SACA,mBAAkB0mB,EAClB9a,QAAQ,OACRpE,MAAO,CAKLgiB,eAAgB1C,GAAiB,SAGjC,kBAAoB,GAAE1mB,KAAKG,IACzBH,KAAKC,IAAID,KAAKC,IAAIP,EAAOE,CAAM,EAAI,IAAK,CAAC,EACzC,GACF,CAAE,GACJ,EACAiM,OAAe3a,GAAA,CAEXiZ,SAAO2B,QAAQC,OAAS,EAC5B,EACAH,QAAgB1a,GAAA,CACR,MAAEqa,OAAQra,EAAEiZ,OACdoB,IAAQ6a,GAAYA,IAAaC,IACnCn1B,EAAEiZ,OAAOoB,IAAM8a,EAEnB,CACD,GACA,CAACsC,IACA3hB,EAACme,GAAQ,CAACpd,IAAK8d,EAAahG,OAAY1hB,MAAOwnB,EAAW,CAC3D,EACD,EAEE,EACF,EAED3sB,OAAS,QAAUA,IAAS,SAAW2uB,GAAc,CACxD0B,QAAgBnD,EAASoD,SAAW,GACpCC,EAAQvwB,IAAS,QAAUqwB,EAE3BG,GAAWtD,EAASoD,SAAW,GAC/BG,GAAoBC,GAAexD,EAASoD,QAAQ,EACpDK,GAAe,CAACnE,GAAgB,CAACC,GAAe8D,EAChDK,GAAiB,CAACpE,GAAgBC,GAAe8D,EACjDM,GAAe3D,EAASoD,SAAW,EAEnCQ,GAAa;AAAA;AAAA,aAEVv2B,CAAI;AAAA,gBACDyyB,CAAW;AAAA,eACZtmB,CAAM;AAAA,gBACLE,CAAO;AAAA,0BACG0mB,CAAY;AAAA;AAAA;AAAA,eAGvBiD,CAAM;AAAA,QACbA,EAAQ,GAAK,UAAW;AAAA;AAAA,cAElBC,EAAS;AAAA,QACfD,EAAQ,wDAA0D,EAAG;AAAA,QAErEA,GAASM,GACL,gKACA,EACL;AAAA;AAAA,IAIH,OACE7iB,EAAC4hB,GAAM,CAAAzf,SACLoH,EAACH,GAAM,CACLnI,MAAQ,SAAQxS,CAAU,UAAS8zB,EAAQ,MAAQ,OAAQ,IACzDK,GAAiB,gBAAkB,EACpC,IAAGD,GAAe,sBAAwB,EAAG,GAC9C,mBAAkBrD,EAClB,0BACGd,EAAmC7Z,OAApB8d,GAElB,aAAYF,GAAS,CAAC/D,GAAgB,CAACoE,GAAiB,MAAQ,GAChE,eAAc,CAACjB,GAKfvhB,MAAO,CAACoe,GAAgBgD,GACxBpzB,QAAgBlE,IAAA,CACd,GAAIy4B,GACE,IACFlD,EAASpnB,QAAQ0qB,aACP,CAAC,CAEf30B,EAAQlE,EAAC,CACX,EACA84B,aAAcA,IAAM,CAClB,GAAIL,GACE,IACFlD,EAASpnB,QAAQmF,YACP,CAAC,CAEjB,EACAylB,aAAcA,IAAM,CAClB,GAAIN,GACE,IACFlD,EAASpnB,QAAQ0qB,aACP,CAAC,CAEjB,EACAzf,QAASA,IAAM,CACb,GAAIqf,GACE,IACFlD,EAASpnB,QAAQmF,YACP,CAAC,CAEjB,EACA0lB,OAAQA,IAAM,CACZ,GAAIP,GACE,IACFlD,EAASpnB,QAAQ0qB,aACP,CAAC,CAEjB,EAAE5gB,SAAA,CAEDqc,GAAgBoE,GACfL,GAAS/D,EACPxe,EAACmiB,GAAc,IAAK7B,EAAqBxd,QAAO,GAAAX,SAC9CnC,EAAA,OACEiD,IAAK2c,EACL1f,wBAAyB,CACvBC,OAAQ2iB,EACV,EACD,EACa,EAEhB9iB,EAAA,OACEiB,MAAM,kBACNf,wBAAyB,CACvBC,OAAQ2iB,EACV,EACD,EAEDP,EACFviB,EAAA,SACEiD,IAAKwc,EACLlb,IAAKhY,EACL42B,OAAQnE,EACRtmB,QACAE,SACA,mBAAkB0mB,EAClB8D,QAAQ,OAERC,YAAW,GACXC,KAAI,GACJC,MAAK,GACLC,aACEX,GACW34B,IAAA,CACC,MAAEiZ,SAAWjZ,KACbu5B,GAAYtgB,mBAAQ2D,QAAQ,cAClC,GAAI2c,GAAW,CACb,MAAMpJ,EACHlX,GAAOugB,YAAcvgB,GAAOmf,SAAY,IAC3CmB,GAAUrjB,MAAM8f,YACd,aACC,GAAE7F,CAAW,GAChB,CACF,CAEF1V,SAEP,EAED4E,EAAAkD,EAAA,CAAAtK,UACEnC,EAAA,OACEuE,IAAKya,EACLje,IAAK4gB,GAAiB,GAAK9C,EAC3BnmB,QACAE,SACA,mBAAkB0mB,EAClB9a,QAAQ,OACT,EACDxE,EAAA,OAAKiB,MAAM,aAAYkB,SACrBnC,EAACa,EAAI,CAACD,KAAK,OAAOE,KAAK,KAAM,EAC1B,CAAC,CACN,GAEH,CAAC0d,GAAgB,CAACmD,IACjB3hB,EAACme,GAAQ,CAACpd,IAAK8d,EAAahG,OAAY1hB,MAAOwnB,EAAW,CAC3D,EACK,EACF,UAED3sB,IAAS,SAAW4uB,EAAc,CACrC6B,QAAoBC,GAAexD,EAASoD,QAAQ,EAC1D,OACEtiB,EAAC4hB,GAAM,CAAAzf,SACLoH,EAACH,GAAM,CACLnI,MAAQ,qBAAoBxS,CAAU,GACtC,0BACG+vB,EAAmC7Z,OAApB8d,EAElB,eAAc,CAACd,GACfvzB,UACAgS,MAAO,CAACoe,GAAgBgD,GAAYrf,SAAA,CAEnCqc,EACCxe,EAAA,SAAOuE,IAAK0a,GAAa1yB,EAAK62B,QAAQ,OAAOO,SAAQ,GAACC,SAAQ,GAAE,EAC9D5E,EACFhf,EAAA,OACEuE,IAAKya,EACLje,IAAK4gB,GAAiB,GAAK9C,EAC3BnmB,QACAE,SACA,mBAAkB0mB,EAClB9a,QAAQ,OACRI,QAAgB1a,GAAA,WACV,KAEFA,SAAEiZ,SAAFjZ,eAAU0lB,SAAV1lB,uBACU,CAAC,CACf,CACD,GACC,KACH,CAACs0B,GACAjV,EAAAkD,EAAA,CAAAtK,UACEnC,EAAA,OAAKiB,MAAM,aAAYkB,SACrBnC,EAACa,EAAI,CAACD,KAAK,OAAOE,KAAK,KAAM,CAC1B,GACJ,CAAC6gB,IACA3hB,EAACme,GAAQ,CAACpd,IAAK8d,EAAahG,OAAY1hB,MAAOwnB,EAAW,CAC3D,EACD,CACH,EACK,EACF,CAEZ,CACF,CC9gBA,SAASkF,GAAS31B,EAAO,CACvB,OACE8R,EAAC8jB,GAAa,CAAA3hB,SACXA,CAAC,CAAEc,MAAK0F,eACP3I,EAACyF,GAAI,IACCvX,EACJ+U,MACA7U,QAASA,CAAC,CAAE21B,QACVpb,MAAUob,IAAW,EAAI,QAAUpf,MAAS,EAE/C,EAEU,CAEnB,CCiDA,MAAMqf,GAA2B,IAC3BC,GAAyB,IAE/B,SAASC,GAAa37B,EAAIkE,EAAO,CAC/B,OAAOA,EAAM03B,GAAG37B,SAAS47B,QAAQ77B,CAAE,EAAEw5B,OACvC,CACA,MAAMsC,GAAkB50B,GAAKy0B,EAAY,EAEnCI,GAAiB,CACrB9L,OAAQ,SACRC,SAAU,WACVC,QAAS,iBACTC,OAAQ,iBACV,EAEM4L,GACJl7B,OAAOm7B,eAAiB7f,QACxB,mBAAmBvY,KAAKiiB,UAAU4P,SAAS,EAEvCwG,GAAkB,GAExB,SAASC,GAAYvpB,EAAM,OACrB,OAACA,mBAAMke,UAANle,QAAenL,OACZ;AAAA,EAAOmL,EAAKke,QACjB9S,IACE4T,GACE,KAAIA,EAAOnZ,KAAM,GAChBmZ,EAAOV,YAAc,EAAK,KAAIU,EAAOV,UAAW,IAAK,EACtD,EACL,EACChT,KAAK;AAAA,CAAI,CAAE,GARqB,EASrC,CACA,SAASke,GAAY9yB,EAAQ,CACrB,MAAEirB,cAAanlB,UAASwD,MAAStJ,IAEpCirB,SAAe,GAAEA,CAAY;AAAA;AAAA,EAAQ,IACtCtJ,GAAY7b,CAAO,EACnB+sB,GAAYvpB,CAAI,CAEpB,CAEA,MAAMypB,GAAc5Z,GAClB,CAAC,CAAE6Z,OAAM37B,WAAU2qB,aAAY,IAAM,CAC7B,MAAElc,UAAS0S,SAAQya,WAAUlR,WAAUrnB,KAAQs4B,IACrD,OACE7kB,EAAA,OACE6Y,KAAMiM,EACN5K,IAAI,OACJjZ,MAAM,gBACN7S,QAASulB,GAAmB,CAC1BC,WACA1qB,WACA2qB,cACAC,UAAWvnB,EACZ,EACD2T,wBAAyB,CACvBC,OAAQ6R,GAAera,EAAS,CAC9B0S,SACA8E,eAAyBE,GAAA,CAEvBA,EAAII,iBAAiB,0BAA0B,EAAET,QAAenmB,GAAA,CACzD,QAAQuD,KAAKvD,EAAEonB,UAAUpK,MAAM,GAClChd,EAAEk8B,gBAAgB,QAAQ,CAC5B,CACD,CACH,EACD,CACH,EACD,CAEL,EACA,CAAC9Z,EAAUC,IAAa,CAChB,MAAE2Z,KAAMG,CAAY/Z,IACpB,CAAE4Z,KAAMI,CAAY/Z,IACnB8Z,SAAQrtB,UAAYstB,EAAQttB,OACrC,CACF,EAEA,SAASutB,GAAO,CACd9uB,WACAvE,SACA3I,SAAU8N,EACV8J,OAAO,IACPqkB,oBACArM,WACAsM,oBACAC,gBACAtP,WACAuP,kBACAC,eAAgBC,EAChB3R,cAEA4R,eACAC,SACAC,oBAAoBA,IAAM,CAAC,EAC3BC,mBACAC,mBACAC,iBACAC,iBACF,EAAG,cACD,GAAIhQ,EACF,OACExM,EAAA,OAAKtI,MAAM,kBAAiBkB,SAAA,CAC1BnC,EAACmE,GAAM,CAACrD,KAAK,MAAO,EACpByI,EAAA,OAAKtI,MAAM,YAAWkB,UACpBnC,EAAA,OAAKiB,MAAM,OAAMkB,SAAC,eAAiB,EACnCnC,EAAA,OAAKiB,MAAM,oBAAmBkB,SAC5BnC,EAAA,OAAKiB,MAAM,UAASkB,SAClBnC,EAAA,KAAAmC,SAAG,gBAAgB,EAChB,EACF,CAAC,EACH,CAAC,EACH,EAGH,MAAE1V,QAAOvD,WAAUyE,iBAAkBsJ,GAAI,CAAE/N,SAAU8N,EAAc,EACnE,CAAE9N,SAAUa,GAAoBkN,GAAI,EACpC+uB,EAAe98B,IAAaa,EAElC,IAAI6M,EAAOV,GAAUE,IAAYvE,iBAAQtJ,IAAIW,CAAQ,EAC/C0H,QAAaq1B,GAAYn1B,CAAM,EAKrC,GAJKe,IACHA,EAASjB,EAAWlG,SAASkM,CAAI,GAAKhG,EAAWlG,SAAS0L,CAAQ,EAC3DF,KAAUrE,iBAAQtJ,GAAIW,CAAQ,GAEnC,CAAC2I,EACI,YAGH,MACJrI,QAAS,CACPmiB,OACAC,SACAC,eACAtjB,GAAI29B,EACJ35B,IAAK45B,GACLr8B,eACAgiB,WACAzB,OAAQ+b,GACR9pB,OACAD,QACF,EACA9T,KACA89B,gBACAC,YACAC,gBACAC,cACAC,mBACAC,cACAvrB,QACAooB,SACAoD,aACA7J,eACA8J,cACA9B,WACA+B,WACA1L,YACA2L,QACAhQ,aACAxf,eACAD,sBACAM,WACAic,YACAmJ,oBACAgK,UACAl6B,MACAN,MACA8d,SACA2c,OAEAC,WACAvwB,SAEE7E,IAEEtI,EAAiB+jB,GAAQ,IACtB7kB,EAAMgD,QAAQV,IAAI,gBAAgB,EACxC,CAAE,GACCmxB,EAAS5O,GAAQ,IACd/jB,GAAkBA,IAAmB28B,EAC3C,CAACA,EAAW38B,CAAc,CAAC,EAExB6xB,GAAgB8L,GAAWlM,EAAa,EACxCmM,GACJ,CAACjL,GAAU,CAACpD,GAAY,CAACjF,GAAeiI,GAAWX,GAAUC,EAAa,EAExE+L,uBAAYzL,UAAW,OAClB,YAGTvwB,SAA+B5C,IAEzB6+B,UACJ,EACEj8B,GACK0G,IACJ,KAAAs1B,GAEL,OAAAnnB,EAAAqnB,GAAA,CAEA,OAAAx1B,EAAA,WAAAs1B,cAAqD,gBACnD,aACiBC,EACbv1B,EACAs1B,oBACAj+B,EACgB,MACd85B,GAAcoE,aAChBE,GAAA,SAAAT,CAAA,MACAjB,GAAgBhS,IAAA,YAAAA,GAAA,KAAAgB,KAAA,KAAAvd,IACjB,CAAAkwB,IAAAlwB,KAAA9O,IAELg/B,GAAA,CAEMC,OACAF,WAEFC,cAGJ,GACwB,KAAOpB,cAAYra,gBAAUhiB,uBAAYN,EACjEi+B,GAAAj+B,CAAA,EAEI66B,GAACgB,GAAkBqC,CAAwC,OAAAC,GAAA,CACvDn+B,GAAiBhB,CAAS6O,EAC5B7N,EAAS,SAAAm+B,EAAA,IAAAA,CACXF,aAA2B,CACtB,CAGDA,CACOj/B,cAAuBgB,0CAE/Bo+B,GAAata,GAAA,IAClB,GADoB7kB,EAAA,gCACpB,2BACF,IACMo/B,WAIAC,UAAwBxa,iBAAc,6BACV,aACzB,IACJya,GAAAlU,GAAAiU,IAAA,EAAAl3B,EAAA,SAAArI,CAAA,EACCy/B,MAAmCA,KAAA,cAAAp3B,EAAA,cAAArI,CAAA,EAGvC,GAAAw+B,GACOkB,UACJ1e,EAAA,OAICwe,qBACWD,EACXI,qBAKM,aAAAd,GAGN/qB,SAAO,CAAAkN,EAAA,OACT,wBAEwB3S,eACd,aACQwwB,SAAWjlB,WAEzB,CAAW,MAAAnC,EAAAuL,GAAA,CAAiBpJ,QAC1BnC,EAAK,QAACY,WAAaE,WAAK,IAAIC,CAAI,GAASf,EACzCA,GAAS,UAAiBxW,QAASN,iCAA8B,KAAA4X,EAEnEd,oBACEnO,UAA0Bk1B,CAC1B3wB,EAAiC,CACjClN,EAEAi8B,SACArM,6BACA,6BACCsO,GAET,UAAA7d,EAAA,OAEA,wBAEwB3S,eACd,cACQwwB,SAAWjlB,MAEzBoH,KAAA,CAAW,QAAA1X,EAAA,QAAiBsQ,WACpBvB,WAAK,KAAc,IAAAZ,EAAA,QAAK,SAC9BA,SAAS,EAACxW,CAAgBA,CAASN,eAA8BkN,EAAA,KAAA2wB,GAAA,SACjE/mB,EAAA+mB,GAAA,iBAAA79B,EAAa,KAAA4X,EAEfd,oBACEnO,WACAuE,kBAAqB2wB,EAAY,CACjC79B,GACA4X,EAEAgY,6DACiBvP,EAAA,4BACjB3S,EACC,6BAET,aAAAwwB,GAGIxB,mBACF,wBAEwBhvB,eACd,eACQwwB,QAAWjlB,OAEzBoH,EAAA,mBAAA3S,CAAA,iBAAAke,GAAA9U,EAAAyF,GAAA,CAAW,GAAAvc,EAAA,IAAAA,CAAA,MAAA4rB,CAAA,SAAAA,CAAA,GAAiB3S,iCACpBvB,SAAKkU,CAAA,EAAeA,CAAA,MAAK9U,EAC9BpP,IAGGkV,SAAmB5c,OAAgC,SAC7CkN,EAAAvE,EAAA,iBAAA3I,EAEF,KAAA4X,EAIVd,oBACEnO,WACAuE,kBAAqBvE,EAAY,CACjC3I,GACA4X,EAEAgY,iBACAsM,CAAiBG,GAAA4C,EAAA,EAAA5mB,EAAAikB,CAAA,EACjB4C,GAAA1Z,GAAA,IACCnZ,GAAA3E,EAAA,6CAET,CAEA,mBAAAyE,GAEA,6BAAAG,EACA,EAAM4yB,WACN/yB,KAEMiwB,EAAA,IAAEjwB,iBAAoBG,+DAC1B5E,MAAWoE,GAC8B,MAAAqzB,EAAA/L,GAAA3kB,EAAA,EACrC2wB,eAAgCrE,EACpC,GAAA5uB,GACGA,GACAG,IAEiB+yB,GAACA,EACnB1U,MAEA8S,SAEAG,EACA/J,GAEO,CAAAyL,GAAAC,EAAA,EAAAlnB,EAAA,IACTmnB,GAAArL,KACMgL,QACCA,QAGP7yB,iBAaImzB,GAACH,GAAyB,MAE1BE,GAAiC,8FACjCE,GAAavL,GAAa,yBAAAP,GAAA,OAAAR,GAAA3kB,EAAA,eAAAmlB,GAAAnlB,EAAA,GAC1BkxB,MAAiCrB,EAAA,EACjCsB,GAAejC,GAAApR,GAAA6R,EAAA,EAEfqB,UAAuB/B,KAAA,UAAAA,KAAA,UAE7BA,KAAuC,WAAA1K,IAEjC6M,OAWAC,YAA6BvT,OAMnC,GACE9nB,OACEi5B,eAAoC,GAExC18B,GAAA,MAAAA,EAAA,WAAA++B,EAAA/+B,GAAA,YAAAA,EAAA,uBAAA++B,EAAA,cAE2B,CACrB,cAAiBp3B,CACnB,KAI2Bf,EACVe,aACjB,cAACA,CACD,EAAY,EACdq3B,GAAA5b,GAAA,IACOlZ,GAAc,KAAAmH,GAAA,kBAAA3N,GAAAq7B,EAAA1tB,EAAA,0BAAA0tB,EAAA,aAAAr7B,EAAA,KAAAq7B,IAAA,GACnBE,EAAet3B,GACjBu3B,GAAA,UACF,IAAApD,GAAA,CAAAr4B,EAGMu7B,eAA4B,KAKlC,GAAME,CACA,GAAiB,CAAA9C,EAAA,CACnB5sB,IAAM2vB,EAA6B,mBAKjC,GAJKH,KACTI,GAAA;AAAA;AAAA,sCAGQA,CADU,QAAAA,CAAA,EAEd,MAAiB,EAEjB,CAOK5+B,GANC6+B,cAAyB,CAC/B,GAAA13B,EACS,WAAAy0B,EACT,aAAAC,IAAAD,EAAA,OAGK57B,GACL,MAAGmH,4CACHy0B,UAAWkD,EAAClD,GACZC,EAA+C,KACjD,CACA,MAAeiD,EAAA,MAAA/8B,EAAA,oBAAAlE,CAAA,WACPihC,aAAwBrF,EAC9B5xB,EACO,OACF,CACCi3B,mBAAY,IAClBj3B,EACO,MAEC,UACVpH,OAAe,CAAAwC,EAERjD,eAAiBmH,EACjB,GAEX,IAMM,GALNf,cAAuC,CACjC,GAAiBe,EACnB6H,UAAmC,CAAA4sB,EAC5B,aAAAC,IAAAD,EAAA,OAELA,EAAA,CAEK57B,QAAa,MAAI+B,EAAA,oBAAAlE,CAAA,aACtB,OAAAgK,GAAGV,OACSy0B,KACZC,CACF,MAAAiD,EAAA,MAAA/8B,EAAA,oBAAAlE,CAAA,WACA,OAAAgK,GAAei3B,EAAAtgC,CAAA,EACPsgC,EACNj3B,CACO,OACTzB,SAAO,SAAA8F,CAAA,EAAA/E,EACC23B,EACNj3B,CACA,EACFk3B,GAAA,UACF,OAAY,CAAA97B,EACVxC,eAAe,EAGR,IAOT,GANA2F,EAAA,SAAA8F,CAAA,GACF,GAAA/E,EAEM43B,eACA,gBAAiBhD,IAAgBD,GAAA,KACnC,EACFA,GAAA,CACI,MAAAgD,EAAA,MAAA/8B,EAAA,oBAAAlE,CAAA,gBAEKmC,KAAiBxB,CAAA,MACnB2I,CACH20B,QAAaA,2CACbC,KAAoCD,EACtC,CACA,MAAgB,CACRgD,YAAY,GAClBj3B,CAA8B,EAExBi3B,YAAwBrF,CAC9B5xB,UACF,aAAA82B,EAAA,EAEAl+B,IAOE,GALKT,WAASkM,CAAI,EAAI/E,CAC1B,GAAAA,EACF,YAAA60B,EAEA,EACuBA,GAAA,CACnB,QAA0C,MAAAj6B,EAAA,oBAAAlE,CAAA,eAC5CgK,GAAAi3B,EAAAtgC,CAAA,CACA,KAAI,CAEKwB,QAAa,MAAI+B,EAAA,oBAAAlE,CAAA,aACtBgK,GAAGV,KAEL,OACAf,EAAgB,SAAA8F,CAAA,EAAA/E,CACR23B,CACNj3B,EACKm3B,GAAA,EAAA5E,OAAAsD,IAAA,CAAAna,GAAA,CAAA6W,CAAA,GAAAsD,EAAA,KAAA7yB,GAAA,KAAAiK,GAAAslB,IAAAtlB,GAAAyO,GAAA,CAAA6W,CAAA,GAAAtlB,CAAA,IACCgqB,QACNj3B,QACF,eAAAo3B,GAAAC,EAAA,qBAEAz+B,GAAe,QAAAsB,EAAA,oBAAA2J,CAAA,oBAER1L,QAAiBmH,CAC1B,EACFg4B,GAAA,QAAAp9B,EAAA,oBAAA2J,CAAA,qBAEMszB,MACJjF,EAOF,IAEA,OACE,MAAeqF,CACbC,EAAe1xB,CAEK,MACTosB,IACR,0BAAAsF,GAAA,eAAAF,GAAA,iBACexxB,yDACC,QACE,MACVosB,MACT,OAAC52B,GAAAi8B,EAAA,cAAAj8B,GAAA,QACLrF,GAAA,QAAAshC,EAAA,UAAAjhC,KACMA,GAAC,kBAASihC,GAAiB,IACzB74B,sBAAmB,QAIvB64B,GAAcz+B,UAAiB2+B,eACjCnhC,GAAML,mBAAa,EACfshC,GACFthC,GAGWK,CACT,MACFL,GACF,KAAAshC,EAAA,MAAAE,EAAA,IACA,CACExhC,CAEMyhC,OACKphC,cAEX,GAEK,OACLwC,GAAO7C,KACP0hC,GAAoBA,IAAyBA,CAC/C,UAAA3B,IAAAvoB,EAAAyM,EAAA,CACF,SAAAlD,EAAAL,GAAA,CACO,eACI,qBACH,4BACR,cAAAygB,GACF,SAAAzgC,gBAE0B,EAC1B,CAEKq/B,EACCpmB,YACWtB,EAAA,aAEL/P,KAA6B,iBAClB,oBAAAkP,EAAA,QACTmqB,MAAeR,qBACfzgC,cACAkhC,CAAe,CACjB,GACF,CAAEjoB,QAEDtB,GAAIb,EAAAyM,EAAA,UAAMlD,EAAA,OAAO,MAClBA,4CAAA,UAAAA,EACkBvJ,IAAA,QAAYqqB,GAAA,SAAqB,CAAArqB,EAAAa,EAAA,CAAQ,eACpD,EAAAb,EAAA,QACC,SAAAqmB,GAAA,EAAAzQ,GAAAyQ,EAAA,UAGGL,EACf,CAAA7jB,OACE,CAAW,WAA2CA,aACpDoH,EAASkD,EAAA,CAAU4d,eAAYloB,KAAA,QACxB,CAAM,EAAAnC,EAAA,QACXA,SAAAsmB,EAAA,gCACGD,EAAiD,CAC9C,EAER9c,UAAY,eAAA+c,EAAA,eACVzd,WAAOqgB,IAAA,CAAA5C,GAAA/c,EAAA,OACPR,eACE5G,SAAA,CACEnC,EAACa,EAAI,CAACD,KAAK,OAAU,GACrBZ,kCAAA,EAAAmC,EAAgC,SAA4B,CAAAmoB,GAAA,QAC5D,UAEQ,IAEVpB,mBAEa,CAAAX,IAAA2B,GAAQ/nB,GACjBnC,EAAK,cAAA8L,GAAAH,CAAA,sBAAAG,GAAAH,CAAA,UAAe,MAEtB,CAAK,GAITvd,SAAqB,CAAA4R,EAAAa,EAAA,CACf,aACF,CAAMqpB,WAAO,CACT,YAAsB,EAAAtU,GAAA2Q,EAAA,EAAAD,EAAA,kBACxBr4B,CACEq4B,EAGF,CACF,EAAA/c,EAAAL,GAAA,aACU,CAAC,IACfugB,KAAEtnB,IAESlU,GAAAu4B,GAAA,YAAA1a,GAAAH,CAAA,oBAAAG,GAAAH,CAAA,gBAEO,CAKX,CAETpC,EACEnb,UAAe,kBAAAo4B,GAAA,eACT,UAAAxmB,EAAAa,EAAA,CACc,YAChB,GAAAb,EAAKuoB,OAAa,CAEd/B,iBAC4B7a,OACdG,SAAYH,MAC5B,CACF,KACFpC,KAAY,CAAC,aACf,IACYghB,KAA+CpoB,IAEhDlU,GAAAy4B,GAAA,iBAAA5a,GAAAH,CAAA,yBAAAG,GAAAH,CAAA,gBAEU,CAKd,CAETpC,EACEnb,UAAe,iBAAAs4B,GAAA,eACT,UAAA1mB,EAAAa,EAAA,CACa,eACf,GAAAb,EAAKuoB,OAAa,CAEd7B,mCAGF,CACF,KACU,CAAC,CACf,IAAApB,GAAA,CAAAR,GAAA4E,KAAA1pB,EAAAwqB,GAAA,IAAAlF,EAAA/b,EAAA,aACYgT,GAAA,kBAA6B,GAAiBpa,YAE1DnC,GAAK,UAAMulB,GAAU,QACrBvlB,IAAA,CAAAmC,MAAmC,EAAkB,SAC5C,CAAAnC,EAAAa,EAAA,CACR,iBAGPykB,EAAmBtlB,EAAA,QAEdiB,oBAAyC,CAAGkB,EACtC,GACGojB,UACVn3B,QAASA,IAAM,CACb+5B,WAAsBt2B,CAAA,EACxB44B,GAAEtoB,GAAAsoB,EAEG3F,CAAA,CAAmB,EACxB,SAAM,CAAA9kB,EAAAa,EAAA,CAAgB,aACd,EAER0I,mBACiB,OACb,CAAMkhB,EACN,GACEvrB,aAAwBqK,EAAA,OAC1B,MAAAgT,GAAA,qBACF,UAAAhT,EAAAsa,GAAA,CAAE1hB,QAEG,IAAAjZ,CAAA,WAAAX,CAAA,wBAAM,CAAAyX,EAAAa,EAAA,CACXb,gBAAA,GAAMA,EAAA,QAAY,qBAErB,GAGF,EAAAuc,IAAamN,MACPzoB,aAA4CkB,MAAAsoB,EACtC9F,GAAA9yB,CAAA,KACqDsQ,GAAAsoB,EAEvD3F,CAAA,CAAmB,EACxB,SAAM,CAAA9kB,EAAAa,EAAA,CAAgB,aACd,EAER0I,mBACiB,OACb,CAAMkhB,EACN,GACEvrB,YAAwB,CAAA4lB,GAAA4E,KAAA1pB,EAAAwqB,GAAA,KAAAjC,IAAAhf,EAAAkD,EAAA,CAC1B,UAAAzM,EAAAwqB,GAAA,IAAAjhB,EAAAsa,GAAA,CACF,GAAA36B,EAAA,IAAAA,CAAA,MAAAX,CAAA,SAAAA,CAAA,GAAE4Z,QAAAjY,GAED2W,CAAKD,EAAK1W,EAAA2H,CAAA,CAAS,EACpB,SAAM,CAAAmO,EAAAa,EAAA,CAAY,oBAErB,EAAA0I,EAAA,SAKH+b,8BAAgCoE,eAChC1pB,OAACwqB,CAGHroB,MACGqoB,qBAEKthC,UAAYo7B,KAAyB,QAAQoG,EAAA,IAE/C/E,GAA2B,CAC7B,EAAExjB,QAEFnC,EAAKyM,EAAA,UAAMlD,EAAAL,GAAA,CAAc,QACzBK,IAAA,CAAApH,GAAO5Z,CAAA,CAGL,EAAY,YACT+7B,GAA8C,KAC1C,UACF,EAAC/a,EAAA,SACC,8BAAAvJ,EAAA,SAAAuJ,EAAA,QAGZsd,2BACD1kB,SACG+G,CAAQ,WAAA8f,EAAA,IAELP,GAAgB,CAClB,EAAEtmB,OAEDtB,CAAI,KAAMtU,EAAS,OACpBgd,SAAApH,YAEEnC,GACA,KAAY,WAAoBmC,YAAC,CAAuB,MAAQ,6BAC1DwoB,GAAAp+B,CAAA,EACA,GACV,EAEJgd,EAACL,MAAQ,CAACtC,MAAMra,kBAAK4W,SAAO,CAAAoG,EAAAL,GAAA,CAAQ/G,QAClCnC,IAAK,CAAM,IACXA,UAAA,oBAAAzT,CAAA,EAAa0B,GAAA,cAAmBkU,OAA2BlU,GAAA,sBAE7Dsb,CAAW,EAAiBpH,SAC1BoH,GAAS1I,EAAA,YAGL,CAAI,EAAAb,EAAA,QACQrB,eACV1Q,GAAuB,IACzB,iCAAY,UAAAL,GAAA,wDAAAA,GAAA,gBACVzC,KACA8C,UAA+B,CACjC,aACF,IAAEkU,UAEFnC,MAAK,CAAM,IAAAzT,CAAA,CACXyT,CAAM,OAAW,sCAEP7C,CAER5Q,EAEAgd,SAACL,CAAQlJ,EAAAa,EAAA,aAEL,CAAI,EAAAb,EAAA,QACFqO,iBAAgB,CACd9hB,KACD,IAAA2vB,GACMhyB,KAAG8V,EAAAwqB,GAAA,KAAAtO,GAAA2L,KAAA7nB,EAAAkJ,GAAA,CACV/d,iBAAe,CACfuO,IACF,MAAA8vB,EAAA,MAAA/8B,EAAA,oBAAAlE,CAAA,EAAAg7B,GAAA,mBACFhxB,GAAAi3B,EAAAtgC,CAAA,EAAEiZ,GAEFnC,GAAK,kDAAM,CACXA,GAAAujB,GAAA,+DAAM,EAAa,SAEtBA,GAAAha,EAAAkD,EAAA,CACA,SACOob,WAGa,QACnB,CAAI,EAAA7nB,EAAA,QACIwpB,8BAGNj3B,GACAtE,CAAUs1B,MAAQ,CACpB,SAAY,CAAAvjB,EAAAa,EAAA,CACV1V,WACA8C,CACEs1B,YAIJ,6BACF,GAAEphB,CAGA,CAAAA,KAAA,6BACO,KAAAykB,EAAA,GAAA5mB,EAAAkJ,GAAA,SAAM,UAAQ,GACnBlJ,CAAAmC,MAAMqnB,EAAA,MAAA/8B,EAAA,oBAAAlE,CAAA,EAAAmO,EAAA,iBAA0BzI,GAAAyI,EAAA,sDAGlC6S,MAAA,CAAApH,GACEnC,EAAK,6CAAY,EACjB,SAAMtJ,EAAA6S,EAAAkD,EAAA,CAAiB,SAAO,CAAAzM,EAAAa,EAAA,CAC9B,aAIG,EAAAb,EAAA,iBAEc,oBACnB,CAAI,EACF,CAAMwpB,MAAY,CAKhB9yB,cACI,WAINvL,YAAe,CAEbuL,yBACF,CACF,GACF,EAAEyL,KAGAoH,SAAApH,wBACO,SAAM,CAAAoH,EAAAL,GAAA,CAAO,QAClB,KAAA/G,EAAM,aAAyB,WAAAtQ,CAAA,CAGjCsQ,EACO,SAAM,CAAAnC,EAAAa,EAAA,CACXb,aAAA,GAAMA,EAAA,QAAqB,gBAC3B,GAEI,EAGVuJ,MAAAX,GAAA,CAAW,WAAiBzG,aAC1BoH,EAASkD,EAAA,UACQ,CAAAzM,EAAAa,EAAA,CACb/P,KAAqB,UACPe,UACd,6BACF,GAAEsQ,EAEG,kBAAM,SAAQ,QACnB,MAAM,UAAW,IAGjBoH,oBAAY,QAAAhhB,CAAA,WACH,MAAAqiC,EAAAz0B,GAAA5N,EAAAW,CAAA,EACP6f,WACE,GAAA5G,GACEnC,SAAK,CAAM,OACXA,GAAA,mBAAM,KACN,EAEJgJ,SAAkB,CAAAhJ,EAAAa,EAAA,aAIhB,GAAab,EAAA,QACP,kBACF,GACA,CAAM4qB,EACNA,GACA38B,GAAmB48B,GACT1yB,KACVhN,IAAcjB,EAAC,EAAAqX,EAAA,IACftT,IAA4B68B,EAAA,EAAAvpB,EAAA,IAC9BwpB,GAAAlF,GAAA,CAAA0C,IAAA,CAAA1U,GAAA,CAAAoT,GAAA,CAAAvB,EAAAsF,GACCC,GAAA1G,IAAAwG,GAAA7gC,GAAA,QAEL,GAAAA,EAAA,sBAAEiY,OAEG,KAACvB,CAAY,QAAAsqB,EAClB,QAAAC,CAAM,IAAOlC,GAAA/+B,EAAO,UAAP,YAAA++B,GAAO,KAAA/+B,EAEvB+S,GAAA/S,EAAA,oBAEJ+S,IAAA,oBAAAA,GAAA,wBAIL/S,EAAA,iBACA4gC,GAAOM,CACP,YAAyBN,CAEnBC,IAKAC,EAAuBC,CAGrB,EAA+B,iBAG/B,CAAM,EAAEC,OAASC,QAAQ,UAAgB,IAEzC,aAAajhC,GACb,eAA4D,kBAE5D4gC,CAAoB,EACLO,GAAA,CAAAvS,GAAA,CAAAjF,GAAA,CAAA6R,EACX9rB,GAAGsxB,4BACAC,GACL,EACWG,GAAAzoB,GAAA,YACb,GAAC,CACD0oB,KAGNhD,IACat6B,GAAAu4B,GAAA,YAAA1a,GAAAH,CAAA,oBAAAG,GAAAH,CAAA,UAEH,OACU,IAEtB,QAAA0f,EAEA,GACMG,GAAO3oB,GAAW,SACtBC,GAASuoB,CACVd,KACKe,IAGEr9B,GAAAy4B,GAAA,iBAAA5a,GAAAH,CAAA,yBAAAG,GAAAH,CAAA,UAEF,MAAkB,CAEd6a,CAGF,EACF,CACF,QAASt8B,EAAG,CAAC,EAEfuhC,GAAA5oB,GAAA,gBACWwoB,UAEb,IACMK,QACJ,MAAAC,KAEM,CAAApD,IAAA2B,GACaj8B,GAAAq4B,EAAA,cAAAxa,GAAAH,CAAA,sBAAAG,GAAAH,CAAA,UAGX+a,OAIJ,KACU,EAAC,CAEf,QAAA2E,IAAAf,EAAA,GAGFsB,GAAA/oB,GAAA,IAAA3Y,GAAA,CACMuhC,QACJ,uBACM,uCACJ,GAAaI,EAAA,CACP,MAAAC,EAAAD,EAAA,gDACI3B,KACFhgC,EAAA,kBAEAo8B,cAIJ,UACUuF,EAAA,sDAACE,KACZ7hC,EAAA,kBAEL6hC,GAAA,QAGF,CACMH,CACJ,GAGIC,GAAc9O,GAAA,QAAAwL,GAAA,UACVuD,GAA6BtpB,UAEnC,GAAAwpB,GAAA,KAAA/sB,GAAA,EAAAA,EAAA,cAAAof,GAAApf,EAAA,cACAgtB,GAAmB3e,GAAA,KACjBpjB,OACA4hC,YAAoB,MACfI,EAAA,GACCH,kBAAkCvpB,QAGxC,IAAAvD,EAAwB,YACtB/U,OACA6hC,WAAyB,UAAAxwB,OAAA,oBAAA0D,EAAA,aAC3B9H,KAAA,GACF+0B,EAAA,MACF,MAAAjtB,EACD,SAAApH,CAAA,CAED,GASMo0B,cAAgC,KAAAp0B,CAAA,CACJ,CAAO,QACjB,EACImX,QACxB,QAAAmd,CAAwB,IAAA5iB,EAAA,OAClBpS,uBACHoE,wBAEH,YAAkB,CAChB2wB,kBAAiB,EACfjtB,qBACAktB,eAAW,CACZ,IAAAltB,EAAA,YACI,KAAA6lB,CACLoH,CACF,EACD,MAAAjtB,EAAA,YACMitB,kBAAiB,CAAEjtB,mCAAOktB,sBAAQltB,KACvC,CAEE,GAAAmtB,MAAsDtH,CAAA,MACtCxX,GAAA,WACdpjB,MAAiB,EAAAoN,IAAAD,OAAA4xB,EAAAp3B,EAAA,sBAAAo3B,EAAA,OAAAr4B,EAAA,mBAAAgG,CAAA,CACjB1M,MAAkBmN,IAAAxJ,GAAAgE,EAAA,sBAAAhE,GAAA,GAAA+C,EAAA,mBAAAgG,CAAA,IAClB9F,GAAsBwc,GAAA,OACTuR,qCACLiG,gBACRuH,GAAA/e,GAAA,KAIiE,GAHnEwZ,IAAA3rB,IAAAwrB,IAAA7J,IAAAC,IAAA,MAAAA,GAAA,QAAAuP,IAAAjH,GAAA/tB,IAAA+uB,IAAA,GATW99B,CAYGge,iBAAqD,KAAA5O,EAAA,EAwBrEy0B,MAA2BJ,GAEzBM,WAAyB30B,EAAA,EAE1B,GAAA0wB,EAAE/wB,GAAsCzF,MAI3CyF,QAQE8tB,eAEArI,MACCzlB,KACcA,GACf+uB,GAAe1uB,EAAA,GAEnB,OAEE20B,KAMID,cAA2B,EAAM/0B,IAAAD,KAAA2I,EAAAusB,GAAA,CAEnCzF,MAUA,CAAO,EAAAvd,EAAA,WACT,qBAAA3S,EACA,IAAsBsM,GAAA,OAChBspB,aACF,MAACA,6HAAyBhB,GAAA,QAAAiB,EACxBpE,aACFA,aACKoD,GAAA,QAAAgB,EACTb,GAAA,QAAAa,CAGAtxB,EAYF,SACE,KAAAgH,gBACsB,CAAAkjB,GAAkBhuB,OACpC2I,kBAAc,iBAAA4mB,EAAA,IAAAlwB,EAAA,uBAACE,UAEjB2S,WACsB3S,YACL,KAAAqwB,EAAA,uBAAAvB,EAAA,oBAAA0F,GAAA,wBACbzC,aAAoBzlB,GAKpB,cACEA,cAKFwoB,GAFAF,CAAKnzB,IAELqzB,EAAee,QACfhB,OACAG,MAAea,wBACjB,GAAAxvB,GAAA,oBAAAA,EAAA,sBACS,OACD,MAAAyvB,GACLrH,qDAKC/lB,GAAGotB,EAAA,qBACA,MACA,WAAAC,EACH7rB,EACH4rB,EAGatF,gDAEU,CACtBl9B,EAAA,eAAM6pB,EAAS+W,GAAA,CAEf,YAAe3nB,CACXlG,YAAwD,EAAA/S,EAAA,OAGtDwiC,EACN,UAAcE,OACZ,CAAM,EAAED,QACR,GAAA5B,GAAc1yB,GAAkBs0B,EAAa,GAC3C,UAAA5B,IAAA/qB,EAAA6sB,GAAA,CACF,IAAAhC,GACF,MAAAO,GAAA,cACAlhC,GAAiB4iC,GACG,QAAA5iC,GAAA,YAClB6iC,GAAa,sBACN7B,qBACLvL,YAAKwL,UAALxL,cAAKwL,wBAALxL,cAAKwL,QAALxL,iBACF,EAEF,OAAC,CACD4L,oBACF,EACKR,gBAEJA,OAGGiC,WACIF,UACY,cACdvB,gCAA0B,YAA1BA,eAEIrhC,CACFy+B,EACF,gBACF,mBAAA9gB,GAAA,EACAolB,eAAQ,YACEr1B,EACV,GAAAkuB,GAAAhlB,IAAA,MAAA+S,GAAA,CAAAiF,GAAA,CAAAmO,GAAA,CAAAvB,GAAAnc,EAAA,OACApB,MAAgB,kBAAAijB,KAAA,8BACP8B,GAAA,UAAAltB,EAAAmtB,GAAA,MAEG,IACV,cACA/+B,YACEy8B,qBACF,eACF,aACS,QAAAR,EAAA,QACkC,CAC7B,SAEb+C,WAGJtH,MACChlB,kBAMY,qBAGHosB,yBAAW/qB,aAGdrB,SAAK,IACLE,MAAMylB,GACN1lB,QAAI,KACE,IACD0oB,KACIx7B,GAAAu4B,GAAA,YAAA1a,GAAAH,CAAA,oBAAAG,GAAAH,CAAA,UACA0e,OAEXrqB,CACO,IACIwmB,YACTxlB,cACAD,MAAM,OACNE,MAAM,oBACNL,QAAK1W,GAAA,CACIA,EAAA,iBACFu8B,uBACQ,CACT,WACc,QAAAv8B,EAAA,aAEds8B,QAIKt8B,QAAI,iBACf,MAEF8V,MAAA,GACO,EACCurB,GAAA,cACA,EACNn9B,SAAgB4R,EAAAa,EAAA,CACd3W,KAAiB,QACjBA,KAAkB,IACE,YACP,GAEX,GAAA4W,IAAA,KAAAyI,EAAA,aACO,wBACI,CAAA+c,GAAAtmB,EAAAa,EAAA,OACN,cACE,cACR,GACD0qB,WAAkC,CACpC,kBAAEppB,aAEG,KAAM,MAAQrB,IAAKd,EAAAa,EAAA,OAAQ,WAAM,KAAE,WACjC,SACN,EAECnK,GAAAsJ,IACR,CAAW,YACRsmB,WAAmBrlB,KAAM,KAASL,CAAK,GAASE,IAAK,KAAAd,EAAA,KAAG,KAC1CA,GAAK,SAAO,WAAiB,IAAA2L,CAAA,WAAazhB,GAAA,CAAKA,EAC7Dw8B,eAAc1mB,EAAMiB,EAAM,kBAAWL,EAAK,aAAgB,QAAA/O,EAAA,QAC1D6E,UAAgB,CAAO,EAAW,SAAWsJ,EAAAmE,GAAA,CAAM,IAAA0H,GAAAD,EAGvD9K,KAAS,MAEAqlB,YACG,EAETnlB,UAAgB,CAChB5S,kBACElE,SAAiB,CAAAqf,EAAA,OACjBrf,MAAkB,OAClB4G,SAAqB,CAAAkP,EAAA,QACnBxW,kBACAN,eACF,QAAA2I,EAAA,QACF,SAAA3I,EAAEiZ,WAEKrB,IAAA,aAAsB8K,GAAa,EAAgBtP,4BAAM,2BAGpEiN,SAAA,UAAW,EAAAhd,GAAA,CAAAsnB,GAAA,CAAAiF,GAAA,CAAA4M,EAAAnc,EAAA9D,GAAA,CAAWtD,KACpB,IAAAjZ,CAAA,MAAAX,CAAA,SAAAA,CAAA,GAAW,QAAA2B,GAAA,CAAMiY,WACfjY,EAAA,SAAAA,EAAA,UAAAA,EAAA,QAAAA,EAAA,YAEIV,iBAAgBA,EAChBN,oBACAsiB,WAAqBthB,EAAA2H,GACrB4Z,GAAU8c,CACX,WAWa,UAEbtB,aACa,EAAqB,YAC/B16B,UAAQsnB,SAEJ3qB,KAA6C,GAG7CgB,GAEAA,IAIA,EACF,cAAAkhC,KAAA0B,IAAA,MAAAA,GAAA,0BACA5iC,SAAiB,CAAAmjC,IAAA,CAAAhB,GAAArsB,EAAAa,EAAA,CACjB3W,KAAkB,WAClBy7B,SACoB,OAAAU,EAAA,IAAAA,KAAA,wBACPrmB,EAAAa,EAAA,SACEuC,IACb,IAAAkhB,GAAAsC,EAAA,OACO,MACPnd,IAAWzJ,EAAAkN,GAAA,UACNsa,GACP,OAAC,OACD+D,WAAyBvrB,EAAAa,EAAA,CAC3B,mBAEEuqB,MAGD,GAGM,GAkBH7hB,EAAA,+BAAAvJ,EAAAa,EAAA,MAAA0X,GAAAqO,EAAA,MAAAtC,GAAAsC,EAAA,iBAAA5mB,EAAAkN,GAAA,UAAAsa,GAAA,wBAAAZ,KAAA,UAAArd,EAAAkD,EAAA,WAAAzM,EAAA,OA4CNuJ,MAAA,+BAAY,iBAAMpH,OAEdvB,WAAmC,CACnCG,cAA8B,aACzB,+BAEPf,GAACkN,EAAY,MAAWsa,cAAsB,MAAU,SAAA52B,EAAA,mBAAAgG,CAAA,MAAAhG,EAAA,mBAAAgG,CAAA,YACpD,EAAAU,IAAA,EAAAowB,KAAA,EAAA5K,IAAA,CAAAlJ,GAAA,KAAAgB,GACNA,EAAA,KAAAvd,EACD,IACWkS,EAAA,OACdpH,2BACOlB,SAAM,CAAAjB,EAAAa,EAAA,CAAsB,eAAyB,IAAAb,EAAAuL,GAAA,CAG5D8Z,WACAljB,WAEe,SAAqBA,EACzB,EAAM,GAAAoH,EAAc,aAExB3Y,qBAA8BgG,OAC1B,cAAc5D,SAAuB,eACpC,MAAAk1B,GAAA,6CAKP/C,EAAErI,KACAlJ,KACC,OAAA2U,IAAsBlxB,KAExBkS,wBAAAwf,GAAA,GAA+B5mB,WAAA,CAC7BnC,IAAKuJ,EAAAkD,EAAA,UAAM,CAAAzM,EAAA,OAAS,MACpBA,0BACExW,KAASk+B,EACTx+B,WACAwiB,IAAKgd,GACL,iBAAAI,GACC,SAAA9oB,EAAA,KAKbuJ,SAAAvJ,EAAAoK,GAAA,CACU,KAAA0S,GAKR,OAAAzS,CAA6D,CAC7DjK,CACwC,EAEtC,GAAA0nB,IAAAjU,EAAAtK,EAAA,aAGD,kBACCpH,SACEnC,GAAAa,EAAA,CACQ,eACAikB,yBACFvb,EAAA,UACJtG,MAAKylB,2CACL,KAAgBI,SAAa3mB,QAE7BnC,GAAA,CAAAmC,iBACY,EAAAjY,EAACiE,gBAAM2uB,EAAazS,IAAiB,OAAAvZ,EAAA,SAAAvI,CAAA,EAC9Cu/B,IAEqBjU,4BAEX/iB,EAAA,SAAAvI,CAAA,KACbu/B,KAEAve,EAAA,cAAAhhB,CAAA,QAMI2B,SAAiB,CAAA8V,EAAAa,EAAA,CACjB3W,KAAkB69B,GAAA,sBAClB,OAAiBA,GAAA,2BACf,CAAOj3B,EACP,KAAA6G,IAA4B4R,EAAA,OACnBzY,gBACT,IAAA83B,GAAA,iBACKE,GACEj1B,eAAe,CACtB,KAAAhC,EACSiC,WACT,YAAA+f,CAAA,CACF,EAAA7T,EAAAstB,GAAA,CACF,GAAA/kC,EAAE4Z,WAEIvB,OAAiC,EAAY,CACR,GAE9C,EAAAzF,IAAA6E,EAAA4Y,GAAA,CAGJ,KAAEjhB,EAECsJ,QACAgC,SAAK2lB,UACL,SAAgBE,IAAa3mB,WAEjBvL,CAAA,OAAA22B,CAAA,EAEVrkC,YACA2qB,2CAEF7T,EAAc,SAAApJ,CAAA,OAAA42B,CAAA,CAACjlC,aAAQW,EAAkC,SAAG2xB,GAG7D1f,KACI,cAAAA,GAAA,kBACG2pB,UACN3pB,WACU2d,YAAakN,QAAiBr4B,SACjBzD,GAAA,CACrB4G,CAAOpG,CACT,QACe49B,KAAA,EAAA3wB,GAAA,UAAA6b,GAAAzE,GAAApX,GAAA0S,CAAA,IAAAqf,IAAAnE,KAAAvlB,EAAAytB,GAAA,CACNhhC,eAAS9B,IACLwQ,GAGAzQ,UAAa,CAAA26B,EACtB,eACcP,EAAA,KAAEH,GAAA9yB,CAAA,CACpB,IAAAgiB,GAAA8S,IAAA,EAAA5J,GAAA,QAAAiL,KAAA,YAAAze,EAAA,UACAwP,oCAAuBmP,GAAA,gBACdz7B,cAGHouB,iBACF,QACO2S,GAAiB,CACf9iC,mBACTR,EACC09B,gBAAa,EAAEM,GACpB,OAAAp3B,EAAA,cAAAvI,CAAA,kBASkC+/B,KAElBxD,EAChB32B,cAAwB,CAG3B,KAAC0lB,GAEA,WAAEkJ,WAGU,OAAAmL,GAAA,YACa,aACpB,GACI,EAAAnL,GAAA,QAAA/c,EAAA0tB,GAAA,CACLhqB,KAAQohB,EACR12B,QAAUlE,GACRA,mBACAA,SAAkB8V,EAAA,OAClB,IAAsB6oB,GACb/3B,iCAAuBisB,GAAA,UAAAA,GAAA,2BAAAA,GAAA,0BAChC,SAAOiP,GAAA,KAAA/sB,EAAApH,IAAAmI,EAAAue,GAAA,CACEzqB,QACT,YAAAy0B,GACF,YAAAxL,GAAA,WAAE5a,KAAA2iB,EAEIlkB,aAAsC,EAAA3B,EAAA,aAAApH,EAAA,EAAgB,GAC3DqwB,YAAmB,MAA0B,wBAAArwB,EAAA,IAGjDklB,QAAiB/sB,MAEV80B,UACGsH,UACTH,OAAiC9pB,CAEjC,GACEc,CAAK4lB,0GAG8C,iBAExBtiB,kCAAY1O,4BAC/B,IAEJoH,aAEAyf,YAAyCnV,EAAA,aACnCub,iDAEJsH,EACA,CAGFtmB,gBAGA1X,aAGQq3B,CAAav7B,SAAmB,GAAAq+B,IAElC5jB,KACL,SAnBUpc,GAqBd,OAAC,MACC,aAGR,SAAEu+B,IACcA,OAAS,CAOpBA,6CAEmDj6B,CAEzC9C,OAEb,UAAAiW,EAAA,QAEYqsB,eACJ,YAAArsB,EAAA,KAAoCmC,KAC7CnC,EAAW,gBAAe,0BAAa,SAAaA,EAAA,QAItDuJ,gBAAApH,SACEqlB,GAAA,cAAW,MAAAA,GAAA,iBAAYrlB,SAEnBnC,EAAA,CAAY,EAAqB,EAAA6mB,GAAAtd,EAAAkD,EAAA,CAEjClD,SAAA,UAAAvJ,EAAAa,EAAA,CAAAsB,cAKEA,YAAgC,CAAQ,EAAS,IAAAnC,SACjD,CAASzT,aAAY,eAAa,SAAA+6B,GAAA,cAAqBnlB,YACrD,CACQsmB,GAAAlgC,CAAA,CACN4kB,EACAnM,WAAoC,EAAEmB,CAErCuoB,EAAe,CACZ,EAGN,GAAAnhB,QACG,CACW,MAAM,WAAA0d,EAAA,yBAAa,CAAAjnB,EAAA,aAC/BA,mBAAA,SACWA,EAAAmtB,GAAA,OACH,QACNhgB,eAAmC,qBAEjCsb,eACF,MAAApC,GAAA,QAEC2C,IACI,GAEVhpB,EAAA4I,GAAA,CACD,UAAA0hB,GAGN/gB,QAAAoiB,GAAa,aAAApiB,EAAqBkD,EAAA,CAAkBtK,SAClDnC,GAAAa,EAAA,CAAW,cAAkBsB,WACd,CACL,SAAAmkB,EAAA,gCACF,KACE,WACD4C,IAAA,CAAA5C,GAAA/c,EAAA,OACLokB,MAAOtH,SACPj4B,SAASi8B,MACV,YAcHrqB,qCAAY,IAEV5R,SAASu9B,SACT5iB,yBACE5G,SAAAnC,EACEA,GAAK,CAACY,QAAK0lB,EACXtmB,MAAA,oBAAAmC,sBAC4B,EACrB,sBACP,cAGF+mB,SAEa,UAAAoB,EAAA,CAAQnoB,CACZ,EAAM,CAAO,EAAAnC,EAEpB,aAAK,mBAERmC,SAEDnC,EAAAmtB,GAAA,CAAKlsB,QAAMulB,GAAkBrkB,cACd,cACFmkB,iBACTtlB,yBACAD,aAAwB,MAClB0lB,GAAA,QACDgD,EAAA,EACElD,WAEG,CAAC+D,MACZ,SAAC,SACCtqB,EAAAmtB,GAAA,CAEPntB,QAAA0mB,GAAW,gCAAkBvkB,gBACd,cACXyrB,MAASpH,kBACTxlB,gBACAD,QAAMwpB,EAAe,EACf,GACN3pB,EAAKsH,GAAA,QACEue,CACPr4B,OAASq7B,qDACV,EAEHzpB,MAAA,MAAKiB,IAAM,EAAQkB,SACjBnC,OAAa,WACF0mB,QACT1lB,WAAQhB,EAAA,MAAwB,CAChCe,MAAM,SACNE,SAAMjB,EAAA,UACD,cACIuqB,aACV,0BAEHvqB,SAAMA,EAAAa,EAAA,CACI,YAEJjJ,SACJ,WACM,EACD,EACI,EACTi2B,SAAWT,EAAA,CACXvjB,EACE,GAAW,CAAQ1H,EACjB,KAAAqmB,IACOxoB,EAAAkC,GAAA,eACC,QACNjB,GAAM,CAAmBkB,4BAEpBsmB,GAAM,GAAY,EAAQ,SAAMzoB,EAAE8tB,GAAA,UACjCtF,GAAA,SAAAt/B,EACL,mBAGNkkC,IACK3gC,EAAA,oBAAA+7B,EAAA,iBAGb,mBAEAA,GACDxoB,EAACkC,GACO+mB,EAAAN,GAAA,gBAAAM,EAAA,QAEJ,CAAI/+B,CACFu+B,GAAmB,CAErB,GACF,EAEc,SAAAiF,GACFlF,GACVt/B,gBAEE,SAAAiZ,EACF,KAAA0W,EAAA,gBAAAoT,CAEExD,IACAE,aACFxmB,EACDoH,EAAA,gBAEJ,iCACO,CAAApH,EAAAnC,EAAA,cACV,KAAA6Y,EAEN,WAEA,UACE,CAAM,GAAE/V,EAASX,SAAU0W,IAAMoT,OAAgB,gBAAA8B,EAC7C,SAAA7kC,CAA8B,EAAOiZ,OACzC,MAAAvR,EACEq1B,GAAAn1B,CAAA,EAAc,CAAuBqR,WAEvB0W,sBAAgB,KAAApI,EACV,aAAAud,EAEZ,YAAAC,EAEZ,WAAAC,EAEA,UAAAC,EAAgBrH,QAAMiH,SAAiB7kC,QAAY,iBAAAklC,EAC3Cx9B,MACA,KAAAoB,EACJ4sB,WACA5d,WACA6d,aACApO,IACAud,UAEAE,EADAD,SACAC,WACAC,cAuBF,GAtBEz1B,QACAE,iBACAokB,iBACAoR,MACA7hC,OACAyF,MACAq8B,MACAvJ,MACAwJ,IACExH,SASJ,CAAMyH,CAEAztB,KAAO0tB,GAAwB,GAErC59B,EAAO69B,cAA+BliC,CAAA,EAEtC6L,YACE,MAAIm2B,EAAoB,WAAoBz/B,QAC1C6D,KAA6BpG,GAAK2F,CAChCw8B,IAAaxkC,EAAA,iBACP4G,EAAA,gBAAEvI,WAAIgE,KAAI,MAAAmM,EAChBi2B,QAA0B,EAU9B,EACC,CAACJ,CAASvR,GAQTpsB,cAA4B,SAAAguB,GAAA,CAAU,MAAA5xB,EAAA,QAAAT,CAAA,kDAEpCmiC,OACAE,YACGhQ,EAAAY,GAAAZ,CAAA,OACL,GAAI8P,CAAe1R,EAAA,CAGfvM,wBACY4d,iCACZ31B,YACAE,aACF,MAAAoL,EAAAH,GAAA,iBACFgrB,GAAA7qB,EAAA,uBAED0qB,QACH,IAAAI,EAAA,EAEIP,EAAYvR,gBAAmB,KACjC+R,GAAelrB,GAAQtX,WAGnBwiC,CACJ,OACE/R,OACF,KAAYyR,GAAAliC,EACV,OAAUkiC,EAAA,cACV,mCACA,MAAuBO,mBAAyBC,IAC1CprB,OACNA,WACAA,MAAOjL,CACDoL,kBAAaC,IAAe,OAAAsb,GAAA,YAClC,EACU3zB,UACNsjC,kBAAwB,CAC5BH,mBACF,SAAA/uB,EAAA,OACA,OACE+uB,WAEE5rB,SACI,eACI,IAAAirB,GAA4B,GAC9BtJ,YACF,IACG56B,EAAA,kCAGP,CACS0kC,EAAYzsB,CAErB,GAAWoH,EAAA,OAAYpH,uBACrB,SACgB4sB,QACdr2B,oBACAE,WACA4L,SAAQxX,CAAA,KACiB,KACzB4X,cACM,WACAzB,UAAuB,GAC3BnD,MAAY,CAAC,aACf,WACD,SAAA6e,GAAA,EAAAyP,GAAAtuB,EAAAkN,GAAA,CAEH3D,SAAA+kB,EAAW,eAAgBnsB,CACzB,EAAGlB,CAAM,GAAkB,EACxBjU,KACA,IACHgT,IAAA,eAASA,EAAA,UAAYzT,EAAA,OAClByU,SAAK,IAERhB,+BAAA,MAAS,qBAAW4uB,EAAA,WAEf,OACc,IAAWN,UAAoB,OAAA11B,EAC5C,IACFoI,GAAA6d,EACA,eACL,OAEP,cACE,YACE,GAAAnmB,CAAA,IAAAE,CAAA,EACQrM,EACC,IAED,GACGqiC,aAAYzsB,WAErB,KAAA6rB,CAAA,GACEzpB,MAAK8pB,oDACL31B,KACAE,iCACcimB,EACN,YACD,CACG,CAEV,GACD0P,GAAA,CAAAvR,EAAA,CACA,MAAAhwB,EAAA,QAAAT,CAAA,gCAEA,OAAAyT,EAAA,KACDhO,QAAkBzF,EAChB,OAAAkiC,EAAgBT,KAAe,SAEjC,mCACA,MAAa,qBACX,KAAAlJ,EAAO,QAAuBqK,WAAiB5lB,EAAA,aAAe,iBAChE,UAAAA,EAAA,KACF,oBAUF,UAAAvJ,EAAAa,EAAA,CACI0tB,KAAYvR,OACRhwB,QACN,CACEgT,QAAA,QACQyuB,SAAiBliC,EACvB4W,EAA+B,CAC3B,EAAAnD,EAAA,KACI,cACF8kB,WACG8J,SAAYzsB,aAEV,SAAA0c,GAAAmP,GAAAE,CAAA,CAAgB/rB,EACzB,EAAS,CAAaA,CACf,EAAkB,CAAO,SAAA2rB,GAAO9gC,YAAc,SAAA9D,EAErD,mBAAAkmC,EAAS,OAAc,QAAAhtB,CACvB,GAAeD,aAAiC+rB,cAAemB,CAAA,EAAA9tB,EAAA,IAAAnJ,UAC5D,KAAA6gB,EACJ,YAEP,UACF,IACF,MAAAqW,EAAA,MAAAF,IAEAC,EAAuBC,CAAA,EACrBl5B,YACAlN,gBAC2B,CAAC,KAE3B,MACM8vB,QAAmB,CAC1B,GAAM,eAEN5gB,cACE6gB,UAAW,CAAS,CAAA7W,GAAApC,EAAA,UACP,cACP,oBACIuvB,UACNpkC,SAAQqkC,EAAe3uB,EAAA,CACvBwuB,QACApW,EAAoB,cACV,CACV9tB,SAAQskC,GAAMvlC,KAAC,CACf+uB,uBACF,GAAAD,IAAA,SAAAhZ,EAAA,KACC,iCACA,GAAAgZ,IAAA,WAAAzP,EAAA,KAEL,SACE,CAAAvJ,EAAAwD,GAAA,CAAQ,SAAqB,kBAEzB,GAAaxD,EAAA,QAASiB,SAAM,KAAc7S,SAASgU,oBAAQD,WACpD,IAAAtQ,GAAA,CAAM,MAAK,UAAAilB,CAGpBvN,EAAA1X,IACE,SAAAilB,CAAA,EAAI,OAAAvN,EAAA,MACS,qBAAc,UAAAvJ,EAAA,MACd,SAAAA,EAAA,QACXmC,SACSsT,GAAA+R,EAAA,CAAO,YAChB,gBACD,gBAEH,EAAe,EACZ+H,CACC,CAAAptB,IACeoE,IACL,OAAA1U,EAAEilB,WAAcjlB,SAChB21B,iBACN,SACE,GAA0B,eAAcrlB,EACtCA,IACE,CAAAA,CAC+B,EACf,GACD,EACD,CACV,SAAAgrB,GACD,SAAAS,EACI,MAAAD,EAGP97B,QACA3I,cACK,KAAA4X,EACQ,KAAAF,EACL,SAAAM,EAAA,IACG,QAAA9S,EACX,GAAAF,CACA,GAEN,OACA8S,GAAA,WACLA,EACI,CAAAA,GAAA,GAGb,OAAAD,GAAA,WAEAA,EAAsB,CAAAA,GAAA,GAEpB4sB,uBACOl/B,kBACPuS,eACAD,GACAD,YACAF,cAEAxS,YACGF,YAEC,GAAA0/B,KAA2B,GACrBrkB,WAAa,CACvB,cACI,MAAAmmB,EACI,MAAC3uB,SAAQD,EAAA,cAAArS,CAAA,IAAAm/B,EAAA,eACjB,QAAA1jC,GAAA,KAKAkO,iBAAgB,EACdlO,EAAI0jC,gBAAS,EACI5sB,KACJD,EACb,GAAO7S,EACU8S,eACJD,OACb,KAAAG,EACE0sB,IAAS5sB,CAEb,IACEuI,MAAAkD,EAAA,CACO,cAAAzM,EAAA,SACE0vB,QACPzuB,SAAgBH,GAAiB6sB,CAAA,CAEhC,GAEC,GAAc,EACdzjC,CACAA,SAAkBw4B,GAAA3kB,EAAA,CAClB3P,MACF,WACIF,qBAAKiU,EAETnC,KAAK,MAAAjC,EAAA,SAAC6C,0BAAYE,IAAMI,EAAeyuB,uCAErC,GAAAC,CAEE5vB,MAAA,8BAAA6vB,EAAA,4BAAclC,CAA2B,SAAUhD,GAAAp+B,EAAA,IAEtD,CAAAA,EACK,OAEZ,MAAAgF,EAAA,QAAAhF,CAAA,EAEO,CACL,KAAAujC,EAAW,SAAA/gC,CACX,EAAI6gC,EACU52B,IAAY+E,gBAAe,EAC3B/E,KAAW+E,GAAOrM,EAAE,+BAElC,WAAiB,CACP,SAAEq+B,GAAQjkB,EAAG+jB,IAAmBG,CACnC,cAAAlkB,EAAA9L,EAAA,UAAAuJ,EAAA,QACL,MAAgB,qBAGlB,cAAA0mB,CAAA,CACF,GAEA,GAAStF,SAAiB,CACpB,MAACp+B,qBAAK,SAAAmF,CACV,CAAMH,EACN,CAAM,EAAEu+B,SAAM/gC,IAAS,KAAA6H,CACvB,GAGA,MAAA1C,EADoB+7B,IAAiB/jB,EAEnC,YAAAtV,CAAA,QAGIuL,YAGE,KAAMlB,CAA0BkB,KAAW,SAAAjZ,CAAQ,EAGrD8W,EAAYnO,EAAAsE,GAAA5N,EAAAW,CAAA,KAAoBiZ,CAAEzQ,EAAI,OACvC,UACD,CAEN,UAAAi1B,EAEA,YAAA7J,EAAyBlmB,SAAQ,OAAAgV,EACzBhb,eACAsD,KACN,EAAyB,WAAA0yB,EAEnB,QAAAjvB,EAAEpP,UAAIW,IAEZ,GAFyBgL,MAErB,CAACrC,EAAe,YAEd,MAAA8E,EAAAT,GAAA3N,EAAAW,CAAA,EACJy9B,QACA7J,oBACAtzB,MAAS,wBAAAo9B,IAAA,kCAAEhb,cAAQC,uBAAcvP,gBAAI,IAAAuP,GAAAD,EACrCgb,WACAjvB,WACAmtB,wBACEjzB,QACA80B,KAAa7J,EAAoB,WACjC,SAACnlB,CAAS,CAAO,EAErB,CAAMhB,CAEN,CACA,SACE4S,GAAA,QAAA1X,EAGG,WAAAs1B,EACQ,SAAAj+B,EACiBiZ,iBAE1BnC,CAAO,mBAAA4lB,CAAsBha,SAAsB,MACnD5L,EAAAimB,GAAAn1B,CAAA,EACQ,IACCo/B,UACDpL,CACN5K,SAAU/X,eAGN,IAAA7F,EACC,MAAAD,CAEb,EAEA,UAAAya,EACEjlB,aACAs1B,QACAj+B,MACiB,CAAC,CAAA69B,EAClBnB,mCACC4B,EAAA,SAAA1Q,CAAA,EACKlmB,KAA+BiB,EAAA,QAAAA,CAAA,EAC/B,CAAAs+B,EAAAC,CAAA,EAAA7uB,EAAA,IACAnL,UACJ5M,EAAS,KAAEoiB,CAAQC,cAAcvP,gBAAKD,eAAM,kBAC5Cya,CACA8P,EACAG,OACEl1B,aACEw+B,KAAatJ,4CACbuJ,GAAiBnJ,sBAAyB/wB,EAC1CoxB,IAAoBpS,KAAc,MAAAmb,CAAA,SAAAA,CAAA,GAClCL,EAAiBrT,GAAkBkK,QAAgB,mBAAAnwB,CAAA,IAAhBmwB,QAAgB,QAEzD,OAAOoJ,QAAqB,CACtBK,yBACE,gBAAAC,EAAA,0BACJL,KAGAM,cAAWxmC,GAAA,CACGA,EAAA,iBACNkmC,EAAA,GACU,KAAAI,EAAA,EAEtB,UAAAjnB,EAAA,WAEA,qBAAmConB,EACnC,MAAaz6B,kBACPy6B,SACJz6B,KAIIq6B,iBACAhkC,mDAGAkkC,QAGN,QACEvmC,GAAA,GAGQmS,iBAOF8L,iBAEYje,EAAM,QACH,mBACjBkmC,YAAgB,CAClB,SAAAE,CAAA,CACsB,GAACnuB,MAEvBoH,KAAA,CAA6BonB,SAAa,SAAAr0B,CAAA,CAA2B,EAAAiN,EAAA,QAAIpH,6BAErElB,SAAM,CAAAsI,EAAA,QACC+mB,wCACS,CAAAtwB,EAAAuL,GAAA,CACZiB,QAAe3a,EAAA,QACjBu+B,UAAgB,CAClB,MAAApwB,EAAAa,EAAA,CAAEsB,QAEFykB,CAAA,EAAM,IAAAtC,GAAAsC,CAAA,EACN5mB,KAAA,IAAOswB,8BAAsB,SAAA1/B,EAAA,mBAAAgG,CAAA,iBAAAke,GAAAvL,EAAA,QAE/BvJ,MAAO,2BAAsB4L,gBAAkBtP,MAC/CiN,IAAA2D,GAAA,CAAY,SAAAsa,EAAsBrlB,OAChCoH,OAAA,CAAY,GAAwBpH,WACjCoJ,CAAQ,+BAA0BriB,kBAAqB,SACxD8W,GAAKmE,GAAA,CACHvD,4BAAmCmmB,EAAA,eACnChmB,UACK,OACN,GAAEmvB,EAID,GAEI,GAAgD/tB,UAACD,GAC1C,eAEP,QAGJlC,GAAa,CAACmN,EAAUqa,4BAAsB,GAC/C,EAEH,SAAYje,EAAA,UACT8mB,uBACCluB,cACS,SACA4kB,YAAelb,CAA+BD,KACzCtP,SAAI,MACV,sBAGK,IAAA8zB,EAAA,IACV,SAAApwB,EAAAa,EAAA,CACF,SAENsvB,CACK,CACE,EAAA5mB,EAAA,mBACU,CAAAvJ,EAAA,KACV9V,MAAaA,wBACfkmC,SAAY,UAAK,CACnB,MAAAE,CAAA,EACF,EAAAtwB,EAAA,QAAEmC,cAEM,SAAAnC,EAAAyF,GAAA,CAA6B,IAAAmrB,EAAOzuB,MAC1CnC,cACO,GAAAzT,EACC,aACN6B,EAAegiC,GAAmBjuB,EAE5BvB,iBAAK,cAAK,SAAAZ,EAAAklB,GAAA,CAElB3b,SAAApH,WACW,SAAwB,YAAa,CAAe,CAE/DnC,CAAA,EAAMqD,CAAS,CAAIlB,CACZ,GACEyuB,EACC,CACFrkC,SACWye,GAAA,EACbolB,KACF,SAAAlnC,EAAA,MAAA2nC,EAAA,CACe,IAAa1uB,CAEpBtQ,UAAgB3I,eAAyB+8B,GAAAn1B,CAAA,EAAA8F,EAAYV,GAAA3N,EAAAW,CAAA,EAAA4nC,EAAElgC,EAAA,aAAAgG,CAAA,EAAAm6B,EAC3DD,GAAA,YAAAA,EAAA,QAAA/+B,EAAA8F,EAAAm5B,MAAA,UAAAC,KAAA,MAAAl/B,EAAA,OAAA8F,GAAA,GAAAk5B,GAAA,MAAAA,EACD,QAGZ,EAAAF,EAAA,GAGP,OAAAE,EAAA,IAAAh/B,GAEMu7B,KAAgBtiB,CAAQziB,iDAAIW,yBAAkB,+BAAQ,SAAA8W,EAAAklB,GAAA,UAC9Ch8B,KAAU,SAAA6I,EAAA,SAChBnB,SACAgG,OAAiBrO,IACjBuoC,kBAAoB98B,EAC1B,EAIA,EAAK+8B,EAAc/gC,cAAQ,CAC3B,GAAegb,MAAAka,GAAA,CAAAja,EAAAC,IAAA,CAER6lB,MACL,OAAAl/B,EAGIiU,IAAoD,EACpD7E,EACe,CAAakB,SAErB,GAAA+uB,CACO3oC,IACAW,OACP2I,GAAA,YAAAA,EAAA,OAAA23B,GAAA,YAAAA,EAAA,KAAA2H,GAAAC,EAAAF,CAAA,ICnkFf,IAAApZ,GAAA,CAAO;;;;;;;;;;;;;;;;;;;;;;0pPCAP,IAAAA,GAAA,CAASmJ,yCAAqC","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getAccountByInstance","instance","instanceURL","getCurrentAccount","window","__IGNORE_GET_ACCOUNT_ERROR__","currentAccount","account","getCurrentAccountNS","saveAccount","acc","updateAccount","accountInfo","displayName","currentInstance","getCurrentInstance","instances","e","location","getInstanceConfiguration","configuration","maxMediaAttachments","maxTootChars","pleroma","pollLimits","statuses","polls","maxCharactersPerOption","maxExpiration","getCurrentInstanceConfiguration","get","key","localStorage","getItem","console","JSON","value","set","setJSON","warn","session","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","toLowerCase","url","client","masto","createRestAPIClient","timeout","initInstance","uri","streamingApi","urls","domain","streaming","streamClient","createStreamingAPIClient","implementation","initAccount","vapidKey","mastoAccount","initPreferences","preferences","accountID","authenticated","_b","_c","instanceAccount","_e","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","isMastodonLinkMaybe","pathname","hash","URL","_moize","moize","mem","fn","opts","maxSize","isDeepEqual","pmem","isPromise","rateLimit","interval","queue","isRunning","executeNext","length","shift","args","callFn","apply","push","throttle","pThrottle","limit","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapStates","snapshot","states","RegExp","unfurledLinks","Promise","resolve","debug","remoteInstanceFetch","theURL","urlAfterHash","urlObj","hostname","statusRegex","path","statusMatch","masto2","status","mastoSearchFetch","q","type","results","then","handleFulfill","result","selfURL","instance2","saveStatus","reject","handleCatch","finalPromise","unfurlMastodonLink","proxy","appVersion","prevLocation","currentLocation","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","reloadGenericAccounts","counter","spoilers","spoilersMedia","scrollPositions","statusQuotes","statusFollowedTags","statusReply","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","showKeyboardShortcutsHelp","showGenericAccounts","showMediaAlt","showEmbedModal","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","mediaAltGenerator","cloakMode","states$1","initStates","subscribeKey","v","subscribe","changes","prevValue","statusKey","getStatus","statusID","skipThreading","skipUnfurling","override","oldStatus","deepEqual","_pinned","srKey","sKey","threadifyStatus","unfurlStatus","_threadifyStatus","propInstance","api","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","fauxDiv","content","document","i","splice","useInterval","deps","immediate","savedCallback","useRef","useEffect","current","setInterval","tick","clearInterval","openCompose","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","alert","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","comment2","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","more2","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","unpin","bus","link","history","share","sparkles","sparkles2","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","speak","building","arrows-right","SIZES","s","m","l","xl","xxl","ICONDATA","SVGICon","body","rotate","flip","_jsx","viewBox","dangerouslySetInnerHTML","__html","style","transform","isShallowEqual","Object","keys","matchesArg","cacheKeyArg","keyArg","icon","Icon","size","alt","title","class","iconSize","iconBlock","Array","iconData","setIconData","useState","currentIcon","iconB","useCloseWatcher","watcher","CloseWatcher","addEventListener","destroy","useCloseWatcher$1","$modalContainer","getElementById","Modal","children","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","supportsCloseWatcher","escRef","useHotkeys","enabled","keydown","keyup","ref","node","target","currentTarget","tabIndex","onFocus","createPortal","Loader","abrupt","hidden","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","Avatar","squircle","avatarRef","isMissing","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","queueMicrotask","drawImage","allPixels","getImageData","hasAlpha","pixel","classList","add","clearRect","Link","forwardRef","routerLocation","useLocation","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","encodeURIComponent","join","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","root","documentElement","getComputedStyle","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","requestAnimationFrame","safeBoundingBoxPadding","paddings","CSS","supports","passive","Menu2","containerProps","instanceRef","_instanceRef","useWindowSize","Menu","boundingBoxPadding","repositionFlag","unmountOnClose","closeMenu","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","menuRef","_jsxs","openTrigger","direction","overflow","gap","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","EmojiText","emojis","indexOf","regex","shortcode","elements","split","word","emoji","staticUrl","srcset","EmojiText$1","memo","oldProps","newProps","nameCollator","Intl","Collator","sensitivity","NameText","showAvatar","showAcct","short","acct","avatar","avatarStatic","username","_","acct1","acct2","match","trimmedUsername","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","compare","preventDefault","_Fragment","newAccount","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","DateTimeFormat","RelativeTime","datetime","format","date","useMemo","dateStr","now","diff","year","twitter","toDate","fromNow","dt","toISOString","_localeMatch","localeMatch","locales","resolvedOptions","locale","navigator","languages","localeTargetLanguages","translationTargetLanguages","code","getTranslateTargetLanguage","fromSettings","localeCode2Text","DisplayNames","of","emojifyText","forEach","whitelistLinkClasses","_enhanceContent","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","shortenLink","links","usernames","innerText","hasChildren","some","u","d","slice","textNodes","extractTextNodes","html","nodeValue","replaceWith","childNodes","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","URL_PREFIX_REGEX","URL_DISPLAY_LENGTH","prefix","displayURL","suffix","cutoff","rejectFilterMap","assign","reduce","cur","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","el","append","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","_DateTimeFormat","dateYear","hideTime","formatOpts","currentYear","Date","getFullYear","day","hour","minute","niceDateTime","dtfOpts","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","useAvatarStatic","internal","showActivity","showStats","accountInstance","hideDisplayName","relationship","excludeRelationshipAttrs","statusesCount","lastStatusAt","fields","note","followersCount","createdAt","verifiedField","f","verifiedAt","excludedRelationship","hasRelationship","followedBy","requested","supportsCache","feature","version","range","features","satisfies","includePrerelease","loose","define_import_meta_env_default","draftsStore","createStore","drafts","val","getMany","delMany","clear","db","visibilityIconsMap","public","unlisted","private","direct","Poll","lang","readOnly","votePoll","uiState","setUIState","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","dir","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","name","marginLeft","FilterContext","createContext","_isFiltered","filtered","filterContext","appliedFilters","hasContext","context","isHidden","filterAction","action","filterTitles","titles","titlesStr","isFiltered","filteredItem","item","currentAccountID","isSelf","filterState","filteredItems","items","htmlContentLength","supportsTTS","speechSynthesis","speaking","cancel","utterance","SpeechSynthesisUtterance","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","isSafari","userAgent","dataAltLabel","AltBadge","MEDIA_CAPTION_LIMIT","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","remoteMediaURLObj","isVideoMaybe","isAudioMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","fetch","mode","backgroundImage","backgroundSize","QuickPinchZoom","objectPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","showProgress","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","onTimeUpdate","container","currentTime","controls","autoplay","MenuLink","FocusableItem","detail","SHOW_COMMENT_COUNT_LIMIT","INLINE_TRANSLATE_LIMIT","fetchAccount","v1","$select","memFetchAccount","visibilityText","isIOS","ontouchstart","REACTIONS_LIMIT","getPollText","getPostText","PostContent","post","language","removeAttribute","oldPost","newPost","Status","contentTextWeight","enableCommentHint","withinContext","enableTranslate","forceTranslate","_forceTranslate","onMediaClick","quoted","onStatusLinkClick","showFollowedTags","allowContextMenu","showActionsBar","showReplyParent","sameInstance","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","editedAt","card","reblog","tags","_deleted","useContext","filterInfo","debugHover","FilteredStatus","editedAtDate","inReplyToAccountRef","createdAtDate","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","showSpoiler","readingExpandMedia","prefs","showSpoilerMedia","setForceTranslate","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","spoilerContentRef","statusRef","contentRef","mediaContainerRef","readMoreText","textWeight","editedDateText","_a","mediaNoDesc","replyToStatus","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","favouriteStatus","differentLanguage","fetchBoostedLikedByAccounts","firstLoad","favouriteIterator","reblogResults","reblogIterator","favouriteResults","_types","done","fetchAccounts","showReactions","replyStatus","canBoost","bookmarkStatus","MenuDivider","postText","createdDateText","nicePostURL","cachedStatus","contextMenuRef","setContextMenuProps","showContextMenu","bindLongPressContext","useLongPress","clientX","clientY","isContextMenuOpen","hotkeysEnabled","fRef","setIsContextMenuOpen","rRef","bRef","dRef","confirmBoostStatus","xRef","activeStatus","spoilerButton","spoilerMediaButton","displayedMediaAttachments","captionChildren","attachments","indices","showMultipleMediaCaptions","showCommentCount","isThread","StatusCompact","containsQuestion","nodeRef","selection","anchorNode","toString","ControlledMenu","contextMenuProps","anchorPoint","state","portal","actionsRef","StatusButton","StatusMenuItems","showCommentHint","QuoteStatuses","newPoll","pollResponse","TranslationBlock","MultipleMediaFigure","count","checked","viewScroll","EditedAtModal","selfReferential","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","hasIframeHTML","setCardStatusURL","handleClick","imageData","blurhashPixels","blurhashImage","decodeBlurHash","w","putImageData","videoID","fetchStatusHistory","setEditHistory","editHistory2","editHistory","log","error","buttonTitle","iconAlt","hours","seconds","host","minutes","padStart","restPath","statusPeekText","showPeek","setShowPeek","isReblog","filterTitleStr","actualStatusID","bindLongPressPeek","isFollowedTags","threshold","ssKey","statusPeekRef","level","quotes","uniqueQuotes","arr","q2","restNewProps","shallowEqual","restOldProps"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/show-toast.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/mem.js","../../src/utils/pmem.js","../../src/utils/ratelimit.js","../../src/utils/unfurl-link.jsx","../../src/utils/states.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/ICONS.jsx","../../src/components/icon.jsx","../../src/utils/useCloseWatcher.js","../../src/components/modal.jsx","../../src/components/loader.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/components/menu2.jsx","../../src/components/menu-confirm.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/utils/visibility-icons-map.js","../../src/components/poll.jsx","../../src/utils/filter-context.js","../../src/utils/filters.jsx","../../src/utils/html-content-length.js","../../src/utils/speech.js","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\r\n\r\nexport function getAccount(id) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.info.id === id) || accounts[0];\r\n}\r\n\r\nexport function getAccountByAccessToken(accessToken) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.accessToken === accessToken);\r\n}\r\n\r\nexport function getAccountByInstance(instance) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.instanceURL === instance);\r\n}\r\n\r\nexport function getCurrentAccount() {\r\n  if (!window.__IGNORE_GET_ACCOUNT_ERROR__) {\r\n    // Track down getCurrentAccount() calls before account-based states are initialized\r\n    console.error('getCurrentAccount() called before states are initialized');\r\n    if (import.meta.env.DEV) console.trace();\r\n  }\r\n  const currentAccount = store.session.get('currentAccount');\r\n  const account = getAccount(currentAccount);\r\n  return account;\r\n}\r\n\r\nexport function getCurrentAccountNS() {\r\n  const account = getCurrentAccount();\r\n  const {\r\n    instanceURL,\r\n    info: { id },\r\n  } = account;\r\n  return `${id}@${instanceURL}`;\r\n}\r\n\r\nexport function saveAccount(account) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === account.info.id);\r\n  if (acc) {\r\n    acc.info = account.info;\r\n    acc.instanceURL = account.instanceURL;\r\n    acc.accessToken = account.accessToken;\r\n    acc.vapidKey = account.vapidKey;\r\n  } else {\r\n    accounts.push(account);\r\n  }\r\n  store.local.setJSON('accounts', accounts);\r\n  store.session.set('currentAccount', account.info.id);\r\n}\r\n\r\nexport function updateAccount(accountInfo) {\r\n  // Only update if displayName or avatar or avatar_static is different\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\r\n  if (acc) {\r\n    if (\r\n      acc.info.displayName !== accountInfo.displayName ||\r\n      acc.info.avatar !== accountInfo.avatar ||\r\n      acc.info.avatar_static !== accountInfo.avatar_static\r\n    ) {\r\n      acc.info = {\r\n        ...acc.info,\r\n        ...accountInfo,\r\n      };\r\n      store.local.setJSON('accounts', accounts);\r\n    }\r\n  }\r\n}\r\n\r\nlet currentInstance = null;\r\nexport function getCurrentInstance() {\r\n  if (currentInstance) return currentInstance;\r\n  try {\r\n    const account = getCurrentAccount();\r\n    const instances = store.local.getJSON('instances');\r\n    const instance = account.instanceURL.toLowerCase();\r\n    return (currentInstance = instances[instance]);\r\n  } catch (e) {\r\n    console.error(e);\r\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\r\n    // Temporary fix for corrupted data\r\n    store.local.del('instances');\r\n    location.reload();\r\n    return {};\r\n  }\r\n}\r\n\r\n// Massage these instance configurations to match the Mastodon API\r\n// - Pleroma\r\nfunction getInstanceConfiguration(instance) {\r\n  const {\r\n    configuration,\r\n    maxMediaAttachments,\r\n    maxTootChars,\r\n    pleroma,\r\n    pollLimits,\r\n  } = instance;\r\n\r\n  const statuses = configuration?.statuses || {};\r\n  if (maxMediaAttachments) {\r\n    statuses.maxMediaAttachments ??= maxMediaAttachments;\r\n  }\r\n  if (maxTootChars) {\r\n    statuses.maxCharacters ??= maxTootChars;\r\n  }\r\n\r\n  const polls = configuration?.polls || {};\r\n  if (pollLimits) {\r\n    polls.maxCharactersPerOption ??= pollLimits.maxOptionChars;\r\n    polls.maxExpiration ??= pollLimits.maxExpiration;\r\n    polls.maxOptions ??= pollLimits.maxOptions;\r\n    polls.minExpiration ??= pollLimits.minExpiration;\r\n  }\r\n\r\n  return {\r\n    ...configuration,\r\n    statuses,\r\n    polls,\r\n  };\r\n}\r\n\r\nexport function getCurrentInstanceConfiguration() {\r\n  const instance = getCurrentInstance();\r\n  return getInstanceConfiguration(instance);\r\n}\r\n","import { getCurrentAccountNS } from './store-utils';\r\n\r\nconst local = {\r\n  get: (key) => {\r\n    try {\r\n      return localStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(local.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return localStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return local.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return localStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nconst session = {\r\n  get: (key) => {\r\n    try {\r\n      return sessionStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(session.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return sessionStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return session.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return sessionStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\n// Store with account namespace (id@domain.tld) <- uses id, not username\r\nconst account = {\r\n  get: (key) => {\r\n    try {\r\n      return local.getJSON(key)[getCurrentAccountNS()];\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      data[getCurrentAccountNS()] = value;\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      delete data[getCurrentAccountNS()];\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default { local, session, account };\r\n","import { createRestAPIClient, createStreamingAPIClient } from 'masto';\r\n\r\nimport store from './store';\r\nimport {\r\n  getAccount,\r\n  getAccountByAccessToken,\r\n  getAccountByInstance,\r\n  getCurrentAccount,\r\n  saveAccount,\r\n} from './store-utils';\r\n\r\n// Default *fallback* instance\r\nconst DEFAULT_INSTANCE = 'mastodon.social';\r\n\r\n// Per-instance masto instance\r\n// Useful when only one account is logged in\r\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\r\n// E.g. apis['mastodon.social']\r\nconst apis = {};\r\n\r\n// Per-account masto instance\r\n// Note: There can be many accounts per instance\r\n// Useful when multiple accounts are logged in or when certain actions require a specific account\r\n// Just in case if I need this one day.\r\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\r\nconst accountApis = {};\r\nwindow.__ACCOUNT_APIS__ = accountApis;\r\n\r\n// Current account masto instance\r\nlet currentAccountApi;\r\n\r\nexport function initClient({ instance, accessToken }) {\r\n  if (/^https?:\\/\\//.test(instance)) {\r\n    instance = instance\r\n      .replace(/^https?:\\/\\//, '')\r\n      .replace(/\\/+$/, '')\r\n      .toLowerCase();\r\n  }\r\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\r\n\r\n  const masto = createRestAPIClient({\r\n    url,\r\n    accessToken, // Can be null\r\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\r\n  });\r\n\r\n  const client = {\r\n    masto,\r\n    instance,\r\n    accessToken,\r\n  };\r\n  apis[instance] = client;\r\n  if (!accountApis[instance]) accountApis[instance] = {};\r\n  if (accessToken) accountApis[instance][accessToken] = client;\r\n\r\n  return client;\r\n}\r\n\r\n// Get the instance information\r\n// The config is needed for composing\r\nexport async function initInstance(client, instance) {\r\n  console.log('INIT INSTANCE', client, instance);\r\n  const { masto, accessToken } = client;\r\n  // Request v2, fallback to v1 if fail\r\n  let info;\r\n  try {\r\n    info = await masto.v2.instance.fetch();\r\n  } catch (e) {}\r\n  if (!info) {\r\n    try {\r\n      info = await masto.v1.instance.fetch();\r\n    } catch (e) {}\r\n  }\r\n  if (!info) return;\r\n  console.log(info);\r\n  const {\r\n    // v1\r\n    uri,\r\n    urls: { streamingApi } = {},\r\n    // v2\r\n    domain,\r\n    configuration: { urls: { streaming } = {} } = {},\r\n  } = info;\r\n  const instances = store.local.getJSON('instances') || {};\r\n  if (uri || domain) {\r\n    instances[\r\n      (domain || uri)\r\n        .replace(/^https?:\\/\\//, '')\r\n        .replace(/\\/+$/, '')\r\n        .toLowerCase()\r\n    ] = info;\r\n  }\r\n  if (instance) {\r\n    instances[instance.toLowerCase()] = info;\r\n  }\r\n  store.local.setJSON('instances', instances);\r\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\r\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\r\n  const supportsWebSocket = 'WebSocket' in window;\r\n  if (supportsWebSocket && (streamingApi || streaming)) {\r\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\r\n    // masto.config.props.streamingApiUrl = streaming || streamingApi;\r\n    // Legacy masto.ws\r\n    const streamClient = createStreamingAPIClient({\r\n      streamingApiUrl: streaming || streamingApi,\r\n      accessToken,\r\n      implementation: WebSocket,\r\n    });\r\n    client.streaming = streamClient;\r\n    // masto.ws = streamClient;\r\n    console.log('🎏 Streaming API client:', client);\r\n  }\r\n}\r\n\r\n// Get the account information and store it\r\nexport async function initAccount(client, instance, accessToken, vapidKey) {\r\n  const { masto } = client;\r\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\r\n\r\n  console.log('CURRENTACCOUNT SET', mastoAccount.id);\r\n  store.session.set('currentAccount', mastoAccount.id);\r\n\r\n  saveAccount({\r\n    info: mastoAccount,\r\n    instanceURL: instance.toLowerCase(),\r\n    accessToken,\r\n    vapidKey,\r\n  });\r\n}\r\n\r\n// Get preferences\r\nexport async function initPreferences(client) {\r\n  try {\r\n    const { masto } = client;\r\n    const preferences = await masto.v1.preferences.fetch();\r\n    store.account.set('preferences', preferences);\r\n  } catch (e) {\r\n    // silently fail\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n// Get the masto instance\r\n// If accountID is provided, get the masto instance for that account\r\nexport function api({ instance, accessToken, accountID, account } = {}) {\r\n  // Always lowercase and trim the instance\r\n  if (instance) {\r\n    instance = instance.toLowerCase().trim();\r\n  }\r\n\r\n  // If instance and accessToken are provided, get the masto instance for that account\r\n  if (instance && accessToken) {\r\n    const client =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    const { masto, streaming } = client;\r\n    return {\r\n      masto,\r\n      streaming,\r\n      client,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  if (accessToken) {\r\n    // If only accessToken is provided, get the masto instance for that accessToken\r\n    console.log('X 1', accountApis);\r\n    for (const instance in accountApis) {\r\n      if (accountApis[instance][accessToken]) {\r\n        console.log('X 2', accountApis, instance, accessToken);\r\n        const client = accountApis[instance][accessToken];\r\n        const { masto, streaming } = client;\r\n        return {\r\n          masto,\r\n          streaming,\r\n          client,\r\n          authenticated: true,\r\n          instance,\r\n        };\r\n      } else {\r\n        console.log('X 3', accountApis, instance, accessToken);\r\n        const account = getAccountByAccessToken(accessToken);\r\n        if (account) {\r\n          const accessToken = account.accessToken;\r\n          const instance = account.instanceURL.toLowerCase().trim();\r\n          const client = initClient({ instance, accessToken });\r\n          const { masto, streaming } = client;\r\n          return {\r\n            masto,\r\n            streaming,\r\n            client,\r\n            authenticated: true,\r\n            instance,\r\n          };\r\n        } else {\r\n          throw new Error(`Access token not found`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If account is provided, get the masto instance for that account\r\n  if (account || accountID) {\r\n    account = account || getAccount(accountID);\r\n    if (account) {\r\n      const accessToken = account.accessToken;\r\n      const instance = account.instanceURL.toLowerCase().trim();\r\n      const client =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      const { masto, streaming } = client;\r\n      return {\r\n        masto,\r\n        streaming,\r\n        client,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    } else {\r\n      throw new Error(`Account ${accountID} not found`);\r\n    }\r\n  }\r\n\r\n  const currentAccount = getCurrentAccount();\r\n\r\n  // If only instance is provided, get the masto instance for that instance\r\n  if (instance) {\r\n    if (currentAccountApi?.instance === instance) {\r\n      return {\r\n        masto: currentAccountApi.masto,\r\n        streaming: currentAccountApi.streaming,\r\n        client: currentAccountApi,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    if (currentAccount?.instanceURL === instance) {\r\n      const { accessToken } = currentAccount;\r\n      currentAccountApi =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      return {\r\n        masto: currentAccountApi.masto,\r\n        streaming: currentAccountApi.streaming,\r\n        client: currentAccountApi,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    const instanceAccount = getAccountByInstance(instance);\r\n    if (instanceAccount) {\r\n      const accessToken = instanceAccount.accessToken;\r\n      const client =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      const { masto, streaming } = client;\r\n      return {\r\n        masto,\r\n        streaming,\r\n        client,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    const client = apis[instance] || initClient({ instance });\r\n    const { masto, streaming, accessToken } = client;\r\n    return {\r\n      masto,\r\n      streaming,\r\n      client,\r\n      authenticated: !!accessToken,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided, get the masto instance for the current account\r\n  if (currentAccountApi) {\r\n    return {\r\n      masto: currentAccountApi.masto,\r\n      streaming: currentAccountApi.streaming,\r\n      client: currentAccountApi,\r\n      authenticated: true,\r\n      instance: currentAccountApi.instance,\r\n    };\r\n  }\r\n  if (currentAccount) {\r\n    const { accessToken, instanceURL: instance } = currentAccount;\r\n    currentAccountApi =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    return {\r\n      masto: currentAccountApi.masto,\r\n      streaming: currentAccountApi.streaming,\r\n      client: currentAccountApi,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\r\n  const client =\r\n    apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE });\r\n  const { masto, streaming } = client;\r\n  return {\r\n    masto,\r\n    streaming,\r\n    client,\r\n    authenticated: false,\r\n    instance: DEFAULT_INSTANCE,\r\n  };\r\n}\r\n\r\nwindow.__API__ = {\r\n  currentAccountApi,\r\n  apis,\r\n  accountApis,\r\n};\r\n","import Toastify from 'toastify-js';\r\n\r\nwindow._showToast = showToast;\r\n\r\nfunction showToast(props) {\r\n  if (typeof props === 'string') {\r\n    props = { text: props };\r\n  }\r\n  const { onClick, delay, ...rest } = props;\r\n  const toast = Toastify({\r\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\r\n    gravity: 'bottom',\r\n    position: 'center',\r\n    ...rest,\r\n    onClick: () => {\r\n      onClick?.(toast); // Pass in the object itself!\r\n    },\r\n  });\r\n  if (delay) {\r\n    setTimeout(() => {\r\n      toast.showToast();\r\n    }, delay);\r\n  } else {\r\n    toast.showToast();\r\n  }\r\n  return toast;\r\n}\r\n\r\nexport default showToast;\r\n","export default function isMastodonLinkMaybe(url) {\r\n  try {\r\n    const { pathname, hash } = new URL(url);\r\n    return (\r\n      /^\\/.*\\/\\d+$/i.test(pathname) ||\r\n      /^\\/(@[^/]+|users\\/[^/]+)\\/(statuses|posts)\\/\\w+\\/?$/i.test(pathname) || // GoToSocial, Takahe\r\n      /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Firefish\r\n      /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) || // Pleroma\r\n      /#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(hash) // Phanpy 🫣\r\n    );\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n","import moize from 'moize';\r\n\r\nwindow._moize = moize;\r\n\r\nexport default function mem(fn, opts = {}) {\r\n  return moize(fn, { ...opts, maxSize: 50, isDeepEqual: true });\r\n}\r\n","import mem from './mem';\r\n\r\nexport default function pmem(fn, opts = {}) {\r\n  return mem(fn, { isPromise: true, ...opts });\r\n}\r\n","// Rate limit repeated function calls and queue them to set interval\r\nexport default function rateLimit(fn, interval) {\r\n  let queue = [];\r\n  let isRunning = false;\r\n\r\n  function executeNext() {\r\n    if (queue.length === 0) {\r\n      isRunning = false;\r\n      return;\r\n    }\r\n\r\n    const nextFn = queue.shift();\r\n    nextFn();\r\n    setTimeout(executeNext, interval);\r\n  }\r\n\r\n  return function (...args) {\r\n    const callFn = () => fn.apply(this, args);\r\n    queue.push(callFn);\r\n\r\n    if (!isRunning) {\r\n      isRunning = true;\r\n      setTimeout(executeNext, interval);\r\n    }\r\n  };\r\n}\r\n","import pThrottle from 'p-throttle';\r\nimport { snapshot } from 'valtio/vanilla';\r\n\r\nimport { api } from './api';\r\nimport states, { saveStatus } from './states';\r\n\r\nexport const throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 1000,\r\n});\r\n\r\nconst denylistDomains = /(twitter|github)\\.com/i;\r\nconst failedUnfurls = {};\r\nfunction _unfurlMastodonLink(instance, url) {\r\n  const snapStates = snapshot(states);\r\n  if (denylistDomains.test(url)) {\r\n    return;\r\n  }\r\n  if (failedUnfurls[url]) {\r\n    return;\r\n  }\r\n  const instanceRegex = new RegExp(instance + '/');\r\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\r\n    return Promise.resolve(snapStates.unfurledLinks[url]);\r\n  }\r\n  console.debug('🦦 Unfurling URL', url);\r\n\r\n  let remoteInstanceFetch;\r\n  let theURL = url;\r\n\r\n  // https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n  if (/\\/\\/elk\\.[^\\/]+\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\r\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\r\n  }\r\n\r\n  // https://trunks.social/status/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n  if (/\\/\\/trunks\\.[^\\/]+\\/status\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\r\n    theURL = theURL.replace(/trunks\\.[^\\/]+\\/status\\//i, '');\r\n  }\r\n\r\n  // https://phanpy.social/#/domain.com/s/123 -> https://domain.com/statuses/123\r\n  if (/\\/#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(theURL)) {\r\n    const urlAfterHash = theURL.split('/#/')[1];\r\n    const finalURL = urlAfterHash.replace(/\\/s\\//i, '/@fakeUsername/');\r\n    theURL = `https://${finalURL}`;\r\n  }\r\n\r\n  let urlObj;\r\n  try {\r\n    urlObj = new URL(theURL);\r\n  } catch (e) {\r\n    return;\r\n  }\r\n  const domain = urlObj.hostname;\r\n  const path = urlObj.pathname;\r\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\r\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\r\n  const statusMatch = statusRegex.exec(path);\r\n  if (statusMatch) {\r\n    const id = statusMatch[3];\r\n    const { masto } = api({ instance: domain });\r\n    remoteInstanceFetch = masto.v1.statuses\r\n      .$select(id)\r\n      .fetch()\r\n      .then((status) => {\r\n        if (status?.id) {\r\n          return {\r\n            status,\r\n            instance: domain,\r\n          };\r\n        } else {\r\n          throw new Error('No results');\r\n        }\r\n      });\r\n  }\r\n\r\n  const { masto } = api({ instance });\r\n  const mastoSearchFetch = masto.v2.search\r\n    .fetch({\r\n      q: theURL,\r\n      type: 'statuses',\r\n      resolve: true,\r\n      limit: 1,\r\n    })\r\n    .then((results) => {\r\n      if (results.statuses.length > 0) {\r\n        const status = results.statuses[0];\r\n        return {\r\n          status,\r\n          instance,\r\n        };\r\n      } else {\r\n        throw new Error('No results');\r\n      }\r\n    });\r\n\r\n  function handleFulfill(result) {\r\n    const { status, instance } = result;\r\n    const { id } = status;\r\n    const selfURL = `/${instance}/s/${id}`;\r\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\r\n    const data = {\r\n      id,\r\n      instance,\r\n      url: selfURL,\r\n    };\r\n    states.unfurledLinks[url] = data;\r\n    saveStatus(status, instance, {\r\n      skipThreading: true,\r\n    });\r\n    return data;\r\n  }\r\n  function handleCatch(e) {\r\n    failedUnfurls[url] = true;\r\n  }\r\n\r\n  if (remoteInstanceFetch) {\r\n    // return Promise.any([remoteInstanceFetch, mastoSearchFetch])\r\n    //   .then(handleFulfill)\r\n    //   .catch(handleCatch);\r\n    // If mastoSearchFetch is fulfilled within 3s, return it, else return remoteInstanceFetch\r\n    const finalPromise = Promise.race([\r\n      mastoSearchFetch,\r\n      new Promise((resolve, reject) => setTimeout(reject, 3000)),\r\n    ]).catch(() => {\r\n      // If remoteInstanceFetch is fullfilled, return it, else return mastoSearchFetch\r\n      return remoteInstanceFetch.catch(() => mastoSearchFetch);\r\n    });\r\n    return finalPromise.then(handleFulfill).catch(handleCatch);\r\n  } else {\r\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\r\n  }\r\n}\r\n\r\nconst unfurlMastodonLink = throttle(_unfurlMastodonLink);\r\nexport default unfurlMastodonLink;\r\n","import { deepEqual } from 'fast-equals';\r\nimport { proxy, subscribe } from 'valtio';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport { api } from './api';\r\nimport isMastodonLinkMaybe from './isMastodonLinkMaybe';\r\nimport pmem from './pmem';\r\nimport rateLimit from './ratelimit';\r\nimport store from './store';\r\nimport unfurlMastodonLink from './unfurl-link';\r\n\r\nconst states = proxy({\r\n  appVersion: {},\r\n  // history: [],\r\n  prevLocation: null,\r\n  currentLocation: null,\r\n  statuses: {},\r\n  statusThreadNumber: {},\r\n  home: [],\r\n  // specialHome: [],\r\n  homeNew: [],\r\n  homeLast: null, // Last item in 'home' list\r\n  homeLastFetchTime: null,\r\n  notifications: [],\r\n  notificationsLast: null, // Last read notification\r\n  notificationsNew: [],\r\n  notificationsShowNew: false,\r\n  notificationsLastFetchTime: null,\r\n  reloadStatusPage: 0,\r\n  reloadGenericAccounts: {\r\n    id: null,\r\n    counter: 0,\r\n  },\r\n  spoilers: {},\r\n  spoilersMedia: {},\r\n  scrollPositions: {},\r\n  unfurledLinks: {},\r\n  statusQuotes: {},\r\n  statusFollowedTags: {},\r\n  statusReply: {},\r\n  accounts: {},\r\n  routeNotification: null,\r\n  // Modals\r\n  showCompose: false,\r\n  showSettings: false,\r\n  showAccount: false,\r\n  showAccounts: false,\r\n  showDrafts: false,\r\n  showMediaModal: false,\r\n  showShortcutsSettings: false,\r\n  showKeyboardShortcutsHelp: false,\r\n  showGenericAccounts: false,\r\n  showMediaAlt: false,\r\n  showEmbedModal: false,\r\n  // Shortcuts\r\n  shortcuts: [],\r\n  // Settings\r\n  settings: {\r\n    autoRefresh: false,\r\n    shortcutsViewMode: null,\r\n    shortcutsColumnsMode: false,\r\n    boostsCarousel: true,\r\n    contentTranslation: true,\r\n    contentTranslationTargetLanguage: null,\r\n    contentTranslationHideLanguages: [],\r\n    contentTranslationAutoInline: false,\r\n    mediaAltGenerator: false,\r\n    cloakMode: false,\r\n  },\r\n});\r\n\r\nexport default states;\r\n\r\nexport function initStates() {\r\n  // init all account based states\r\n  // all keys that uses store.account.get() should be initialized here\r\n  states.notificationsLast = store.account.get('notificationsLast') || null;\r\n  states.shortcuts = store.account.get('shortcuts') ?? [];\r\n  states.settings.autoRefresh =\r\n    store.account.get('settings-autoRefresh') ?? false;\r\n  states.settings.shortcutsViewMode =\r\n    store.account.get('settings-shortcutsViewMode') ?? null;\r\n  if (store.account.get('settings-shortcutsColumnsMode')) {\r\n    states.settings.shortcutsColumnsMode = true;\r\n  }\r\n  states.settings.boostsCarousel =\r\n    store.account.get('settings-boostsCarousel') ?? true;\r\n  states.settings.contentTranslation =\r\n    store.account.get('settings-contentTranslation') ?? true;\r\n  states.settings.contentTranslationTargetLanguage =\r\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\r\n  states.settings.contentTranslationHideLanguages =\r\n    store.account.get('settings-contentTranslationHideLanguages') || [];\r\n  states.settings.contentTranslationAutoInline =\r\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\r\n  states.settings.mediaAltGenerator =\r\n    store.account.get('settings-mediaAltGenerator') ?? false;\r\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\r\n}\r\n\r\nsubscribeKey(states, 'notificationsLast', (v) => {\r\n  console.log('CHANGE', v);\r\n  store.account.set('notificationsLast', states.notificationsLast);\r\n});\r\nsubscribe(states, (changes) => {\r\n  console.debug('STATES change', changes);\r\n  for (const [action, path, value, prevValue] of changes) {\r\n    if (path.join('.') === 'settings.autoRefresh') {\r\n      store.account.set('settings-autoRefresh', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.boostsCarousel') {\r\n      store.account.set('settings-boostsCarousel', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.shortcutsViewMode') {\r\n      store.account.set('settings-shortcutsViewMode', value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslation') {\r\n      store.account.set('settings-contentTranslation', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\r\n      store.account.set('settings-contentTranslationAutoInline', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\r\n      console.log('SET', value);\r\n      store.account.set('settings-contentTranslationTargetLanguage', value);\r\n    }\r\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\r\n      store.account.set(\r\n        'settings-contentTranslationHideLanguages',\r\n        states.settings.contentTranslationHideLanguages,\r\n      );\r\n    }\r\n    if (path.join('.') === 'settings.mediaAltGenerator') {\r\n      store.account.set('settings-mediaAltGenerator', !!value);\r\n    }\r\n    if (path?.[0] === 'shortcuts') {\r\n      store.account.set('shortcuts', states.shortcuts);\r\n    }\r\n    if (path.join('.') === 'settings.cloakMode') {\r\n      store.account.set('settings-cloakMode', !!value);\r\n    }\r\n  }\r\n});\r\n\r\nexport function hideAllModals() {\r\n  states.showCompose = false;\r\n  states.showSettings = false;\r\n  states.showAccount = false;\r\n  states.showAccounts = false;\r\n  states.showDrafts = false;\r\n  states.showMediaModal = false;\r\n  states.showShortcutsSettings = false;\r\n  states.showKeyboardShortcutsHelp = false;\r\n  states.showGenericAccounts = false;\r\n  states.showMediaAlt = false;\r\n  states.showEmbedModal = false;\r\n}\r\n\r\nexport function statusKey(id, instance) {\r\n  if (!id) return;\r\n  return instance ? `${instance}/${id}` : id;\r\n}\r\n\r\nexport function getStatus(statusID, instance) {\r\n  if (instance) {\r\n    const key = statusKey(statusID, instance);\r\n    return states.statuses[key];\r\n  }\r\n  return states.statuses[statusID];\r\n}\r\n\r\nexport function saveStatus(status, instance, opts) {\r\n  if (typeof instance === 'object') {\r\n    opts = instance;\r\n    instance = null;\r\n  }\r\n  const {\r\n    override = true,\r\n    skipThreading = false,\r\n    skipUnfurling = false,\r\n  } = opts || {};\r\n  if (!status) return;\r\n  const oldStatus = getStatus(status.id, instance);\r\n  if (!override && oldStatus) return;\r\n  if (deepEqual(status, oldStatus)) return;\r\n  queueMicrotask(() => {\r\n    const key = statusKey(status.id, instance);\r\n    if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\r\n    // if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\r\n    states.statuses[key] = status;\r\n    if (status.reblog?.id) {\r\n      const srKey = statusKey(status.reblog.id, instance);\r\n      states.statuses[srKey] = status.reblog;\r\n    }\r\n    if (status.quote?.id) {\r\n      const sKey = statusKey(status.quote.id, instance);\r\n      states.statuses[sKey] = status.quote;\r\n      states.statusQuotes[key] = [\r\n        {\r\n          id: status.quote.id,\r\n          instance,\r\n        },\r\n      ];\r\n    }\r\n  });\r\n\r\n  // THREAD TRAVERSER\r\n  if (!skipThreading) {\r\n    queueMicrotask(() => {\r\n      threadifyStatus(status.reblog || status, instance);\r\n    });\r\n  }\r\n\r\n  // UNFURLER\r\n  if (!skipUnfurling) {\r\n    queueMicrotask(() => {\r\n      unfurlStatus(status.reblog || status, instance);\r\n    });\r\n  }\r\n}\r\n\r\nfunction _threadifyStatus(status, propInstance) {\r\n  const { masto, instance } = api({ instance: propInstance });\r\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\r\n  let fetchIndex = 0;\r\n  async function traverse(status, index = 0) {\r\n    const { inReplyToId, inReplyToAccountId } = status;\r\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\r\n      return [status];\r\n    }\r\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\r\n      throw 'Not a thread';\r\n      // Possibly thread of replies by multiple people?\r\n    }\r\n    const key = statusKey(inReplyToId, instance);\r\n    let prevStatus = states.statuses[key];\r\n    if (!prevStatus) {\r\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\r\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\r\n      // prevStatus = await masto.v1.statuses.$.select(inReplyToId).fetch();\r\n      prevStatus = await fetchStatus(inReplyToId, masto);\r\n      saveStatus(prevStatus, instance, { skipThreading: true });\r\n    }\r\n    // Prepend so that first status in thread will be index 0\r\n    return [...(await traverse(prevStatus, ++index)), status];\r\n  }\r\n  return traverse(status)\r\n    .then((statuses) => {\r\n      if (statuses.length > 1) {\r\n        console.debug('THREAD', statuses);\r\n        statuses.forEach((status, index) => {\r\n          const key = statusKey(status.id, instance);\r\n          states.statusThreadNumber[key] = index + 1;\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e, status);\r\n    });\r\n}\r\nexport const threadifyStatus = rateLimit(_threadifyStatus, 100);\r\n\r\nconst fauxDiv = document.createElement('div');\r\nexport function unfurlStatus(status, instance) {\r\n  const { instance: currentInstance } = api();\r\n  const content = status?.content;\r\n  const hasLink = /<a/i.test(content);\r\n  if (hasLink) {\r\n    const sKey = statusKey(status?.id, instance);\r\n    fauxDiv.innerHTML = content;\r\n    const links = fauxDiv.querySelectorAll(\r\n      'a[href]:not(.u-url):not(.mention):not(.hashtag)',\r\n    );\r\n    [...links]\r\n      .filter((a) => {\r\n        const url = a.href;\r\n        const isPostItself = url === status.url || url === status.uri;\r\n        return !isPostItself && isMastodonLinkMaybe(url);\r\n      })\r\n      .forEach((a, i) => {\r\n        unfurlMastodonLink(currentInstance, a.href).then((result) => {\r\n          if (!result) return;\r\n          if (!sKey) return;\r\n          if (!Array.isArray(states.statusQuotes[sKey])) {\r\n            states.statusQuotes[sKey] = [];\r\n          }\r\n          if (!states.statusQuotes[sKey][i]) {\r\n            states.statusQuotes[sKey].splice(i, 0, result);\r\n          }\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nconst fetchStatus = pmem((statusID, masto) => {\r\n  return masto.v1.statuses.$select(statusID).fetch();\r\n});\r\n","import { useEffect, useRef } from 'preact/hooks';\r\n\r\nfunction useInterval(fn, delay, deps, immediate) {\r\n  const savedCallback = useRef(fn);\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn, deps]);\r\n\r\n  useEffect(() => {\r\n    if (!immediate || delay === null || delay === false) return;\r\n    savedCallback.current();\r\n  }, [immediate]);\r\n\r\n  useEffect(() => {\r\n    if (delay === null || delay === false) return;\r\n    const tick = () => savedCallback.current();\r\n    const id = setInterval(tick, delay);\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default function openCompose(opts) {\r\n  const url = new URL('/compose/', window.location);\r\n  const { width: screenWidth, height: screenHeight } = window.screen;\r\n  const left = Math.max(0, (screenWidth - 600) / 2);\r\n  const top = Math.max(0, (screenHeight - 450) / 2);\r\n  const width = Math.min(screenWidth, 600);\r\n  const height = Math.min(screenHeight, 450);\r\n  const winUID = opts?.uid || Math.random();\r\n  const newWin = window.open(\r\n    url,\r\n    'compose' + winUID,\r\n    `width=${width},height=${height},left=${left},top=${top}`,\r\n  );\r\n\r\n  if (newWin) {\r\n    // if (masto) {\r\n    //   newWin.masto = masto;\r\n    // }\r\n\r\n    newWin.__COMPOSE__ = opts;\r\n  } else {\r\n    alert('Looks like your browser is blocking popups.');\r\n  }\r\n\r\n  return newWin;\r\n}\r\n","export const ICONS = {\r\n  x: () => import('@iconify-icons/mingcute/close-line'),\r\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\r\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\r\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\r\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\r\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\r\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\r\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\r\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\r\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\r\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\r\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\r\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\r\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\r\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\r\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\r\n  message: () => import('@iconify-icons/mingcute/mail-line'),\r\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\r\n  comment2: () => import('@iconify-icons/mingcute/comment-2-line'),\r\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\r\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\r\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\r\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\r\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\r\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\r\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\r\n  at: () => import('@iconify-icons/mingcute/at-line'),\r\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\r\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\r\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\r\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\r\n  more2: () => import('@iconify-icons/mingcute/more-1-fill'),\r\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\r\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\r\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\r\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\r\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\r\n  reply: [\r\n    () => import('@iconify-icons/mingcute/share-forward-line'),\r\n    '180deg',\r\n    'horizontal',\r\n  ],\r\n  thread: () => import('@iconify-icons/mingcute/route-line'),\r\n  group: () => import('@iconify-icons/mingcute/group-line'),\r\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\r\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\r\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\r\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\r\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\r\n  info: () => import('@iconify-icons/mingcute/information-line'),\r\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\r\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\r\n  following: () => import('@iconify-icons/mingcute/walk-line'),\r\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\r\n  unpin: [() => import('@iconify-icons/mingcute/pin-line'), '180deg'],\r\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\r\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\r\n  history: () => import('@iconify-icons/mingcute/history-line'),\r\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\r\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\r\n  sparkles2: () => import('@iconify-icons/mingcute/sparkles-2-line'),\r\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\r\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\r\n  play: () => import('@iconify-icons/mingcute/play-fill'),\r\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\r\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\r\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\r\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n  unblock: [\r\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n    '180deg',\r\n  ],\r\n  flag: () => import('@iconify-icons/mingcute/flag-4-line'),\r\n  time: () => import('@iconify-icons/mingcute/time-line'),\r\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\r\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\r\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\r\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\r\n  react: () => import('@iconify-icons/mingcute/react-line'),\r\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\r\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\r\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\r\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\r\n  round: () => import('@iconify-icons/mingcute/round-fill'),\r\n  'arrow-up-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\r\n  'arrow-down-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\r\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\r\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\r\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\r\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\r\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\r\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\r\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\r\n  speak: () => import('@iconify-icons/mingcute/radar-line'),\r\n  building: () => import('@iconify-icons/mingcute/building-5-line'),\r\n  history: () => import('@iconify-icons/mingcute/history-2-line'),\r\n  document: () => import('@iconify-icons/mingcute/document-line'),\r\n  'arrows-right': () => import('@iconify-icons/mingcute/arrows-right-line'),\r\n};\r\n","import moize from 'moize';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\n\r\nimport { ICONS } from './ICONS';\r\n\r\nconst SIZES = {\r\n  s: 12,\r\n  m: 16,\r\n  l: 20,\r\n  xl: 24,\r\n  xxl: 32,\r\n};\r\n\r\nconst ICONDATA = {};\r\n\r\n// Memoize the dangerouslySetInnerHTML of the SVGs\r\nconst SVGICon = moize(\r\n  function ({ width, height, body, rotate, flip }) {\r\n    return (\r\n      <svg\r\n        viewBox={`0 0 ${width} ${height}`}\r\n        dangerouslySetInnerHTML={{ __html: body }}\r\n        style={{\r\n          transform: `${rotate ? `rotate(${rotate})` : ''} ${\r\n            flip ? `scaleX(-1)` : ''\r\n          }`,\r\n        }}\r\n      />\r\n    );\r\n  },\r\n  {\r\n    isShallowEqual: true,\r\n    maxSize: Object.keys(ICONS).length,\r\n    matchesArg: (cacheKeyArg, keyArg) =>\r\n      cacheKeyArg.icon === keyArg.icon && cacheKeyArg.body === keyArg.body,\r\n  },\r\n);\r\n\r\nfunction Icon({\r\n  icon,\r\n  size = 'm',\r\n  alt,\r\n  title,\r\n  class: className = '',\r\n  style = {},\r\n}) {\r\n  if (!icon) return null;\r\n\r\n  const iconSize = SIZES[size];\r\n  let iconBlock = ICONS[icon];\r\n  if (!iconBlock) {\r\n    console.warn(`Icon ${icon} not found`);\r\n    return null;\r\n  }\r\n\r\n  let rotate, flip;\r\n  if (Array.isArray(iconBlock)) {\r\n    [iconBlock, rotate, flip] = iconBlock;\r\n  }\r\n\r\n  const [iconData, setIconData] = useState(ICONDATA[icon]);\r\n  const currentIcon = useRef(icon);\r\n  useEffect(() => {\r\n    if (iconData && currentIcon.current === icon) return;\r\n    (async () => {\r\n      const iconB = await iconBlock();\r\n      setIconData(iconB.default);\r\n      ICONDATA[icon] = iconB.default;\r\n    })();\r\n    currentIcon.current = icon;\r\n  }, [icon]);\r\n\r\n  return (\r\n    <span\r\n      class={`icon ${className}`}\r\n      title={title || alt}\r\n      style={{\r\n        width: `${iconSize}px`,\r\n        height: `${iconSize}px`,\r\n        ...style,\r\n      }}\r\n    >\r\n      {iconData && (\r\n        // <svg\r\n        //   width={iconSize}\r\n        //   height={iconSize}\r\n        //   viewBox={`0 0 ${iconData.width} ${iconData.height}`}\r\n        //   dangerouslySetInnerHTML={{ __html: iconData.body }}\r\n        //   style={{\r\n        //     transform: `${rotate ? `rotate(${rotate})` : ''} ${\r\n        //       flip ? `scaleX(-1)` : ''\r\n        //     }`,\r\n        //   }}\r\n        // />\r\n        <SVGICon\r\n          icon={icon}\r\n          width={iconData.width}\r\n          height={iconData.height}\r\n          body={iconData.body}\r\n          rotate={rotate}\r\n          flip={flip}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Icon;\r\n","import { useEffect } from 'preact/hooks';\r\n\r\nfunction useCloseWatcher(fn, deps = []) {\r\n  if (!fn || typeof fn !== 'function') return;\r\n  useEffect(() => {\r\n    const watcher = new CloseWatcher();\r\n    watcher.addEventListener('close', fn);\r\n    return () => {\r\n      watcher.destroy();\r\n    };\r\n  }, deps);\r\n}\r\n\r\nexport default window.CloseWatcher ? useCloseWatcher : () => {};\r\n","import './modal.css';\r\n\r\nimport { createPortal } from 'preact/compat';\r\nimport { useEffect, useRef } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\nimport useCloseWatcher from '../utils/useCloseWatcher';\r\n\r\nconst $modalContainer = document.getElementById('modal-container');\r\n\r\nfunction Modal({ children, onClose, onClick, class: className }) {\r\n  if (!children) return null;\r\n\r\n  const modalRef = useRef();\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\r\n      if (focusElement) {\r\n        focusElement.focus();\r\n      }\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const supportsCloseWatcher = window.CloseWatcher;\r\n  const escRef = useHotkeys(\r\n    'esc',\r\n    () => {\r\n      setTimeout(() => {\r\n        onClose?.();\r\n      }, 0);\r\n    },\r\n    {\r\n      enabled: !supportsCloseWatcher && !!onClose,\r\n      // Using keyup and setTimeout above\r\n      // This will run \"later\" to prevent clash with esc handlers from other components\r\n      keydown: false,\r\n      keyup: true,\r\n    },\r\n    [onClose],\r\n  );\r\n  useCloseWatcher(onClose, [onClose]);\r\n\r\n  const Modal = (\r\n    <div\r\n      ref={(node) => {\r\n        modalRef.current = node;\r\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\r\n      }}\r\n      className={className}\r\n      onClick={(e) => {\r\n        onClick?.(e);\r\n        if (e.target === e.currentTarget) {\r\n          onClose?.(e);\r\n        }\r\n      }}\r\n      tabIndex=\"-1\"\r\n      onFocus={(e) => {\r\n        if (e.target === e.currentTarget) {\r\n          modalRef.current?.querySelector?.('[tabindex=\"-1\"]')?.focus?.();\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return createPortal(Modal, $modalContainer);\r\n\r\n  // return createPortal(children, $modalContainer);\r\n}\r\n\r\nexport default Modal;\r\n","import './loader.css';\r\n\r\nfunction Loader({ abrupt, hidden, ...props }) {\r\n  return (\r\n    <span\r\n      {...props}\r\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\r\n        hidden ? 'hidden' : ''\r\n      }`}\r\n    >\r\n      <span class=\"loader\" />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import './avatar.css';\r\n\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport mem from '../utils/mem';\r\n\r\nconst SIZES = {\r\n  s: 16,\r\n  m: 20,\r\n  l: 24,\r\n  xl: 32,\r\n  xxl: 50,\r\n  xxxl: 64,\r\n};\r\n\r\nconst alphaCache = {};\r\n\r\nconst canvas = window.OffscreenCanvas\r\n  ? new OffscreenCanvas(1, 1)\r\n  : document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d', {\r\n  willReadFrequently: true,\r\n});\r\n\r\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\r\n  size = SIZES[size] || size || SIZES.m;\r\n  const avatarRef = useRef();\r\n  const isMissing = /missing\\.png$/.test(url);\r\n  return (\r\n    <span\r\n      ref={avatarRef}\r\n      class={`avatar ${squircle ? 'squircle' : ''} ${\r\n        alphaCache[url] ? 'has-alpha' : ''\r\n      }`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n      }}\r\n      title={alt}\r\n      {...props}\r\n    >\r\n      {!!url && (\r\n        <img\r\n          src={url}\r\n          width={size}\r\n          height={size}\r\n          alt={alt}\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n          crossOrigin={\r\n            alphaCache[url] === undefined && !isMissing\r\n              ? 'anonymous'\r\n              : undefined\r\n          }\r\n          onError={(e) => {\r\n            if (e.target.crossOrigin) {\r\n              e.target.crossOrigin = null;\r\n              e.target.src = url;\r\n            }\r\n          }}\r\n          onLoad={(e) => {\r\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\r\n            if (alphaCache[url] !== undefined) return;\r\n            if (isMissing) return;\r\n            queueMicrotask(() => {\r\n              try {\r\n                // Check if image has alpha channel\r\n                const { width, height } = e.target;\r\n                if (canvas.width !== width) canvas.width = width;\r\n                if (canvas.height !== height) canvas.height = height;\r\n                ctx.drawImage(e.target, 0, 0);\r\n                const allPixels = ctx.getImageData(0, 0, width, height);\r\n                // At least 10% of pixels have alpha <= 128\r\n                const hasAlpha =\r\n                  allPixels.data.filter(\r\n                    (pixel, i) => i % 4 === 3 && pixel <= 128,\r\n                  ).length /\r\n                    (allPixels.data.length / 4) >\r\n                  0.1;\r\n                if (hasAlpha) {\r\n                  // console.log('hasAlpha', hasAlpha, allPixels.data);\r\n                  avatarRef.current.classList.add('has-alpha');\r\n                }\r\n                alphaCache[url] = hasAlpha;\r\n                ctx.clearRect(0, 0, width, height);\r\n              } catch (e) {\r\n                // Silent fail\r\n                alphaCache[url] = false;\r\n              }\r\n            });\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default mem(Avatar);\r\n","import { forwardRef } from 'preact/compat';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport states from '../utils/states';\r\n\r\n/* NOTES\r\n   =====\r\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\r\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\r\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\r\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\r\n*/\r\n\r\nconst Link = forwardRef((props, ref) => {\r\n  let routerLocation;\r\n  try {\r\n    routerLocation = useLocation();\r\n  } catch (e) {}\r\n  let hash = (location.hash || '').replace(/^#/, '').trim();\r\n  if (hash === '') hash = '/';\r\n  const { to, ...restProps } = props;\r\n\r\n  // Handle encodeURIComponent of searchParams values\r\n  if (!!hash && hash !== '/' && hash.includes('?')) {\r\n    try {\r\n      const parsedHash = new URL(hash, location.origin); // Fake base URL\r\n      if (parsedHash.searchParams.size) {\r\n        const searchParamsStr = Array.from(parsedHash.searchParams.entries())\r\n          .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n          .join('&');\r\n        hash = parsedHash.pathname + '?' + searchParamsStr;\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  const isActive = hash === to || decodeURIComponent(hash) === to;\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      href={`#${to}`}\r\n      {...restProps}\r\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\r\n      onClick={(e) => {\r\n        if (e.currentTarget?.parentNode?.closest('a')) {\r\n          // If this <a> is nested inside another <a>\r\n          e.stopPropagation();\r\n        }\r\n        if (routerLocation) states.prevLocation = routerLocation;\r\n        props.onClick?.(e);\r\n      }}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Link;\r\n","const root = document.documentElement;\r\nconst style = getComputedStyle(root);\r\nconst defaultBoundingBoxPadding = 8;\r\n\r\nlet safeAreaInsets = [0, 0, 0, 0];\r\nfunction getSafeAreaInsets() {\r\n  // Get safe area inset variables from root\r\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\r\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\r\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\r\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\r\n  safeAreaInsets = [\r\n    // top, right, bottom, left (clockwise)\r\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\r\n  ];\r\n}\r\nrequestAnimationFrame(getSafeAreaInsets);\r\n\r\nfunction safeBoundingBoxPadding(paddings = []) {\r\n  const str = safeAreaInsets\r\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\r\n    .join(' ');\r\n  // console.log(str);\r\n  return str;\r\n}\r\n\r\n// Update safe area insets when orientation or resize\r\nif (CSS.supports('top: env(safe-area-inset-top)')) {\r\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\r\n}\r\n\r\nexport default safeBoundingBoxPadding;\r\n","import { Menu } from '@szhsin/react-menu';\r\nimport { useWindowSize } from '@uidotdev/usehooks';\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\r\n\r\n// It's like Menu but with sensible defaults, bug fixes and improvements.\r\nfunction Menu2(props) {\r\n  const { containerProps, instanceRef: _instanceRef } = props;\r\n  const size = useWindowSize();\r\n  const instanceRef = _instanceRef?.current ? _instanceRef : useRef();\r\n\r\n  return (\r\n    <Menu\r\n      boundingBoxPadding={safeBoundingBoxPadding()}\r\n      repositionFlag={`${size.width}x${size.height}`}\r\n      unmountOnClose\r\n      {...props}\r\n      instanceRef={instanceRef}\r\n      containerProps={{\r\n        onClick: (e) => {\r\n          if (e.target === e.currentTarget) {\r\n            instanceRef.current?.closeMenu?.();\r\n          }\r\n          containerProps?.onClick?.(e);\r\n        },\r\n        ...containerProps,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Menu2;\r\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\r\nimport { cloneElement } from 'preact';\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport Menu2 from './menu2';\r\n\r\nfunction MenuConfirm({\r\n  subMenu = false,\r\n  confirm = true,\r\n  confirmLabel,\r\n  menuItemClassName,\r\n  menuFooter,\r\n  ...props\r\n}) {\r\n  const { children, onClick, ...restProps } = props;\r\n  if (!confirm) {\r\n    if (subMenu) return <MenuItem {...props} />;\r\n    if (onClick) {\r\n      return cloneElement(children, {\r\n        onClick,\r\n      });\r\n    }\r\n    return children;\r\n  }\r\n  const Parent = subMenu ? SubMenu : Menu2;\r\n  const menuRef = useRef();\r\n  return (\r\n    <Parent\r\n      instanceRef={menuRef}\r\n      openTrigger=\"clickOnly\"\r\n      direction=\"bottom\"\r\n      overflow=\"auto\"\r\n      gap={-8}\r\n      shift={8}\r\n      menuClassName=\"menu-emphasized\"\r\n      {...restProps}\r\n      menuButton={subMenu ? undefined : children}\r\n      label={subMenu ? children : undefined}\r\n      // Test fix for bug; submenus not opening on Android\r\n      itemProps={{\r\n        onPointerMove: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n        onPointerLeave: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n      }}\r\n    >\r\n      <MenuItem className={menuItemClassName} onClick={onClick}>\r\n        {confirmLabel}\r\n      </MenuItem>\r\n      {menuFooter}\r\n    </Parent>\r\n  );\r\n}\r\n\r\nexport default MenuConfirm;\r\n","import { memo } from 'preact/compat';\r\n\r\nfunction EmojiText({ text, emojis }) {\r\n  if (!text) return '';\r\n  if (!emojis?.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  const regex = new RegExp(\r\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\r\n    'g',\r\n  );\r\n  const elements = text.split(regex).map((word) => {\r\n    const emoji = emojis.find((e) => e.shortcode === word);\r\n    if (emoji) {\r\n      const { url, staticUrl } = emoji;\r\n      return (\r\n        <picture>\r\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\r\n          <img\r\n            key={word}\r\n            src={url}\r\n            alt={word}\r\n            class=\"shortcode-emoji emoji\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n          />\r\n        </picture>\r\n      );\r\n    }\r\n    return word;\r\n  });\r\n  return elements;\r\n}\r\n\r\nexport default memo(\r\n  EmojiText,\r\n  (oldProps, newProps) =>\r\n    oldProps.text === newProps.text &&\r\n    oldProps.emojis?.length === newProps.emojis?.length,\r\n);\r\n","import './name-text.css';\r\n\r\nimport { memo } from 'preact/compat';\r\n\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\n\r\nconst nameCollator = new Intl.Collator('en', {\r\n  sensitivity: 'base',\r\n});\r\n\r\nfunction NameText({\r\n  account,\r\n  instance,\r\n  showAvatar,\r\n  showAcct,\r\n  short,\r\n  external,\r\n  onClick,\r\n}) {\r\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\r\n    account;\r\n  let { username } = account;\r\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n\r\n  const trimmedUsername = username.toLowerCase().trim();\r\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\r\n  const shortenedDisplayName = trimmedDisplayName\r\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\r\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\r\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\r\n    /[^a-z0-9]/gi,\r\n    '',\r\n  ); // Remove non-alphanumeric characters\r\n\r\n  if (\r\n    !short &&\r\n    (trimmedUsername === trimmedDisplayName ||\r\n      trimmedUsername === shortenedDisplayName ||\r\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\r\n      nameCollator.compare(trimmedUsername, shortenedDisplayName) === 0)\r\n  ) {\r\n    username = null;\r\n  }\r\n\r\n  return (\r\n    <a\r\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (onClick) return onClick(e);\r\n        states.showAccount = {\r\n          account,\r\n          instance,\r\n        };\r\n      }}\r\n    >\r\n      {showAvatar && (\r\n        <>\r\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\r\n        </>\r\n      )}\r\n      {displayName && !short ? (\r\n        <>\r\n          <b>\r\n            <EmojiText text={displayName} emojis={emojis} />\r\n          </b>\r\n          {!showAcct && username && (\r\n            <>\r\n              {' '}\r\n              <i>@{username}</i>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : short ? (\r\n        <i>{username}</i>\r\n      ) : (\r\n        <b>{username}</b>\r\n      )}\r\n      {showAcct && (\r\n        <>\r\n          <br />\r\n          <i>\r\n            @{acct1}\r\n            <span class=\"ib\">{acct2}</span>\r\n          </i>\r\n        </>\r\n      )}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default memo(NameText, (oldProps, newProps) => {\r\n  // Only care about account.id, the other props usually don't change\r\n  const { account } = oldProps;\r\n  const { account: newAccount } = newProps;\r\n  return account?.acct === newAccount?.acct;\r\n});\r\n","// Twitter-style relative time component\r\n// Seconds = 1s\r\n// Minutes = 1m\r\n// Hours = 1h\r\n// Days = 1d\r\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\r\nimport dayjs from 'dayjs';\r\nimport dayjsTwitter from 'dayjs-twitter';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useMemo } from 'preact/hooks';\r\n\r\ndayjs.extend(dayjsTwitter);\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(relativeTime);\r\n\r\nconst dtf = new Intl.DateTimeFormat();\r\n\r\nexport default function RelativeTime({ datetime, format }) {\r\n  if (!datetime) return null;\r\n  const date = useMemo(() => dayjs(datetime), [datetime]);\r\n  const dateStr = useMemo(() => {\r\n    if (format === 'micro') {\r\n      // If date <= 1 day ago or day is within this year\r\n      const now = dayjs();\r\n      const dayDiff = now.diff(date, 'day');\r\n      if (dayDiff <= 1 || now.year() === date.year()) {\r\n        return date.twitter();\r\n      } else {\r\n        return dtf.format(date.toDate());\r\n      }\r\n    }\r\n    return date.fromNow();\r\n  }, [date, format]);\r\n  const dt = useMemo(() => date.toISOString(), [date]);\r\n  const title = useMemo(() => date.format('LLLL'), [date]);\r\n\r\n  return (\r\n    <time datetime={dt} title={title}>\r\n      {dateStr}\r\n    </time>\r\n  );\r\n}\r\n","import { match } from '@formatjs/intl-localematcher';\r\n\r\nimport mem from './mem';\r\n\r\nfunction _localeMatch(...args) {\r\n  // Wrap in try/catch because localeMatcher throws on invalid locales\r\n  try {\r\n    return match(...args);\r\n  } catch (e) {\r\n    const defaultLocale = args[2];\r\n    return defaultLocale || false;\r\n  }\r\n}\r\nconst localeMatch = mem(_localeMatch);\r\n\r\nexport default localeMatch;\r\n","import translationTargetLanguages from '../data/lingva-target-languages';\r\n\r\nimport localeMatch from './locale-match';\r\nimport states from './states';\r\n\r\nconst locales = [\r\n  new Intl.DateTimeFormat().resolvedOptions().locale,\r\n  ...navigator.languages,\r\n];\r\n\r\nconst localeTargetLanguages = localeMatch(\r\n  locales,\r\n  translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\r\n  'en',\r\n);\r\n\r\nfunction getTranslateTargetLanguage(fromSettings = false) {\r\n  if (fromSettings) {\r\n    const { contentTranslationTargetLanguage } = states.settings;\r\n    if (contentTranslationTargetLanguage) {\r\n      return contentTranslationTargetLanguage;\r\n    }\r\n  }\r\n  return localeTargetLanguages;\r\n}\r\n\r\nexport default getTranslateTargetLanguage;\r\n","export default function localeCode2Text(code) {\r\n  try {\r\n    return new Intl.DisplayNames(navigator.languages, {\r\n      type: 'language',\r\n    }).of(code);\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n","function emojifyText(text, emojis = []) {\r\n  if (!text) return '';\r\n  if (!emojis.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  // Replace shortcodes in text with emoji\r\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\r\n  emojis.forEach((emoji) => {\r\n    const { shortcode, staticUrl, url } = emoji;\r\n    text = text.replace(\r\n      new RegExp(`:${shortcode}:`, 'g'),\r\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\r\n    );\r\n  });\r\n  // console.log(text, emojis);\r\n  return text;\r\n}\r\n\r\nexport default emojifyText;\r\n","import emojifyText from './emojify-text';\r\nimport mem from './mem';\r\n\r\nconst fauxDiv = document.createElement('div');\r\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\r\n\r\nfunction _enhanceContent(content, opts = {}) {\r\n  const { emojis, postEnhanceDOM = () => {} } = opts;\r\n  let enhancedContent = content;\r\n  const dom = document.createElement('div');\r\n  dom.innerHTML = enhancedContent;\r\n  const hasLink = /<a/i.test(enhancedContent);\r\n  const hasCodeBlock = enhancedContent.includes('```');\r\n\r\n  if (hasLink) {\r\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\r\n    // E.g. `note` in `account`\r\n    const noTargetBlankLinks = dom.querySelectorAll('a:not([target=\"_blank\"])');\r\n    noTargetBlankLinks.forEach((link) => {\r\n      link.setAttribute('target', '_blank');\r\n    });\r\n\r\n    // Remove all classes except `u-url`, `mention`, `hashtag`\r\n    const links = dom.querySelectorAll('a[class]');\r\n    links.forEach((link) => {\r\n      link.classList.forEach((c) => {\r\n        if (!whitelistLinkClasses.includes(c)) {\r\n          link.classList.remove(c);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Add 'has-url-text' to all links that contains a url\r\n  if (hasLink) {\r\n    const links = dom.querySelectorAll('a[href]');\r\n    links.forEach((link) => {\r\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\r\n        link.classList.add('has-url-text');\r\n        shortenLink(link);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Spanify un-spanned mentions\r\n  if (hasLink) {\r\n    const links = dom.querySelectorAll('a[href]');\r\n    const usernames = [];\r\n    links.forEach((link) => {\r\n      const text = link.innerText.trim();\r\n      const hasChildren = link.querySelector('*');\r\n      // If text looks like @username@domain, then it's a mention\r\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\r\n        // Only show @username\r\n        const [_, username, domain] = text.split('@');\r\n        if (!hasChildren) {\r\n          if (\r\n            !usernames.some(([u]) => u === username) ||\r\n            usernames.some(([u, d]) => u === username && d === domain)\r\n          ) {\r\n            link.innerHTML = `@<span>${username}</span>`;\r\n            usernames.push([username, domain]);\r\n          } else {\r\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\r\n          }\r\n        }\r\n        link.classList.add('mention');\r\n      }\r\n      // If text looks like #hashtag, then it's a hashtag\r\n      if (/^#[^#]+$/g.test(text)) {\r\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\r\n        link.classList.add('mention', 'hashtag');\r\n      }\r\n    });\r\n  }\r\n\r\n  // EMOJIS\r\n  // ======\r\n  // Convert :shortcode: to <img />\r\n  let textNodes;\r\n  if (enhancedContent.includes(':')) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (emojis) {\r\n        html = emojifyText(html, emojis);\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      // const nodes = [...fauxDiv.childNodes];\r\n      node.replaceWith(...fauxDiv.childNodes);\r\n    });\r\n  }\r\n\r\n  // CODE BLOCKS\r\n  // ===========\r\n  // Convert ```code``` to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const blocks = [...dom.querySelectorAll('p')].filter((p) =>\r\n      /^```[^]+```$/g.test(p.innerText.trim()),\r\n    );\r\n    blocks.forEach((block) => {\r\n      const pre = document.createElement('pre');\r\n      // Replace <br /> with newlines\r\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\r\n      block.replaceWith(pre);\r\n    });\r\n  }\r\n\r\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const paragraphs = [...dom.querySelectorAll('p')];\r\n    // Filter out paragraphs with ``` in beginning only\r\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\r\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\r\n    codeBlocks.forEach((block) => {\r\n      const nextParagraphs = [block];\r\n      let hasCodeBlock = false;\r\n      let currentBlock = block;\r\n      while (currentBlock.nextElementSibling) {\r\n        const next = currentBlock.nextElementSibling;\r\n        if (next && next.tagName === 'P') {\r\n          if (/```$/g.test(next.innerText)) {\r\n            nextParagraphs.push(next);\r\n            hasCodeBlock = true;\r\n            break;\r\n          } else {\r\n            nextParagraphs.push(next);\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n        currentBlock = next;\r\n      }\r\n      if (hasCodeBlock) {\r\n        const pre = document.createElement('pre');\r\n        nextParagraphs.forEach((p) => {\r\n          // Replace <br /> with newlines\r\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n        });\r\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\r\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\r\n        block.replaceWith(pre);\r\n        nextParagraphs.forEach((p) => p.remove());\r\n      }\r\n    });\r\n  }\r\n\r\n  // INLINE CODE\r\n  // ===========\r\n  // Convert `code` to <code>code</code>\r\n  if (enhancedContent.includes('`')) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/`[^`]+`/g.test(html)) {\r\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      // const nodes = [...fauxDiv.childNodes];\r\n      node.replaceWith(...fauxDiv.childNodes);\r\n    });\r\n  }\r\n\r\n  // TWITTER USERNAMES\r\n  // =================\r\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\r\n  if (/twitter\\.com/i.test(enhancedContent)) {\r\n    textNodes = extractTextNodes(dom, {\r\n      rejectFilter: ['A'],\r\n    });\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\r\n        html = html.replaceAll(\r\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\r\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\r\n        );\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      // const nodes = [...fauxDiv.childNodes];\r\n      node.replaceWith(...fauxDiv.childNodes);\r\n    });\r\n  }\r\n\r\n  // HASHTAG STUFFING\r\n  // ================\r\n  // Get the <p> that contains a lot of hashtags, add a class to it\r\n  if (enhancedContent.includes('#')) {\r\n    let prevIndex = null;\r\n    const hashtagStuffedParagraphs = [...dom.querySelectorAll('p')].filter(\r\n      (p, index) => {\r\n        let hashtagCount = 0;\r\n        for (let i = 0; i < p.childNodes.length; i++) {\r\n          const node = p.childNodes[i];\r\n\r\n          if (node.nodeType === Node.TEXT_NODE) {\r\n            const text = node.textContent.trim();\r\n            if (text !== '') {\r\n              return false;\r\n            }\r\n          } else if (node.tagName === 'BR') {\r\n            // Ignore <br />\r\n          } else if (node.tagName === 'A') {\r\n            const linkText = node.textContent.trim();\r\n            if (!linkText || !linkText.startsWith('#')) {\r\n              return false;\r\n            } else {\r\n              hashtagCount++;\r\n            }\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n        // Only consider \"stuffing\" if:\r\n        // - there are more than 3 hashtags\r\n        // - there are more than 1 hashtag in adjacent paragraphs\r\n        if (hashtagCount > 3) {\r\n          prevIndex = index;\r\n          return true;\r\n        }\r\n        if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\r\n          prevIndex = index;\r\n          return true;\r\n        }\r\n      },\r\n    );\r\n    if (hashtagStuffedParagraphs?.length) {\r\n      hashtagStuffedParagraphs.forEach((p) => {\r\n        p.classList.add('hashtag-stuffing');\r\n        p.title = p.innerText;\r\n      });\r\n    }\r\n  }\r\n\r\n  if (postEnhanceDOM) {\r\n    queueMicrotask(() => postEnhanceDOM(dom));\r\n    // postEnhanceDOM(dom); // mutate dom\r\n  }\r\n\r\n  enhancedContent = dom.innerHTML;\r\n\r\n  return enhancedContent;\r\n}\r\nconst enhanceContent = mem(_enhanceContent);\r\n\r\nconst defaultRejectFilter = [\r\n  // Document metadata\r\n  'STYLE',\r\n  // Image and multimedia\r\n  'IMG',\r\n  'VIDEO',\r\n  'AUDIO',\r\n  'AREA',\r\n  'MAP',\r\n  'TRACK',\r\n  // Embedded content\r\n  'EMBED',\r\n  'IFRAME',\r\n  'OBJECT',\r\n  'PICTURE',\r\n  'PORTAL',\r\n  'SOURCE',\r\n  // SVG and MathML\r\n  'SVG',\r\n  'MATH',\r\n  // Scripting\r\n  'CANVAS',\r\n  'NOSCRIPT',\r\n  'SCRIPT',\r\n  // Forms\r\n  'INPUT',\r\n  'OPTION',\r\n  'TEXTAREA',\r\n  // Web Components\r\n  'SLOT',\r\n  'TEMPLATE',\r\n];\r\nconst defaultRejectFilterMap = Object.fromEntries(\r\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\r\n);\r\n\r\nconst URL_PREFIX_REGEX = /^(https?:\\/\\/(www\\.)?|xmpp:)/;\r\nconst URL_DISPLAY_LENGTH = 30;\r\n// Similar to https://github.com/mastodon/mastodon/blob/1666b1955992e16f4605b414c6563ca25b3a3f18/app/lib/text_formatter.rb#L54-L69\r\nfunction shortenLink(link) {\r\n  if (!link || link.querySelector?.('*')) {\r\n    return;\r\n  }\r\n  try {\r\n    const url = link.innerText.trim();\r\n    const prefix = (url.match(URL_PREFIX_REGEX) || [])[0] || '';\r\n    if (!prefix) return;\r\n    const displayURL = url.slice(\r\n      prefix.length,\r\n      prefix.length + URL_DISPLAY_LENGTH,\r\n    );\r\n    const suffix = url.slice(prefix.length + URL_DISPLAY_LENGTH);\r\n    const cutoff = url.slice(prefix.length).length > URL_DISPLAY_LENGTH;\r\n    link.innerHTML = `<span class=\"invisible\">${prefix}</span><span class=${\r\n      cutoff ? 'ellipsis' : ''\r\n    }>${displayURL}</span><span class=\"invisible\">${suffix}</span>`;\r\n  } catch (e) {}\r\n}\r\n\r\nfunction extractTextNodes(dom, opts = {}) {\r\n  const textNodes = [];\r\n  const rejectFilterMap = Object.assign(\r\n    {},\r\n    defaultRejectFilterMap,\r\n    opts.rejectFilter?.reduce((acc, cur) => {\r\n      acc[cur] = true;\r\n      return acc;\r\n    }, {}),\r\n  );\r\n  const walk = document.createTreeWalker(\r\n    dom,\r\n    NodeFilter.SHOW_TEXT,\r\n    {\r\n      acceptNode(node) {\r\n        if (rejectFilterMap[node.parentNode.nodeName]) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        return NodeFilter.FILTER_ACCEPT;\r\n      },\r\n    },\r\n    false,\r\n  );\r\n  let node;\r\n  while ((node = walk.nextNode())) {\r\n    textNodes.push(node);\r\n  }\r\n  return textNodes;\r\n}\r\n\r\nexport default enhanceContent;\r\n","import mem from './mem';\r\n\r\nconst div = document.createElement('div');\r\nfunction getHTMLText(html) {\r\n  if (!html) return '';\r\n  div.innerHTML = html\r\n    .replace(/<\\/p>/g, '</p>\\n\\n')\r\n    .replace(/<\\/li>/g, '</li>\\n');\r\n  div.querySelectorAll('br').forEach((br) => {\r\n    br.replaceWith('\\n');\r\n  });\r\n\r\n  // MASTODON-SPECIFIC classes\r\n  // Remove .invisible\r\n  div.querySelectorAll('.invisible').forEach((el) => {\r\n    el.remove();\r\n  });\r\n  // Add … at end of .ellipsis\r\n  div.querySelectorAll('.ellipsis').forEach((el) => {\r\n    el.append('...');\r\n  });\r\n\r\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\r\n}\r\n\r\nexport default mem(getHTMLText);\r\n","import states from './states';\r\n\r\nfunction handleContentLinks(opts) {\r\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\r\n  return (e) => {\r\n    let { target } = e;\r\n    target = target.closest('a');\r\n    if (!target) return;\r\n\r\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\r\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\r\n      return;\r\n    }\r\n\r\n    const prevText = target.previousSibling?.textContent;\r\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\r\n    const textStartsWithAt = target.innerText.startsWith('@');\r\n    if (\r\n      (target.classList.contains('u-url') && textStartsWithAt) ||\r\n      (textBeforeLinkIsAt && !textStartsWithAt)\r\n    ) {\r\n      const targetText = (\r\n        target.querySelector('span') || target\r\n      ).innerText.trim();\r\n      const username = targetText.replace(/^@/, '');\r\n      const url = target.getAttribute('href');\r\n      const mention = mentions.find(\r\n        (mention) =>\r\n          mention.username === username ||\r\n          mention.acct === username ||\r\n          mention.url === url,\r\n      );\r\n      if (mention) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.showAccount = {\r\n          account: mention.acct,\r\n          instance,\r\n        };\r\n      } else if (!/^http/i.test(targetText)) {\r\n        console.log('mention not found', targetText);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const href = target.getAttribute('href');\r\n        states.showAccount = {\r\n          account: href,\r\n          instance,\r\n        };\r\n      }\r\n    } else if (!previewMode) {\r\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\r\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const tag = target.innerText.replace(/^#/, '').trim();\r\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\r\n        console.log({ hashURL });\r\n        location.hash = hashURL;\r\n      } else if (\r\n        states.unfurledLinks[target.href]?.url &&\r\n        statusURL !== target.href\r\n      ) {\r\n        // If unfurled AND not self-referential\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.prevLocation = {\r\n          pathname: location.hash.replace(/^#/, ''),\r\n        };\r\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default handleContentLinks;\r\n","import mem from './mem';\r\n\r\nconst { locale } = new Intl.DateTimeFormat().resolvedOptions();\r\n\r\nconst _DateTimeFormat = (opts) => {\r\n  const { dateYear, hideTime, formatOpts } = opts || {};\r\n  const currentYear = new Date().getFullYear();\r\n  return Intl.DateTimeFormat(locale, {\r\n    // Show year if not current year\r\n    year: dateYear === currentYear ? undefined : 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    // Hide time if requested\r\n    hour: hideTime ? undefined : 'numeric',\r\n    minute: hideTime ? undefined : 'numeric',\r\n    ...formatOpts,\r\n  });\r\n};\r\nconst DateTimeFormat = mem(_DateTimeFormat);\r\n\r\nfunction niceDateTime(date, dtfOpts) {\r\n  if (!(date instanceof Date)) {\r\n    date = new Date(date);\r\n  }\r\n  const DTF = DateTimeFormat({\r\n    dateYear: date.getFullYear(),\r\n    ...dtfOpts,\r\n  });\r\n  const dateText = DTF.format(date);\r\n  return dateText;\r\n}\r\n\r\nexport default niceDateTime;\r\n","const { locale } = Intl.NumberFormat().resolvedOptions();\r\nconst shortenNumber = Intl.NumberFormat(locale, {\r\n  notation: 'compact',\r\n}).format;\r\nexport default shortenNumber;\r\n","import './account-block.css';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\n\r\nfunction AccountBlock({\r\n  skeleton,\r\n  account,\r\n  avatarSize = 'xl',\r\n  useAvatarStatic = false,\r\n  instance,\r\n  external,\r\n  internal,\r\n  onClick,\r\n  showActivity = false,\r\n  showStats = false,\r\n  accountInstance,\r\n  hideDisplayName = false,\r\n  relationship = {},\r\n  excludeRelationshipAttrs = [],\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"account-block skeleton\">\r\n        <Avatar size={avatarSize} />\r\n        <span>\r\n          <b>████████</b>\r\n          <br />\r\n          <span class=\"account-block-acct\">@██████</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!account) {\r\n    return null;\r\n  }\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const {\r\n    id,\r\n    acct,\r\n    avatar,\r\n    avatarStatic,\r\n    displayName,\r\n    username,\r\n    emojis,\r\n    url,\r\n    statusesCount,\r\n    lastStatusAt,\r\n    bot,\r\n    fields,\r\n    note,\r\n    group,\r\n    followersCount,\r\n    createdAt,\r\n  } = account;\r\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n  if (accountInstance) {\r\n    acct2 = `@${accountInstance}`;\r\n  }\r\n\r\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\r\n\r\n  const excludedRelationship = {};\r\n  for (const r in relationship) {\r\n    if (!excludeRelationshipAttrs.includes(r)) {\r\n      excludedRelationship[r] = relationship[r];\r\n    }\r\n  }\r\n  const hasRelationship =\r\n    excludedRelationship.following ||\r\n    excludedRelationship.followedBy ||\r\n    excludedRelationship.requested;\r\n\r\n  return (\r\n    <a\r\n      class=\"account-block\"\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        if (onClick) return onClick(e);\r\n        if (internal) {\r\n          // navigate(`/${instance}/a/${id}`);\r\n          location.hash = `/${instance}/a/${id}`;\r\n        } else {\r\n          states.showAccount = {\r\n            account,\r\n            instance,\r\n          };\r\n        }\r\n      }}\r\n    >\r\n      <Avatar\r\n        url={useAvatarStatic ? avatarStatic : avatar || avatarStatic}\r\n        size={avatarSize}\r\n        squircle={bot}\r\n      />\r\n      <span class=\"account-block-content\">\r\n        {!hideDisplayName && (\r\n          <>\r\n            {displayName ? (\r\n              <b>\r\n                <EmojiText text={displayName} emojis={emojis} />\r\n              </b>\r\n            ) : (\r\n              <b>{username}</b>\r\n            )}\r\n          </>\r\n        )}{' '}\r\n        <span class=\"account-block-acct\">\r\n          @{acct1}\r\n          <wbr />\r\n          {acct2}\r\n        </span>\r\n        {showActivity && (\r\n          <>\r\n            <br />\r\n            <small class=\"last-status-at insignificant\">\r\n              Posts: {statusesCount}\r\n              {!!lastStatusAt && (\r\n                <>\r\n                  {' '}\r\n                  &middot; Last posted:{' '}\r\n                  {niceDateTime(lastStatusAt, {\r\n                    hideTime: true,\r\n                  })}\r\n                </>\r\n              )}\r\n            </small>\r\n          </>\r\n        )}\r\n        {showStats && (\r\n          <div class=\"account-block-stats\">\r\n            {bot && (\r\n              <>\r\n                <span class=\"tag collapsed\">\r\n                  <Icon icon=\"bot\" /> Automated\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!group && (\r\n              <>\r\n                <span class=\"tag collapsed\">\r\n                  <Icon icon=\"group\" /> Group\r\n                </span>\r\n              </>\r\n            )}\r\n            {hasRelationship && (\r\n              <div key={relationship.id} class=\"shazam-container-horizontal\">\r\n                <div class=\"shazam-container-inner\">\r\n                  {excludedRelationship.following &&\r\n                  excludedRelationship.followedBy ? (\r\n                    <span class=\"tag minimal\">Mutual</span>\r\n                  ) : excludedRelationship.requested ? (\r\n                    <span class=\"tag minimal\">Requested</span>\r\n                  ) : excludedRelationship.following ? (\r\n                    <span class=\"tag minimal\">Following</span>\r\n                  ) : excludedRelationship.followedBy ? (\r\n                    <span class=\"tag minimal\">Follows you</span>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!!followersCount && (\r\n              <span class=\"ib\">\r\n                {shortenNumber(followersCount)}{' '}\r\n                {followersCount === 1 ? 'follower' : 'followers'}\r\n              </span>\r\n            )}\r\n            {!!verifiedField && (\r\n              <span class=\"verified-field\">\r\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\r\n                <span\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: enhanceContent(verifiedField.value, { emojis }),\r\n                  }}\r\n                />\r\n              </span>\r\n            )}\r\n            {!bot &&\r\n              !group &&\r\n              !hasRelationship &&\r\n              !followersCount &&\r\n              !verifiedField &&\r\n              !!createdAt && (\r\n                <span class=\"created-at\">\r\n                  Joined{' '}\r\n                  <time datetime={createdAt}>\r\n                    {niceDateTime(createdAt, {\r\n                      hideTime: true,\r\n                    })}\r\n                  </time>\r\n                </span>\r\n              )}\r\n          </div>\r\n        )}\r\n      </span>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default AccountBlock;\r\n","import { satisfies } from 'compare-versions';\r\n\r\nimport features from '../data/features.json';\r\n\r\nimport { getCurrentInstance } from './store-utils';\r\n\r\nconst supportsCache = {};\r\n\r\nfunction supports(feature) {\r\n  try {\r\n    const { version, domain } = getCurrentInstance();\r\n    const key = `${domain}-${feature}`;\r\n    if (supportsCache[key]) return supportsCache[key];\r\n    const range = features[feature];\r\n    if (!range) return false;\r\n    return (supportsCache[key] = satisfies(version, range, {\r\n      includePrerelease: true,\r\n      loose: true,\r\n    }));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default supports;\r\n","import './translation-block.css';\r\n\r\nimport pRetry from 'p-retry';\r\nimport pThrottle from 'p-throttle';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\n\r\nimport sourceLanguages from '../data/lingva-source-languages';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport localeCode2Text from '../utils/localeCode2Text';\r\nimport pmem from '../utils/pmem';\r\n\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\n\r\nconst { PHANPY_LINGVA_INSTANCES } = import.meta.env;\r\nconst LINGVA_INSTANCES = PHANPY_LINGVA_INSTANCES\r\n  ? PHANPY_LINGVA_INSTANCES.split(/\\s+/)\r\n  : [];\r\n\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 2000,\r\n});\r\n\r\nlet currentLingvaInstance = 0;\r\n\r\nfunction _lingvaTranslate(text, source, target) {\r\n  console.log('TRANSLATE', text, source, target);\r\n  const fetchCall = () => {\r\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\r\n    return fetch(\r\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\r\n        text,\r\n      )}`,\r\n    )\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(res.statusText);\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        return {\r\n          provider: 'lingva',\r\n          content: res.translation,\r\n          detectedSourceLanguage: res.info?.detectedSource,\r\n          info: res.info,\r\n        };\r\n      });\r\n  };\r\n  return pRetry(fetchCall, {\r\n    retries: 3,\r\n    onFailedAttempt: (e) => {\r\n      currentLingvaInstance =\r\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\r\n      console.log(\r\n        'Retrying translation with another instance',\r\n        currentLingvaInstance,\r\n      );\r\n    },\r\n  });\r\n  // return masto.v1.statuses.$select(id).translate({\r\n  //   lang: DEFAULT_LANG,\r\n  // });\r\n}\r\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\r\nconst lingvaTranslate = pmem(_lingvaTranslate, {\r\n  maxAge: TRANSLATED_MAX_AGE,\r\n});\r\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\r\n  // I know, this is double-layered memoization\r\n  maxAge: TRANSLATED_MAX_AGE,\r\n});\r\n\r\nfunction TranslationBlock({\r\n  forceTranslate,\r\n  sourceLanguage,\r\n  onTranslate,\r\n  text = '',\r\n  mini,\r\n}) {\r\n  const targetLang = getTranslateTargetLanguage(true);\r\n  const [uiState, setUIState] = useState('default');\r\n  const [pronunciationContent, setPronunciationContent] = useState(null);\r\n  const [translatedContent, setTranslatedContent] = useState(null);\r\n  const [detectedLang, setDetectedLang] = useState(null);\r\n  const detailsRef = useRef();\r\n\r\n  const sourceLangText = sourceLanguage\r\n    ? localeCode2Text(sourceLanguage)\r\n    : null;\r\n  const targetLangText = localeCode2Text(targetLang);\r\n  const apiSourceLang = useRef('auto');\r\n\r\n  if (!onTranslate) {\r\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\r\n  }\r\n\r\n  const translate = async () => {\r\n    setUIState('loading');\r\n    try {\r\n      const { content, detectedSourceLanguage, provider, error, ...props } =\r\n        await onTranslate(text, apiSourceLang.current, targetLang);\r\n      if (content) {\r\n        if (detectedSourceLanguage) {\r\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\r\n          setDetectedLang(detectedLangText);\r\n        }\r\n        if (provider === 'lingva') {\r\n          const pronunciation = props?.info?.pronunciation?.query;\r\n          if (pronunciation) {\r\n            setPronunciationContent(pronunciation);\r\n          }\r\n        }\r\n        setTranslatedContent(content);\r\n        setUIState('default');\r\n        if (!mini && content.trim() !== text.trim()) {\r\n          detailsRef.current.open = true;\r\n          detailsRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'nearest',\r\n          });\r\n        }\r\n      } else {\r\n        if (error) console.error(error);\r\n        setUIState('error');\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      setUIState('error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (forceTranslate) {\r\n      translate();\r\n    }\r\n  }, [forceTranslate]);\r\n\r\n  if (mini) {\r\n    if (\r\n      !!translatedContent &&\r\n      translatedContent.trim() !== text.trim() &&\r\n      detectedLang !== targetLangText\r\n    ) {\r\n      return (\r\n        <div class=\"shazam-container\">\r\n          <div class=\"shazam-container-inner\">\r\n            <div class=\"status-translation-block-mini\">\r\n              <Icon\r\n                icon=\"translate\"\r\n                alt={`Auto-translated from ${sourceLangText}`}\r\n              />\r\n              <output\r\n                lang={targetLang}\r\n                dir=\"auto\"\r\n                title={pronunciationContent || ''}\r\n              >\r\n                {translatedContent}\r\n              </output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      class=\"status-translation-block\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <details ref={detailsRef}>\r\n        <summary>\r\n          <button\r\n            type=\"button\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              detailsRef.current.open = !detailsRef.current.open;\r\n              if (uiState === 'loading') return;\r\n              if (!translatedContent) translate();\r\n            }}\r\n          >\r\n            <Icon icon=\"translate\" />{' '}\r\n            <span>\r\n              {uiState === 'loading'\r\n                ? 'Translating…'\r\n                : sourceLanguage && sourceLangText && !detectedLang\r\n                ? `Translate from ${sourceLangText}`\r\n                : `Translate`}\r\n            </span>\r\n          </button>\r\n        </summary>\r\n        <div class=\"translated-block\">\r\n          <div class=\"translation-info insignificant\">\r\n            <select\r\n              class=\"translated-source-select\"\r\n              disabled={uiState === 'loading'}\r\n              onChange={(e) => {\r\n                apiSourceLang.current = e.target.value;\r\n                translate();\r\n              }}\r\n            >\r\n              {sourceLanguages.map((l) => (\r\n                <option value={l.code}>\r\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\r\n                </option>\r\n              ))}\r\n            </select>{' '}\r\n            <span>→ {targetLangText}</span>\r\n            <Loader abrupt hidden={uiState !== 'loading'} />\r\n          </div>\r\n          {uiState === 'error' ? (\r\n            <p class=\"ui-state\">Failed to translate</p>\r\n          ) : (\r\n            !!translatedContent && (\r\n              <>\r\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\r\n                  {translatedContent}\r\n                </output>\r\n                {!!pronunciationContent && (\r\n                  <output\r\n                    class=\"translated-pronunciation-content\"\r\n                    tabIndex={-1}\r\n                    onClick={(e) => {\r\n                      e.target.classList.toggle('expand');\r\n                    }}\r\n                  >\r\n                    {pronunciationContent}\r\n                  </output>\r\n                )}\r\n              </>\r\n            )\r\n          )}\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LINGVA_INSTANCES?.length ? TranslationBlock : () => null;\r\n","import {\r\n  clear,\r\n  createStore,\r\n  del,\r\n  delMany,\r\n  get,\r\n  getMany,\r\n  keys,\r\n  set,\r\n} from 'idb-keyval';\r\n\r\nconst draftsStore = createStore('drafts-db', 'drafts-store');\r\n\r\n// Add additonal `draftsStore` parameter to all methods\r\n\r\nconst drafts = {\r\n  set: (key, val) => set(key, val, draftsStore),\r\n  get: (key) => get(key, draftsStore),\r\n  getMany: (keys) => getMany(keys, draftsStore),\r\n  del: (key) => del(key, draftsStore),\r\n  delMany: (keys) => delMany(keys, draftsStore),\r\n  clear: () => clear(draftsStore),\r\n  keys: () => keys(draftsStore),\r\n};\r\n\r\nexport default {\r\n  drafts,\r\n};\r\n","export default {\r\n  public: 'earth',\r\n  unlisted: 'group',\r\n  private: 'lock',\r\n  direct: 'message',\r\n};\r\n","import { useState } from 'preact/hooks';\r\n\r\nimport shortenNumber from '../utils/shorten-number';\r\n\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\nimport RelativeTime from './relative-time';\r\n\r\nexport default function Poll({\r\n  poll,\r\n  lang,\r\n  readOnly,\r\n  refresh = () => {},\r\n  votePoll = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const {\r\n    expired,\r\n    expiresAt,\r\n    id,\r\n    multiple,\r\n    options,\r\n    ownVotes,\r\n    voted,\r\n    votersCount,\r\n    votesCount,\r\n    emojis,\r\n  } = poll;\r\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\r\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\r\n  // https://stackoverflow.com/a/56718027/20838\r\n  // useEffect(() => {\r\n  //   let timeout;\r\n  //   if (!expired && expiresAtDate) {\r\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\r\n  //     if (ms > 0) {\r\n  //       timeout = setTimeout(() => {\r\n  //         setUIState('loading');\r\n  //         (async () => {\r\n  //           // await refresh();\r\n  //           setUIState('default');\r\n  //         })();\r\n  //       }, ms);\r\n  //     }\r\n  //   }\r\n  //   return () => {\r\n  //     clearTimeout(timeout);\r\n  //   };\r\n  // }, [expired, expiresAtDate]);\r\n\r\n  const pollVotesCount = votersCount || votesCount;\r\n  let roundPrecision = 0;\r\n\r\n  if (pollVotesCount <= 1000) {\r\n    roundPrecision = 0;\r\n  } else if (pollVotesCount <= 10000) {\r\n    roundPrecision = 1;\r\n  } else if (pollVotesCount <= 100000) {\r\n    roundPrecision = 2;\r\n  }\r\n\r\n  const [showResults, setShowResults] = useState(false);\r\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\r\n\r\n  return (\r\n    <div\r\n      lang={lang}\r\n      dir=\"auto\"\r\n      class={`poll ${readOnly ? 'read-only' : ''} ${\r\n        uiState === 'loading' ? 'loading' : ''\r\n      }`}\r\n    >\r\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\r\n        <>\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title, votesCount: optionVotesCount } = option;\r\n              const percentage = pollVotesCount\r\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\r\n                    roundPrecision,\r\n                  )\r\n                : 0; // check if current poll choice is the leading one\r\n\r\n              const isLeading =\r\n                optionVotesCount > 0 &&\r\n                optionVotesCount ===\r\n                  Math.max(...options.map((o) => o.votesCount));\r\n              return (\r\n                <div\r\n                  key={`${i}-${title}-${optionVotesCount}`}\r\n                  class={`poll-option poll-result ${\r\n                    isLeading ? 'poll-option-leading' : ''\r\n                  }`}\r\n                  style={{\r\n                    '--percentage': `${percentage}%`,\r\n                  }}\r\n                >\r\n                  <div class=\"poll-option-title\">\r\n                    <span>\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                    {voted && ownVotes.includes(i) && (\r\n                      <>\r\n                        {' '}\r\n                        <Icon icon=\"check-circle\" />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    class=\"poll-option-votes\"\r\n                    title={`${optionVotesCount} vote${\r\n                      optionVotesCount === 1 ? '' : 's'\r\n                    }`}\r\n                  >\r\n                    {percentage}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!expired && !voted && (\r\n            <button\r\n              class=\"poll-vote-button plain2\"\r\n              disabled={uiState === 'loading'}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setShowResults(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\r\n            </button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const formData = new FormData(form);\r\n            const choices = [];\r\n            formData.forEach((value, key) => {\r\n              if (key === 'poll') {\r\n                choices.push(value);\r\n              }\r\n            });\r\n            if (!choices.length) return;\r\n            setUIState('loading');\r\n            await votePoll(choices);\r\n            setUIState('default');\r\n          }}\r\n        >\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title } = option;\r\n              return (\r\n                <div class=\"poll-option\">\r\n                  <label class=\"poll-label\">\r\n                    <input\r\n                      type={multiple ? 'checkbox' : 'radio'}\r\n                      name=\"poll\"\r\n                      value={i}\r\n                      disabled={uiState === 'loading'}\r\n                      readOnly={readOnly}\r\n                    />\r\n                    <span class=\"poll-option-title\">\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!readOnly && (\r\n            <button\r\n              class=\"poll-vote-button\"\r\n              type=\"submit\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              Vote\r\n            </button>\r\n          )}\r\n        </form>\r\n      )}\r\n      <p class=\"poll-meta\">\r\n        {!expired && !readOnly && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            style={{\r\n              marginLeft: -8,\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setUIState('loading');\r\n\r\n              (async () => {\r\n                await refresh();\r\n                setUIState('default');\r\n              })();\r\n            }}\r\n            title=\"Refresh\"\r\n          >\r\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\r\n          </button>\r\n        )}\r\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setShowResults(!showResults);\r\n            }}\r\n            title={showResults ? 'Hide results' : 'Show results'}\r\n          >\r\n            <Icon\r\n              icon={showResults ? 'eye-open' : 'eye-close'}\r\n              alt={showResults ? 'Hide results' : 'Show results'}\r\n            />{' '}\r\n          </button>\r\n        )}\r\n        {!expired && !readOnly && ' '}\r\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\r\n        {votesCount === 1 ? '' : 's'}\r\n        {!!votersCount && votersCount !== votesCount && (\r\n          <>\r\n            {' '}\r\n            &bull; <span title={votersCount}>\r\n              {shortenNumber(votersCount)}\r\n            </span>{' '}\r\n            voter\r\n            {votersCount === 1 ? '' : 's'}\r\n          </>\r\n        )}{' '}\r\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\r\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\r\n      </p>{' '}\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'preact';\r\n\r\nconst FilterContext = createContext();\r\nexport default FilterContext;\r\n","import mem from './mem';\r\nimport store from './store';\r\n\r\nfunction _isFiltered(filtered, filterContext) {\r\n  if (!filtered?.length) return false;\r\n  const appliedFilters = filtered.filter((f) => {\r\n    const { filter } = f;\r\n    const hasContext = filter.context.includes(filterContext);\r\n    if (!hasContext) return false;\r\n    if (!filter.expiresAt) return hasContext;\r\n    return new Date(filter.expiresAt) > new Date();\r\n  });\r\n  if (!appliedFilters.length) return false;\r\n  const isHidden = appliedFilters.some((f) => f.filter.filterAction === 'hide');\r\n  if (isHidden)\r\n    return {\r\n      action: 'hide',\r\n    };\r\n  const isWarn = appliedFilters.some((f) => f.filter.filterAction === 'warn');\r\n  if (isWarn) {\r\n    const filterTitles = appliedFilters.map((f) => f.filter.title);\r\n    return {\r\n      action: 'warn',\r\n      titles: filterTitles,\r\n      titlesStr: filterTitles.join(' • '),\r\n    };\r\n  }\r\n  return false;\r\n}\r\nexport const isFiltered = mem(_isFiltered);\r\n\r\nexport function filteredItem(item, filterContext, currentAccountID) {\r\n  const { filtered } = item;\r\n  if (!filtered?.length) return true;\r\n  const isSelf = currentAccountID && item.account?.id === currentAccountID;\r\n  if (isSelf) return true;\r\n  const filterState = isFiltered(filtered, filterContext);\r\n  if (!filterState) return true;\r\n  if (filterState.action === 'hide') return false;\r\n  // item._filtered = filterState;\r\n  return true;\r\n}\r\nexport function filteredItems(items, filterContext) {\r\n  if (!items?.length) return [];\r\n  if (!filterContext) return items;\r\n  const currentAccountID = store.session.get('currentAccount');\r\n  return items.filter((item) =>\r\n    filteredItem(item, filterContext, currentAccountID),\r\n  );\r\n}\r\n","const div = document.createElement('div');\r\nexport default function htmlContentLength(html) {\r\n  if (!html) return 0;\r\n  div.innerHTML = html;\r\n  // .invisible spans for links\r\n  // e.g. <span class=\"invisible\">https://</span>mastodon.social\r\n  div.querySelectorAll('.invisible').forEach((el) => {\r\n    el.remove();\r\n  });\r\n  return div.innerText.length;\r\n}\r\n","export const supportsTTS = 'speechSynthesis' in window;\r\n\r\nexport function speak(text, lang) {\r\n  if (!supportsTTS) return;\r\n  try {\r\n    if (speechSynthesis.speaking) {\r\n      speechSynthesis.cancel();\r\n    }\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    if (lang) utterance.lang = lang;\r\n    speechSynthesis.speak(utterance);\r\n  } catch (e) {\r\n    alert(e);\r\n  }\r\n}\r\n","import getHTMLText from './getHTMLText';\r\n\r\nfunction statusPeek(status) {\r\n  const { spoilerText, content, poll, mediaAttachments } = status;\r\n  let text = '';\r\n  if (spoilerText?.trim()) {\r\n    text += spoilerText;\r\n  } else {\r\n    text += getHTMLText(content);\r\n  }\r\n  text = text.trim();\r\n  if (poll) {\r\n    text += ' 📊';\r\n  }\r\n  if (mediaAttachments?.length) {\r\n    text +=\r\n      ' ' +\r\n      mediaAttachments\r\n        .map(\r\n          (m) =>\r\n            ({\r\n              image: '🖼️',\r\n              gifv: '🎞️',\r\n              video: '📹',\r\n              audio: '🎵',\r\n              unknown: '',\r\n            }[m.type] || ''),\r\n        )\r\n        .join('');\r\n  }\r\n  return text;\r\n}\r\n\r\nexport default statusPeek;\r\n","import { useRef } from 'preact/hooks';\r\nimport { useThrottledCallback } from 'use-debounce';\r\nimport useResizeObserver from 'use-resize-observer';\r\n\r\nexport default function useTruncated({ className = 'truncated' } = {}) {\r\n  const ref = useRef();\r\n  const onResize = useThrottledCallback(({ height }) => {\r\n    if (ref.current) {\r\n      const { scrollHeight } = ref.current;\r\n      let truncated = scrollHeight > height;\r\n      if (truncated) {\r\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\r\n        const computedHeight = parseInt(maxHeight || _height, 10);\r\n        truncated = scrollHeight > computedHeight;\r\n      }\r\n      ref.current.classList.toggle(className, truncated);\r\n    }\r\n  }, 300);\r\n  useResizeObserver({\r\n    ref,\r\n    box: 'border-box',\r\n    onResize,\r\n  });\r\n  return ref;\r\n}\r\n","import { getBlurHashAverageColor } from 'fast-blurhash';\r\nimport { Fragment } from 'preact';\r\nimport {\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\r\n\r\nimport mem from '../utils/mem';\r\nimport states from '../utils/states';\r\n\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport { formatDuration } from './status';\r\n\r\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\r\n\r\n/*\r\nMedia type\r\n===\r\nunknown = unsupported or unrecognized file type\r\nimage = Static image\r\ngifv = Looping, soundless animation\r\nvideo = Video clip\r\naudio = Audio track\r\n*/\r\n\r\nconst dataAltLabel = 'ALT';\r\nconst AltBadge = (props) => {\r\n  const { alt, lang, index, ...rest } = props;\r\n  if (!alt || !alt.trim()) return null;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      class=\"alt-badge clickable\"\r\n      {...rest}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        states.showMediaAlt = {\r\n          alt,\r\n          lang,\r\n        };\r\n      }}\r\n      title=\"Media description\"\r\n    >\r\n      {dataAltLabel}\r\n      {!!index && <sup>{index}</sup>}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst MEDIA_CAPTION_LIMIT = 140;\r\nexport const isMediaCaptionLong = mem((caption) =>\r\n  caption?.length\r\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\r\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\r\n    : false,\r\n);\r\n\r\nfunction Media({\r\n  class: className = '',\r\n  media,\r\n  to,\r\n  lang,\r\n  showOriginal,\r\n  autoAnimate,\r\n  showCaption,\r\n  altIndex,\r\n  onClick = () => {},\r\n}) {\r\n  const {\r\n    blurhash,\r\n    description,\r\n    meta,\r\n    previewRemoteUrl,\r\n    previewUrl,\r\n    remoteUrl,\r\n    url,\r\n    type,\r\n  } = media;\r\n  const { original = {}, small, focus } = meta || {};\r\n\r\n  const width = showOriginal ? original?.width : small?.width;\r\n  const height = showOriginal ? original?.height : small?.height;\r\n  const mediaURL = showOriginal ? url : previewUrl || url;\r\n  const remoteMediaURL = showOriginal\r\n    ? remoteUrl\r\n    : previewRemoteUrl || remoteUrl;\r\n  const orientation = width >= height ? 'landscape' : 'portrait';\r\n\r\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\r\n\r\n  const videoRef = useRef();\r\n\r\n  let focalPosition;\r\n  if (focus) {\r\n    // Convert focal point to CSS background position\r\n    // Formula from jquery-focuspoint\r\n    // x = -1, y = 1 => 0% 0%\r\n    // x = 0, y = 0 => 50% 50%\r\n    // x = 1, y = -1 => 100% 100%\r\n    const x = ((focus.x + 1) / 2) * 100;\r\n    const y = ((1 - focus.y) / 2) * 100;\r\n    focalPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\r\n  }\r\n\r\n  const mediaRef = useRef();\r\n  const onUpdate = useCallback(({ x, y, scale }) => {\r\n    const { current: media } = mediaRef;\r\n\r\n    if (media) {\r\n      const value = make3dTransformValue({ x, y, scale });\r\n\r\n      if (scale === 1) {\r\n        media.style.removeProperty('transform');\r\n      } else {\r\n        media.style.setProperty('transform', value);\r\n      }\r\n\r\n      media.closest('.media-zoom').style.touchAction =\r\n        scale <= 1.01 ? 'pan-x' : '';\r\n    }\r\n  }, []);\r\n\r\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\r\n  const quickPinchZoomProps = {\r\n    enabled: pinchZoomEnabled,\r\n    draggableUnZoomed: false,\r\n    inertiaFriction: 0.9,\r\n    doubleTapZoomOutOnMaxScale: true,\r\n    containerProps: {\r\n      className: 'media-zoom',\r\n      style: {\r\n        overflow: 'visible',\r\n        //   width: 'inherit',\r\n        //   height: 'inherit',\r\n        //   justifyContent: 'inherit',\r\n        //   alignItems: 'inherit',\r\n        //   display: 'inherit',\r\n      },\r\n    },\r\n    onUpdate,\r\n  };\r\n\r\n  const Parent = useMemo(\r\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\r\n    [to],\r\n  );\r\n\r\n  const remoteMediaURLObj = remoteMediaURL ? new URL(remoteMediaURL) : null;\r\n  const isVideoMaybe =\r\n    type === 'unknown' &&\r\n    remoteMediaURLObj &&\r\n    /\\.(mp4|m4r|m4v|mov|webm)$/i.test(remoteMediaURLObj.pathname);\r\n  const isAudioMaybe =\r\n    type === 'unknown' &&\r\n    remoteMediaURLObj &&\r\n    /\\.(mp3|ogg|wav|m4a|m4p|m4b)$/i.test(remoteMediaURLObj.pathname);\r\n  const isImage =\r\n    type === 'image' ||\r\n    (type === 'unknown' && previewUrl && !isVideoMaybe && !isAudioMaybe);\r\n\r\n  const parentRef = useRef();\r\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\r\n  useLayoutEffect(() => {\r\n    if (!isImage) return;\r\n    if (!showOriginal) return;\r\n    if (!parentRef.current) return;\r\n    const { offsetWidth, offsetHeight } = parentRef.current;\r\n    const smaller = width < offsetWidth && height < offsetHeight;\r\n    if (smaller) setImageSmallerThanParent(smaller);\r\n  }, [width, height]);\r\n\r\n  const maxAspectHeight =\r\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\r\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\r\n  const averageColorStyle = {\r\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n  };\r\n  const mediaStyles =\r\n    width && height\r\n      ? {\r\n          '--width': `${width}px`,\r\n          '--height': `${height}px`,\r\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\r\n          '--aspectWidth': `${\r\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\r\n          }px`,\r\n          aspectRatio: `${width} / ${height}`,\r\n          ...averageColorStyle,\r\n        }\r\n      : {\r\n          ...averageColorStyle,\r\n        };\r\n\r\n  const longDesc = isMediaCaptionLong(description);\r\n  const showInlineDesc =\r\n    !!showCaption && !showOriginal && !!description && !longDesc;\r\n  const Figure = !showInlineDesc\r\n    ? Fragment\r\n    : (props) => {\r\n        const { children, ...restProps } = props;\r\n        return (\r\n          <figure {...restProps}>\r\n            {children}\r\n            <figcaption\r\n              class=\"media-caption\"\r\n              lang={lang}\r\n              dir=\"auto\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                states.showMediaAlt = {\r\n                  alt: description,\r\n                  lang,\r\n                };\r\n              }}\r\n            >\r\n              {description}\r\n            </figcaption>\r\n          </figure>\r\n        );\r\n      };\r\n\r\n  if (isImage) {\r\n    // Note: type: unknown might not have width/height\r\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\r\n\r\n    useLayoutEffect(() => {\r\n      if (!isSafari) return;\r\n      if (!showOriginal) return;\r\n      (async () => {\r\n        try {\r\n          await fetch(mediaURL, { mode: 'no-cors' });\r\n          mediaRef.current.src = mediaURL;\r\n        } catch (e) {\r\n          // Ignore\r\n        }\r\n      })();\r\n    }, [mediaURL]);\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          ref={parentRef}\r\n          class={`media media-image ${className}`}\r\n          onClick={onClick}\r\n          data-orientation={orientation}\r\n          data-has-alt={!showInlineDesc}\r\n          style={\r\n            showOriginal\r\n              ? {\r\n                  backgroundImage: `url(${previewUrl})`,\r\n                  backgroundSize: imageSmallerThanParent\r\n                    ? `${width}px ${height}px`\r\n                    : undefined,\r\n                  ...averageColorStyle,\r\n                }\r\n              : mediaStyles\r\n          }\r\n        >\r\n          {showOriginal ? (\r\n            <QuickPinchZoom {...quickPinchZoomProps}>\r\n              <img\r\n                ref={mediaRef}\r\n                src={mediaURL}\r\n                alt={description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"eager\"\r\n                decoding=\"sync\"\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.closest('.media-zoom').style.display = '';\r\n                  setPinchZoomEnabled(true);\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n            </QuickPinchZoom>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={mediaURL}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n                style={{\r\n                  // backgroundColor:\r\n                  //   rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n                  // backgroundPosition: focalBackgroundPosition || 'center',\r\n                  // Duration based on width or height in pixels\r\n                  objectPosition: focalPosition || 'center',\r\n                  // 100px per second (rough estimate)\r\n                  // Clamp between 5s and 120s\r\n                  '--anim-duration': `${Math.min(\r\n                    Math.max(Math.max(width, height) / 100, 5),\r\n                    120,\r\n                  )}s`,\r\n                }}\r\n                onLoad={(e) => {\r\n                  // e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.dataset.loaded = true;\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\r\n    const shortDuration = original.duration < 31;\r\n    const isGIF = type === 'gifv' && shortDuration;\r\n    // If GIF is too long, treat it as a video\r\n    const loopable = original.duration < 61;\r\n    const formattedDuration = formatDuration(original.duration);\r\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\r\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\r\n    const showProgress = original.duration > 5;\r\n\r\n    const videoHTML = `\r\n    <video\r\n      src=\"${url}\"\r\n      poster=\"${previewUrl}\"\r\n      width=\"${width}\"\r\n      height=\"${height}\"\r\n      data-orientation=\"${orientation}\"\r\n      preload=\"auto\"\r\n      autoplay\r\n      muted=\"${isGIF}\"\r\n      ${isGIF ? '' : 'controls'}\r\n      playsinline\r\n      loop=\"${loopable}\"\r\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\r\n      ${\r\n        isGIF && showProgress\r\n          ? \"ontimeupdate=\\\"this.closest('.media-gif') && this.closest('.media-gif').style.setProperty('--progress', `${~~((this.currentTime / this.duration) * 100)}%`)\\\"\"\r\n          : ''\r\n      }\r\n    ></video>\r\n  `;\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\r\n            autoGIFAnimate ? 'media-contain' : ''\r\n          } ${hoverAnimate ? 'media-hover-animate' : ''}`}\r\n          data-orientation={orientation}\r\n          data-formatted-duration={\r\n            !showOriginal ? formattedDuration : undefined\r\n          }\r\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\r\n          data-has-alt={!showInlineDesc}\r\n          // style={{\r\n          //   backgroundColor:\r\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n          // }}\r\n          style={!showOriginal && mediaStyles}\r\n          onClick={(e) => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n            onClick(e);\r\n          }}\r\n          onMouseEnter={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onMouseLeave={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onBlur={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n        >\r\n          {showOriginal || autoGIFAnimate ? (\r\n            isGIF && showOriginal ? (\r\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\r\n                <div\r\n                  ref={mediaRef}\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: videoHTML,\r\n                  }}\r\n                />\r\n              </QuickPinchZoom>\r\n            ) : (\r\n              <div\r\n                class=\"video-container\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: videoHTML,\r\n                }}\r\n              />\r\n            )\r\n          ) : isGIF ? (\r\n            <video\r\n              ref={videoRef}\r\n              src={url}\r\n              poster={previewUrl}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              preload=\"auto\"\r\n              // controls\r\n              playsinline\r\n              loop\r\n              muted\r\n              onTimeUpdate={\r\n                showProgress\r\n                  ? (e) => {\r\n                      const { target } = e;\r\n                      const container = target?.closest('.media-gif');\r\n                      if (container) {\r\n                        const percentage =\r\n                          (target.currentTime / target.duration) * 100;\r\n                        container.style.setProperty(\r\n                          '--progress',\r\n                          `${percentage}%`,\r\n                        );\r\n                      }\r\n                    }\r\n                  : undefined\r\n              }\r\n            />\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={previewUrl}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n              />\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          {!showOriginal && !showInlineDesc && (\r\n            <AltBadge alt={description} lang={lang} index={altIndex} />\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'audio' || isAudioMaybe) {\r\n    const formattedDuration = formatDuration(original.duration);\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media media-audio ${className}`}\r\n          data-formatted-duration={\r\n            !showOriginal ? formattedDuration : undefined\r\n          }\r\n          data-has-alt={!showInlineDesc}\r\n          onClick={onClick}\r\n          style={!showOriginal && mediaStyles}\r\n        >\r\n          {showOriginal ? (\r\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\r\n          ) : previewUrl ? (\r\n            <img\r\n              src={previewUrl}\r\n              alt={showInlineDesc ? '' : description}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              loading=\"lazy\"\r\n              onError={(e) => {\r\n                try {\r\n                  // Remove self if broken\r\n                  e.target?.remove?.();\r\n                } catch (e) {}\r\n              }}\r\n            />\r\n          ) : null}\r\n          {!showOriginal && (\r\n            <>\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Media;\r\n","import { FocusableItem } from '@szhsin/react-menu';\r\n\r\nimport Link from './link';\r\n\r\nfunction MenuLink(props) {\r\n  return (\r\n    <FocusableItem>\r\n      {({ ref, closeMenu }) => (\r\n        <Link\r\n          {...props}\r\n          ref={ref}\r\n          onClick={({ detail }) =>\r\n            closeMenu(detail === 0 ? 'Enter' : undefined)\r\n          }\r\n        />\r\n      )}\r\n    </FocusableItem>\r\n  );\r\n}\r\n\r\nexport default MenuLink;\r\n","import './status.css';\r\n\r\nimport '@justinribeiro/lite-youtube';\r\nimport {\r\n  ControlledMenu,\r\n  Menu,\r\n  MenuDivider,\r\n  MenuHeader,\r\n  MenuItem,\r\n} from '@szhsin/react-menu';\r\nimport { decodeBlurHash, getBlurHashAverageColor } from 'fast-blurhash';\r\nimport { shallowEqual } from 'fast-equals';\r\nimport { memo } from 'preact/compat';\r\nimport {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { useLongPress } from 'use-long-press';\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport AccountBlock from '../components/account-block';\r\nimport EmojiText from '../components/emoji-text';\r\nimport Loader from '../components/loader';\r\nimport Menu2 from '../components/menu2';\r\nimport MenuConfirm from '../components/menu-confirm';\r\nimport Modal from '../components/modal';\r\nimport NameText from '../components/name-text';\r\nimport Poll from '../components/poll';\r\nimport { api } from '../utils/api';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport FilterContext from '../utils/filter-context';\r\nimport { isFiltered } from '../utils/filters';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport getHTMLText from '../utils/getHTMLText';\r\nimport handleContentLinks from '../utils/handle-content-links';\r\nimport htmlContentLength from '../utils/html-content-length';\r\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\r\nimport localeMatch from '../utils/locale-match';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport openCompose from '../utils/open-compose';\r\nimport pmem from '../utils/pmem';\r\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport showToast from '../utils/show-toast';\r\nimport { speak, supportsTTS } from '../utils/speech';\r\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\r\nimport statusPeek from '../utils/status-peek';\r\nimport store from '../utils/store';\r\nimport unfurlMastodonLink from '../utils/unfurl-link';\r\nimport useTruncated from '../utils/useTruncated';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport Media from './media';\r\nimport { isMediaCaptionLong } from './media';\r\nimport MenuLink from './menu-link';\r\nimport RelativeTime from './relative-time';\r\nimport TranslationBlock from './translation-block';\r\n\r\nconst SHOW_COMMENT_COUNT_LIMIT = 280;\r\nconst INLINE_TRANSLATE_LIMIT = 140;\r\n\r\nfunction fetchAccount(id, masto) {\r\n  return masto.v1.accounts.$select(id).fetch();\r\n}\r\nconst memFetchAccount = pmem(fetchAccount);\r\n\r\nconst visibilityText = {\r\n  public: 'Public',\r\n  unlisted: 'Unlisted',\r\n  private: 'Followers only',\r\n  direct: 'Private mention',\r\n};\r\n\r\nconst isIOS =\r\n  window.ontouchstart !== undefined &&\r\n  /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\nconst REACTIONS_LIMIT = 80;\r\n\r\nfunction getPollText(poll) {\r\n  if (!poll?.options?.length) return '';\r\n  return `📊:\\n${poll.options\r\n    .map(\r\n      (option) =>\r\n        `- ${option.title}${\r\n          option.votesCount >= 0 ? ` (${option.votesCount})` : ''\r\n        }`,\r\n    )\r\n    .join('\\n')}`;\r\n}\r\nfunction getPostText(status) {\r\n  const { spoilerText, content, poll } = status;\r\n  return (\r\n    (spoilerText ? `${spoilerText}\\n\\n` : '') +\r\n    getHTMLText(content) +\r\n    getPollText(poll)\r\n  );\r\n}\r\n\r\nconst PostContent = memo(\r\n  ({ post, instance, previewMode }) => {\r\n    const { content, emojis, language, mentions, url } = post;\r\n    return (\r\n      <div\r\n        lang={language}\r\n        dir=\"auto\"\r\n        class=\"inner-content\"\r\n        onClick={handleContentLinks({\r\n          mentions,\r\n          instance,\r\n          previewMode,\r\n          statusURL: url,\r\n        })}\r\n        dangerouslySetInnerHTML={{\r\n          __html: enhanceContent(content, {\r\n            emojis,\r\n            postEnhanceDOM: (dom) => {\r\n              // Remove target=\"_blank\" from links\r\n              dom.querySelectorAll('a.u-url[target=\"_blank\"]').forEach((a) => {\r\n                if (!/http/i.test(a.innerText.trim())) {\r\n                  a.removeAttribute('target');\r\n                }\r\n              });\r\n            },\r\n          }),\r\n        }}\r\n      />\r\n    );\r\n  },\r\n  (oldProps, newProps) => {\r\n    const { post: oldPost } = oldProps;\r\n    const { post: newPost } = newProps;\r\n    return oldPost.content === newPost.content;\r\n  },\r\n);\r\n\r\nfunction Status({\r\n  statusID,\r\n  status,\r\n  instance: propInstance,\r\n  size = 'm',\r\n  contentTextWeight,\r\n  readOnly,\r\n  enableCommentHint,\r\n  withinContext,\r\n  skeleton,\r\n  enableTranslate,\r\n  forceTranslate: _forceTranslate,\r\n  previewMode,\r\n  // allowFilters,\r\n  onMediaClick,\r\n  quoted,\r\n  onStatusLinkClick = () => {},\r\n  showFollowedTags,\r\n  allowContextMenu,\r\n  showActionsBar,\r\n  showReplyParent,\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"status skeleton\">\r\n        <Avatar size=\"xxl\" />\r\n        <div class=\"container\">\r\n          <div class=\"meta\">███ ████████</div>\r\n          <div class=\"content-container\">\r\n            <div class=\"content\">\r\n              <p>████ ████████</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const { masto, instance, authenticated } = api({ instance: propInstance });\r\n  const { instance: currentInstance } = api();\r\n  const sameInstance = instance === currentInstance;\r\n\r\n  let sKey = statusKey(statusID || status?.id, instance);\r\n  const snapStates = useSnapshot(states);\r\n  if (!status) {\r\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\r\n    sKey = statusKey(status?.id, instance);\r\n  }\r\n  if (!status) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    account: {\r\n      acct,\r\n      avatar,\r\n      avatarStatic,\r\n      id: accountId,\r\n      url: accountURL,\r\n      displayName,\r\n      username,\r\n      emojis: accountEmojis,\r\n      bot,\r\n      group,\r\n    },\r\n    id,\r\n    repliesCount,\r\n    reblogged,\r\n    reblogsCount,\r\n    favourited,\r\n    favouritesCount,\r\n    bookmarked,\r\n    poll,\r\n    muted,\r\n    sensitive,\r\n    spoilerText,\r\n    visibility, // public, unlisted, private, direct\r\n    language,\r\n    editedAt,\r\n    filtered,\r\n    card,\r\n    createdAt,\r\n    inReplyToId,\r\n    inReplyToAccountId,\r\n    content,\r\n    mentions,\r\n    mediaAttachments,\r\n    reblog,\r\n    uri,\r\n    url,\r\n    emojis,\r\n    tags,\r\n    // Non-API props\r\n    _deleted,\r\n    _pinned,\r\n    // _filtered,\r\n  } = status;\r\n\r\n  const currentAccount = useMemo(() => {\r\n    return store.session.get('currentAccount');\r\n  }, []);\r\n  const isSelf = useMemo(() => {\r\n    return currentAccount && currentAccount === accountId;\r\n  }, [accountId, currentAccount]);\r\n\r\n  const filterContext = useContext(FilterContext);\r\n  const filterInfo =\r\n    !isSelf && !readOnly && !previewMode && isFiltered(filtered, filterContext);\r\n\r\n  if (filterInfo?.action === 'hide') {\r\n    return null;\r\n  }\r\n\r\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\r\n\r\n  const debugHover = (e) => {\r\n    if (e.shiftKey) {\r\n      console.log({\r\n        ...status,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (/*allowFilters && */ size !== 'l' && filterInfo) {\r\n    return (\r\n      <FilteredStatus\r\n        status={status}\r\n        filterInfo={filterInfo}\r\n        instance={instance}\r\n        containerProps={{\r\n          onMouseEnter: debugHover,\r\n        }}\r\n        showFollowedTags\r\n      />\r\n    );\r\n  }\r\n\r\n  const createdAtDate = new Date(createdAt);\r\n  const editedAtDate = new Date(editedAt);\r\n\r\n  let inReplyToAccountRef = mentions?.find(\r\n    (mention) => mention.id === inReplyToAccountId,\r\n  );\r\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\r\n    inReplyToAccountRef = { url: accountURL, username, displayName };\r\n  }\r\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\r\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\r\n    const account = states.accounts[inReplyToAccountId];\r\n    if (account) {\r\n      setInReplyToAccount(account);\r\n    } else {\r\n      memFetchAccount(inReplyToAccountId, masto)\r\n        .then((account) => {\r\n          setInReplyToAccount(account);\r\n          states.accounts[account.id] = account;\r\n        })\r\n        .catch((e) => {});\r\n    }\r\n  }\r\n  const mentionSelf =\r\n    inReplyToAccountId === currentAccount ||\r\n    mentions?.find((mention) => mention.id === currentAccount);\r\n\r\n  const readingExpandSpoilers = useMemo(() => {\r\n    const prefs = store.account.get('preferences') || {};\r\n    return !!prefs['reading:expand:spoilers'];\r\n  }, []);\r\n  const readingExpandMedia = useMemo(() => {\r\n    // default | show_all | hide_all\r\n    // Ignore hide_all because it means hide *ALL* media including non-sensitive ones\r\n    const prefs = store.account.get('preferences') || {};\r\n    return prefs['reading:expand:media'] || 'default';\r\n  }, []);\r\n  // FOR TESTING:\r\n  // const readingExpandSpoilers = true;\r\n  // const readingExpandMedia = 'show_all';\r\n  const showSpoiler =\r\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id];\r\n  const showSpoilerMedia =\r\n    previewMode ||\r\n    readingExpandMedia === 'show_all' ||\r\n    !!snapStates.spoilersMedia[id];\r\n\r\n  if (reblog) {\r\n    // If has statusID, means useItemID (cached in states)\r\n\r\n    if (group) {\r\n      return (\r\n        <div\r\n          data-state-post-id={sKey}\r\n          class=\"status-group\"\r\n          onMouseEnter={debugHover}\r\n        >\r\n          <div class=\"status-pre-meta\">\r\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\r\n            <NameText account={status.account} instance={instance} showAvatar />\r\n          </div>\r\n          <Status\r\n            status={statusID ? null : reblog}\r\n            statusID={statusID ? reblog.id : null}\r\n            instance={instance}\r\n            size={size}\r\n            contentTextWeight={contentTextWeight}\r\n            readOnly={readOnly}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        data-state-post-id={sKey}\r\n        class=\"status-reblog\"\r\n        onMouseEnter={debugHover}\r\n      >\r\n        <div class=\"status-pre-meta\">\r\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\r\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\r\n          <span>boosted</span>\r\n        </div>\r\n        <Status\r\n          status={statusID ? null : reblog}\r\n          statusID={statusID ? reblog.id : null}\r\n          instance={instance}\r\n          size={size}\r\n          contentTextWeight={contentTextWeight}\r\n          readOnly={readOnly}\r\n          enableCommentHint\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Check followedTags\r\n  if (showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length) {\r\n    return (\r\n      <div\r\n        data-state-post-id={sKey}\r\n        class=\"status-followed-tags\"\r\n        onMouseEnter={debugHover}\r\n      >\r\n        <div class=\"status-pre-meta\">\r\n          <Icon icon=\"hashtag\" size=\"l\" />{' '}\r\n          {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\r\n            <Link\r\n              key={tag}\r\n              to={instance ? `/${instance}/t/${tag}` : `/t/${tag}`}\r\n              class=\"status-followed-tag-item\"\r\n            >\r\n              {tag}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <Status\r\n          status={statusID ? null : status}\r\n          statusID={statusID ? status.id : null}\r\n          instance={instance}\r\n          size={size}\r\n          contentTextWeight={contentTextWeight}\r\n          readOnly={readOnly}\r\n          enableCommentHint\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isSizeLarge = size === 'l';\r\n\r\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\r\n  const targetLanguage = getTranslateTargetLanguage(true);\r\n  const contentTranslationHideLanguages =\r\n    snapStates.settings.contentTranslationHideLanguages || [];\r\n  const { contentTranslation, contentTranslationAutoInline } =\r\n    snapStates.settings;\r\n  if (!contentTranslation) enableTranslate = false;\r\n  const inlineTranslate = useMemo(() => {\r\n    if (\r\n      !contentTranslation ||\r\n      !contentTranslationAutoInline ||\r\n      readOnly ||\r\n      (withinContext && !isSizeLarge) ||\r\n      previewMode ||\r\n      spoilerText ||\r\n      sensitive ||\r\n      poll ||\r\n      card ||\r\n      mediaAttachments?.length\r\n    ) {\r\n      return false;\r\n    }\r\n    const contentLength = htmlContentLength(content);\r\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\r\n  }, [\r\n    contentTranslation,\r\n    contentTranslationAutoInline,\r\n    readOnly,\r\n    withinContext,\r\n    isSizeLarge,\r\n    previewMode,\r\n    spoilerText,\r\n    sensitive,\r\n    poll,\r\n    card,\r\n    mediaAttachments,\r\n    content,\r\n  ]);\r\n\r\n  const [showEdited, setShowEdited] = useState(false);\r\n\r\n  const spoilerContentRef = useTruncated();\r\n  const contentRef = useTruncated();\r\n  const mediaContainerRef = useTruncated();\r\n  const readMoreText = 'Read more →';\r\n\r\n  const statusRef = useRef(null);\r\n\r\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\r\n\r\n  const textWeight = useCallback(\r\n    () =>\r\n      Math.max(\r\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\r\n          1,\r\n        1,\r\n      ),\r\n    [spoilerText, content],\r\n  );\r\n\r\n  const createdDateText = niceDateTime(createdAtDate);\r\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\r\n\r\n  // Can boost if:\r\n  // - authenticated AND\r\n  // - visibility != direct OR\r\n  // - visibility = private AND isSelf\r\n  let canBoost =\r\n    authenticated && visibility !== 'direct' && visibility !== 'private';\r\n  if (visibility === 'private' && isSelf) {\r\n    canBoost = true;\r\n  }\r\n\r\n  const replyStatus = (e) => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    // syntheticEvent comes from MenuItem\r\n    if (e?.shiftKey || e?.syntheticEvent?.shiftKey) {\r\n      const newWin = openCompose({\r\n        replyToStatus: status,\r\n      });\r\n      if (newWin) return;\r\n    }\r\n    states.showCompose = {\r\n      replyToStatus: status,\r\n    };\r\n  };\r\n\r\n  // Check if media has no descriptions\r\n  const mediaNoDesc = useMemo(() => {\r\n    return mediaAttachments.some(\r\n      (attachment) => !attachment.description?.trim?.(),\r\n    );\r\n  }, [mediaAttachments]);\r\n  const boostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      if (!reblogged) {\r\n        let confirmText = 'Boost this post?';\r\n        if (mediaNoDesc) {\r\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\r\n        }\r\n        const yes = confirm(confirmText);\r\n        if (!yes) {\r\n          return false;\r\n        }\r\n      }\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n  const confirmBoostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const favouriteStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        favourited: !favourited,\r\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\r\n      };\r\n      if (favourited) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const bookmarkStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        bookmarked: !bookmarked,\r\n      };\r\n      if (bookmarked) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const differentLanguage =\r\n    !!language &&\r\n    language !== targetLanguage &&\r\n    !localeMatch([language], [targetLanguage]) &&\r\n    !contentTranslationHideLanguages.find(\r\n      (l) => language === l || localeMatch([language], [l]),\r\n    );\r\n\r\n  const reblogIterator = useRef();\r\n  const favouriteIterator = useRef();\r\n  async function fetchBoostedLikedByAccounts(firstLoad) {\r\n    if (firstLoad) {\r\n      reblogIterator.current = masto.v1.statuses\r\n        .$select(statusID)\r\n        .rebloggedBy.list({\r\n          limit: REACTIONS_LIMIT,\r\n        });\r\n      favouriteIterator.current = masto.v1.statuses\r\n        .$select(statusID)\r\n        .favouritedBy.list({\r\n          limit: REACTIONS_LIMIT,\r\n        });\r\n    }\r\n    const [{ value: reblogResults }, { value: favouriteResults }] =\r\n      await Promise.allSettled([\r\n        reblogIterator.current.next(),\r\n        favouriteIterator.current.next(),\r\n      ]);\r\n    if (reblogResults.value?.length || favouriteResults.value?.length) {\r\n      const accounts = [];\r\n      if (reblogResults.value?.length) {\r\n        accounts.push(\r\n          ...reblogResults.value.map((a) => {\r\n            a._types = ['reblog'];\r\n            return a;\r\n          }),\r\n        );\r\n      }\r\n      if (favouriteResults.value?.length) {\r\n        accounts.push(\r\n          ...favouriteResults.value.map((a) => {\r\n            a._types = ['favourite'];\r\n            return a;\r\n          }),\r\n        );\r\n      }\r\n      return {\r\n        value: accounts,\r\n        done: reblogResults.done && favouriteResults.done,\r\n      };\r\n    }\r\n    return {\r\n      value: [],\r\n      done: true,\r\n    };\r\n  }\r\n\r\n  const actionsRef = useRef();\r\n  const StatusMenuItems = (\r\n    <>\r\n      {isSizeLarge && (\r\n        <>\r\n          <MenuItem\r\n            onClick={() => {\r\n              states.showGenericAccounts = {\r\n                heading: 'Boosted/Liked by…',\r\n                fetchAccounts: fetchBoostedLikedByAccounts,\r\n                instance,\r\n                showReactions: true,\r\n              };\r\n            }}\r\n          >\r\n            <Icon icon=\"react\" />\r\n            <span>\r\n              Boosted/Liked by<span class=\"more-insignificant\">…</span>\r\n            </span>\r\n          </MenuItem>\r\n        </>\r\n      )}\r\n      {!isSizeLarge && sameInstance && (\r\n        <>\r\n          <div class=\"menu-control-group-horizontal status-menu\">\r\n            <MenuItem onClick={replyStatus}>\r\n              <Icon icon=\"comment\" />\r\n              <span>\r\n                {repliesCount > 0 ? shortenNumber(repliesCount) : 'Reply'}\r\n              </span>\r\n            </MenuItem>\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"rocket\" />\r\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                </>\r\n              }\r\n              className={`menu-reblog ${reblogged ? 'checked' : ''}`}\r\n              menuFooter={\r\n                mediaNoDesc &&\r\n                !reblogged && (\r\n                  <div class=\"footer\">\r\n                    <Icon icon=\"alert\" />\r\n                    Some media have no descriptions.\r\n                  </div>\r\n                )\r\n              }\r\n              disabled={!canBoost}\r\n              onClick={async () => {\r\n                try {\r\n                  const done = await confirmBoostStatus();\r\n                  if (!isSizeLarge && done) {\r\n                    showToast(\r\n                      reblogged\r\n                        ? `Unboosted @${username || acct}'s post`\r\n                        : `Boosted @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon icon=\"rocket\" />\r\n              <span>\r\n                {reblogsCount > 0\r\n                  ? shortenNumber(reblogsCount)\r\n                  : reblogged\r\n                  ? 'Unboost'\r\n                  : 'Boost…'}\r\n              </span>\r\n            </MenuConfirm>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  favouriteStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(\r\n                      favourited\r\n                        ? `Unliked @${username || acct}'s post`\r\n                        : `Liked @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n              className={`menu-favourite ${favourited ? 'checked' : ''}`}\r\n            >\r\n              <Icon icon=\"heart\" />\r\n              <span>\r\n                {favouritesCount > 0\r\n                  ? shortenNumber(favouritesCount)\r\n                  : favourited\r\n                  ? 'Unlike'\r\n                  : 'Like'}\r\n              </span>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  bookmarkStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(\r\n                      bookmarked\r\n                        ? `Unbookmarked @${username || acct}'s post`\r\n                        : `Bookmarked @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n              className={`menu-bookmark ${bookmarked ? 'checked' : ''}`}\r\n            >\r\n              <Icon icon=\"bookmark\" />\r\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\r\n            </MenuItem>\r\n          </div>\r\n        </>\r\n      )}\r\n      {(enableTranslate || !language || differentLanguage) && <MenuDivider />}\r\n      {enableTranslate ? (\r\n        <div class={supportsTTS ? 'menu-horizontal' : ''}>\r\n          <MenuItem\r\n            disabled={forceTranslate}\r\n            onClick={() => {\r\n              setForceTranslate(true);\r\n            }}\r\n          >\r\n            <Icon icon=\"translate\" />\r\n            <span>Translate</span>\r\n          </MenuItem>\r\n          {supportsTTS && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                const postText = getPostText(status);\r\n                if (postText) {\r\n                  speak(postText, language);\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon=\"speak\" />\r\n              <span>Speak</span>\r\n            </MenuItem>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        (!language || differentLanguage) && (\r\n          <div class={supportsTTS ? 'menu-horizontal' : ''}>\r\n            <MenuLink\r\n              to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\r\n            >\r\n              <Icon icon=\"translate\" />\r\n              <span>Translate</span>\r\n            </MenuLink>\r\n            {supportsTTS && (\r\n              <MenuItem\r\n                onClick={() => {\r\n                  const postText = getPostText(status);\r\n                  if (postText) {\r\n                    speak(postText, language);\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon=\"speak\" />\r\n                <span>Speak</span>\r\n              </MenuItem>\r\n            )}\r\n          </div>\r\n        )\r\n      )}\r\n      {!isSizeLarge ||\r\n        ((enableTranslate || !language || differentLanguage) && (\r\n          <MenuDivider />\r\n        ))}\r\n      {!isSizeLarge && (\r\n        <>\r\n          <MenuDivider />\r\n          <MenuLink\r\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n            onClick={(e) => {\r\n              onStatusLinkClick(e, status);\r\n            }}\r\n          >\r\n            <Icon icon=\"arrows-right\" />\r\n            <small>\r\n              View post by @{username || acct}\r\n              <br />\r\n              <span class=\"more-insignificant\">\r\n                {visibilityText[visibility]} • {createdDateText}\r\n              </span>\r\n            </small>\r\n          </MenuLink>\r\n        </>\r\n      )}\r\n      {!!editedAt && (\r\n        <>\r\n          <MenuItem\r\n            onClick={() => {\r\n              setShowEdited(id);\r\n            }}\r\n          >\r\n            <Icon icon=\"history\" />\r\n            <small>\r\n              Show Edit History\r\n              <br />\r\n              <span class=\"more-insignificant\">Edited: {editedDateText}</span>\r\n            </small>\r\n          </MenuItem>\r\n        </>\r\n      )}\r\n      <MenuItem href={url} target=\"_blank\">\r\n        <Icon icon=\"external\" />\r\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\r\n      </MenuItem>\r\n      <div class=\"menu-horizontal\">\r\n        <MenuItem\r\n          onClick={() => {\r\n            // Copy url to clipboard\r\n            try {\r\n              navigator.clipboard.writeText(url);\r\n              showToast('Link copied');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast('Unable to copy link');\r\n            }\r\n          }}\r\n        >\r\n          <Icon icon=\"link\" />\r\n          <span>Copy</span>\r\n        </MenuItem>\r\n        {navigator?.share &&\r\n          navigator?.canShare?.({\r\n            url,\r\n          }) && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  navigator.share({\r\n                    url,\r\n                  });\r\n                } catch (e) {\r\n                  console.error(e);\r\n                  alert(\"Sharing doesn't seem to work.\");\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon=\"share\" />\r\n              <span>Share…</span>\r\n            </MenuItem>\r\n          )}\r\n      </div>\r\n      {(isSelf || mentionSelf) && <MenuDivider />}\r\n      {(isSelf || mentionSelf) && (\r\n        <MenuItem\r\n          onClick={async () => {\r\n            try {\r\n              const newStatus = await masto.v1.statuses\r\n                .$select(id)\r\n                [muted ? 'unmute' : 'mute']();\r\n              saveStatus(newStatus, instance);\r\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast(\r\n                muted\r\n                  ? 'Unable to unmute conversation'\r\n                  : 'Unable to mute conversation',\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {muted ? (\r\n            <>\r\n              <Icon icon=\"unmute\" />\r\n              <span>Unmute conversation</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon icon=\"mute\" />\r\n              <span>Mute conversation</span>\r\n            </>\r\n          )}\r\n        </MenuItem>\r\n      )}\r\n      {isSelf && /(public|unlisted|private)/i.test(visibility) && (\r\n        <MenuItem\r\n          onClick={async () => {\r\n            try {\r\n              const newStatus = await masto.v1.statuses\r\n                .$select(id)\r\n                [_pinned ? 'unpin' : 'pin']();\r\n              // saveStatus(newStatus, instance);\r\n              showToast(\r\n                _pinned\r\n                  ? 'Post unpinned from profile'\r\n                  : 'Post pinned to profile',\r\n              );\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast(\r\n                _pinned ? 'Unable to unpin post' : 'Unable to pin post',\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {_pinned ? (\r\n            <>\r\n              <Icon icon=\"unpin\" />\r\n              <span>Unpin from profile</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon icon=\"pin\" />\r\n              <span>Pin to profile</span>\r\n            </>\r\n          )}\r\n        </MenuItem>\r\n      )}\r\n      {isSelf && (\r\n        <div class=\"menu-horizontal\">\r\n          <MenuItem\r\n            onClick={() => {\r\n              states.showCompose = {\r\n                editStatus: status,\r\n              };\r\n            }}\r\n          >\r\n            <Icon icon=\"pencil\" />\r\n            <span>Edit</span>\r\n          </MenuItem>\r\n          {isSizeLarge && (\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"trash\" />\r\n                  <span>Delete this post?</span>\r\n                </>\r\n              }\r\n              menuItemClassName=\"danger\"\r\n              onClick={() => {\r\n                // const yes = confirm('Delete this post?');\r\n                // if (yes) {\r\n                (async () => {\r\n                  try {\r\n                    await masto.v1.statuses.$select(id).remove();\r\n                    const cachedStatus = getStatus(id, instance);\r\n                    cachedStatus._deleted = true;\r\n                    showToast('Deleted');\r\n                  } catch (e) {\r\n                    console.error(e);\r\n                    showToast('Unable to delete');\r\n                  }\r\n                })();\r\n                // }\r\n              }}\r\n            >\r\n              <Icon icon=\"trash\" />\r\n              <span>Delete…</span>\r\n            </MenuConfirm>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const contextMenuRef = useRef();\r\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\r\n  const [contextMenuProps, setContextMenuProps] = useState({});\r\n\r\n  const showContextMenu =\r\n    allowContextMenu || (!isSizeLarge && !previewMode && !_deleted && !quoted);\r\n\r\n  // Only iOS/iPadOS browsers don't support contextmenu\r\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\r\n  const bindLongPressContext = useLongPress(\r\n    isIOS && showContextMenu\r\n      ? (e) => {\r\n          if (e.pointerType === 'mouse') return;\r\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\r\n\r\n          const { clientX, clientY } = e.touches?.[0] || e;\r\n          // link detection copied from onContextMenu because here it works\r\n          const link = e.target.closest('a');\r\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n          e.preventDefault();\r\n          setContextMenuProps({\r\n            anchorPoint: {\r\n              x: clientX,\r\n              y: clientY,\r\n            },\r\n            direction: 'right',\r\n          });\r\n          setIsContextMenuOpen(true);\r\n        }\r\n      : null,\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const hotkeysEnabled = !readOnly && !previewMode && !quoted;\r\n  const rRef = useHotkeys('r, shift+r', replyStatus, {\r\n    enabled: hotkeysEnabled,\r\n  });\r\n  const fRef = useHotkeys(\r\n    'f, l',\r\n    () => {\r\n      try {\r\n        favouriteStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(\r\n            favourited\r\n              ? `Unliked @${username || acct}'s post`\r\n              : `Liked @${username || acct}'s post`,\r\n          );\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const dRef = useHotkeys(\r\n    'd',\r\n    () => {\r\n      try {\r\n        bookmarkStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(\r\n            bookmarked\r\n              ? `Unbookmarked @${username || acct}'s post`\r\n              : `Bookmarked @${username || acct}'s post`,\r\n          );\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const bRef = useHotkeys(\r\n    'shift+b',\r\n    () => {\r\n      (async () => {\r\n        try {\r\n          const done = await confirmBoostStatus();\r\n          if (!isSizeLarge && done) {\r\n            showToast(\r\n              reblogged\r\n                ? `Unboosted @${username || acct}'s post`\r\n                : `Boosted @${username || acct}'s post`,\r\n            );\r\n          }\r\n        } catch (e) {}\r\n      })();\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled && canBoost,\r\n    },\r\n  );\r\n  const xRef = useHotkeys('x', (e) => {\r\n    const activeStatus = document.activeElement.closest(\r\n      '.status-link, .status-focus',\r\n    );\r\n    if (activeStatus) {\r\n      const spoilerButton = activeStatus.querySelector(\r\n        '.spoiler-button:not(.spoiling)',\r\n      );\r\n      if (spoilerButton) {\r\n        e.stopPropagation();\r\n        spoilerButton.click();\r\n      } else {\r\n        const spoilerMediaButton = activeStatus.querySelector(\r\n          '.spoiler-media-button:not(.spoiling)',\r\n        );\r\n        if (spoilerMediaButton) {\r\n          e.stopPropagation();\r\n          spoilerMediaButton.click();\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const displayedMediaAttachments = mediaAttachments.slice(\r\n    0,\r\n    isSizeLarge ? undefined : 4,\r\n  );\r\n  const showMultipleMediaCaptions =\r\n    mediaAttachments.length > 1 &&\r\n    displayedMediaAttachments.some(\r\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\r\n    );\r\n  const captionChildren = useMemo(() => {\r\n    if (!showMultipleMediaCaptions) return null;\r\n    const attachments = [];\r\n    displayedMediaAttachments.forEach((media, i) => {\r\n      if (!media.description) return;\r\n      const index = attachments.findIndex(\r\n        (attachment) => attachment.media.description === media.description,\r\n      );\r\n      if (index === -1) {\r\n        attachments.push({\r\n          media,\r\n          indices: [i],\r\n        });\r\n      } else {\r\n        attachments[index].indices.push(i);\r\n      }\r\n    });\r\n    return attachments.map(({ media, indices }) => (\r\n      <div\r\n        key={media.id}\r\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          states.showMediaAlt = {\r\n            alt: media.description,\r\n            lang: language,\r\n          };\r\n        }}\r\n        title={media.description}\r\n      >\r\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\r\n      </div>\r\n    ));\r\n\r\n    // return displayedMediaAttachments.map(\r\n    //   (media, i) =>\r\n    //     !!media.description && (\r\n    //       <div\r\n    //         key={media.id}\r\n    //         data-caption-index={i + 1}\r\n    //         onClick={(e) => {\r\n    //           e.preventDefault();\r\n    //           e.stopPropagation();\r\n    //           states.showMediaAlt = {\r\n    //             alt: media.description,\r\n    //             lang: language,\r\n    //           };\r\n    //         }}\r\n    //         title={media.description}\r\n    //       >\r\n    //         <sup>{i + 1}</sup> {media.description}\r\n    //       </div>\r\n    //     ),\r\n    // );\r\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\r\n\r\n  const isThread = useMemo(() => {\r\n    return (\r\n      (!!inReplyToId && inReplyToAccountId === status.account?.id) ||\r\n      !!snapStates.statusThreadNumber[sKey]\r\n    );\r\n  }, [\r\n    inReplyToId,\r\n    inReplyToAccountId,\r\n    status.account?.id,\r\n    snapStates.statusThreadNumber[sKey],\r\n  ]);\r\n\r\n  const showCommentHint = useMemo(() => {\r\n    return (\r\n      enableCommentHint &&\r\n      !isThread &&\r\n      !withinContext &&\r\n      !inReplyToId &&\r\n      visibility === 'public' &&\r\n      repliesCount > 0\r\n    );\r\n  }, [\r\n    enableCommentHint,\r\n    isThread,\r\n    withinContext,\r\n    inReplyToId,\r\n    repliesCount,\r\n    visibility,\r\n  ]);\r\n  const showCommentCount = useMemo(() => {\r\n    if (\r\n      card ||\r\n      poll ||\r\n      sensitive ||\r\n      spoilerText ||\r\n      mediaAttachments?.length ||\r\n      isThread ||\r\n      withinContext ||\r\n      inReplyToId ||\r\n      repliesCount <= 0\r\n    ) {\r\n      return false;\r\n    }\r\n    const questionRegex = /[??？︖❓❔⁇⁈⁉¿‽؟]/;\r\n    const containsQuestion = questionRegex.test(content);\r\n    if (!containsQuestion) return false;\r\n    const contentLength = htmlContentLength(content);\r\n    if (contentLength > 0 && contentLength <= SHOW_COMMENT_COUNT_LIMIT) {\r\n      return true;\r\n    }\r\n  }, [\r\n    card,\r\n    poll,\r\n    sensitive,\r\n    spoilerText,\r\n    mediaAttachments,\r\n    reblog,\r\n    isThread,\r\n    withinContext,\r\n    inReplyToId,\r\n    repliesCount,\r\n    content,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {showReplyParent && !!(inReplyToId && inReplyToAccountId) && (\r\n        <StatusCompact sKey={sKey} />\r\n      )}\r\n      <article\r\n        data-state-post-id={sKey}\r\n        ref={(node) => {\r\n          statusRef.current = node;\r\n          // Use parent node if it's in focus\r\n          // Use case: <a><status /></a>\r\n          // When navigating (j/k), the <a> is focused instead of <status />\r\n          // Hotkey binding doesn't bubble up thus this hack\r\n          const nodeRef =\r\n            node?.closest?.(\r\n              '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\r\n            ) || node;\r\n          rRef.current = nodeRef;\r\n          fRef.current = nodeRef;\r\n          dRef.current = nodeRef;\r\n          bRef.current = nodeRef;\r\n          xRef.current = nodeRef;\r\n        }}\r\n        tabindex=\"-1\"\r\n        class={`status ${\r\n          !withinContext && inReplyToId && inReplyToAccount\r\n            ? 'status-reply-to'\r\n            : ''\r\n        } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\r\n          {\r\n            s: 'small',\r\n            m: 'medium',\r\n            l: 'large',\r\n          }[size]\r\n        } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''} ${\r\n          isContextMenuOpen ? 'status-menu-open' : ''\r\n        }`}\r\n        onMouseEnter={debugHover}\r\n        onContextMenu={(e) => {\r\n          if (!showContextMenu) return;\r\n          if (e.metaKey) return;\r\n          // console.log('context menu', e);\r\n          const link = e.target.closest('a');\r\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n\r\n          // If there's selected text, don't show custom context menu\r\n          const selection = window.getSelection?.();\r\n          if (selection.toString().length > 0) {\r\n            const { anchorNode } = selection;\r\n            if (statusRef.current?.contains(anchorNode)) {\r\n              return;\r\n            }\r\n          }\r\n          e.preventDefault();\r\n          setContextMenuProps({\r\n            anchorPoint: {\r\n              x: e.clientX,\r\n              y: e.clientY,\r\n            },\r\n            direction: 'right',\r\n          });\r\n          setIsContextMenuOpen(true);\r\n        }}\r\n        {...(showContextMenu ? bindLongPressContext() : {})}\r\n      >\r\n        {showContextMenu && (\r\n          <ControlledMenu\r\n            ref={contextMenuRef}\r\n            state={isContextMenuOpen ? 'open' : undefined}\r\n            {...contextMenuProps}\r\n            onClose={(e) => {\r\n              setIsContextMenuOpen(false);\r\n              // statusRef.current?.focus?.();\r\n              if (e?.reason === 'click') {\r\n                statusRef.current?.closest('[tabindex]')?.focus?.();\r\n              }\r\n            }}\r\n            portal={{\r\n              target: document.body,\r\n            }}\r\n            containerProps={{\r\n              style: {\r\n                // Higher than the backdrop\r\n                zIndex: 1001,\r\n              },\r\n              onClick: () => {\r\n                contextMenuRef.current?.closeMenu?.();\r\n              },\r\n            }}\r\n            overflow=\"auto\"\r\n            boundingBoxPadding={safeBoundingBoxPadding()}\r\n            unmountOnClose\r\n          >\r\n            {StatusMenuItems}\r\n          </ControlledMenu>\r\n        )}\r\n        {showActionsBar &&\r\n          size !== 'l' &&\r\n          !previewMode &&\r\n          !readOnly &&\r\n          !_deleted &&\r\n          !quoted && (\r\n            <div\r\n              class={`status-actions ${\r\n                isContextMenuOpen === 'actions-bar' ? 'open' : ''\r\n              }`}\r\n              ref={actionsRef}\r\n            >\r\n              <StatusButton\r\n                size=\"s\"\r\n                title=\"Reply\"\r\n                alt=\"Reply\"\r\n                class=\"reply-button\"\r\n                icon=\"comment\"\r\n                iconSize=\"m\"\r\n                onClick={replyStatus}\r\n              />\r\n              <StatusButton\r\n                size=\"s\"\r\n                checked={favourited}\r\n                title={['Like', 'Unlike']}\r\n                alt={['Like', 'Liked']}\r\n                class=\"favourite-button\"\r\n                icon=\"heart\"\r\n                iconSize=\"m\"\r\n                count={favouritesCount}\r\n                onClick={() => {\r\n                  try {\r\n                    favouriteStatus();\r\n                    showToast(\r\n                      favourited\r\n                        ? `Unliked @${username || acct}'s post`\r\n                        : `Liked @${username || acct}'s post`,\r\n                    );\r\n                  } catch (e) {}\r\n                }}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                title=\"More\"\r\n                class=\"plain more-button\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  setContextMenuProps({\r\n                    anchorRef: {\r\n                      current: e.currentTarget,\r\n                    },\r\n                    align: 'start',\r\n                    direction: 'left',\r\n                    gap: 0,\r\n                    shift: -8,\r\n                  });\r\n                  setIsContextMenuOpen('actions-bar');\r\n                }}\r\n              >\r\n                <Icon icon=\"more2\" size=\"m\" alt=\"More\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n        {size !== 'l' && (\r\n          <div class=\"status-badge\">\r\n            {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\r\n            {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\r\n            {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\r\n            {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\r\n          </div>\r\n        )}\r\n        {size !== 's' && (\r\n          <a\r\n            href={accountURL}\r\n            tabindex=\"-1\"\r\n            // target=\"_blank\"\r\n            title={`@${acct}`}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              states.showAccount = {\r\n                account: status.account,\r\n                instance,\r\n              };\r\n            }}\r\n          >\r\n            <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\r\n          </a>\r\n        )}\r\n        <div class=\"container\">\r\n          <div class=\"meta\">\r\n            <span class=\"meta-name\">\r\n              <NameText\r\n                account={status.account}\r\n                instance={instance}\r\n                showAvatar={size === 's'}\r\n                showAcct={isSizeLarge}\r\n              />\r\n            </span>\r\n            {/* {inReplyToAccount && !withinContext && size !== 's' && (\r\n              <>\r\n                {' '}\r\n                <span class=\"ib\">\r\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\r\n                  <NameText account={inReplyToAccount} instance={instance} short />\r\n                </span>\r\n              </>\r\n            )} */}\r\n            {/* </span> */}{' '}\r\n            {size !== 'l' &&\r\n              (_deleted ? (\r\n                <span class=\"status-deleted-tag\">Deleted</span>\r\n              ) : url && !previewMode && !readOnly && !quoted ? (\r\n                <Link\r\n                  to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n                  onClick={(e) => {\r\n                    if (\r\n                      e.metaKey ||\r\n                      e.ctrlKey ||\r\n                      e.shiftKey ||\r\n                      e.altKey ||\r\n                      e.which === 2\r\n                    ) {\r\n                      return;\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    onStatusLinkClick?.(e, status);\r\n                    setContextMenuProps({\r\n                      anchorRef: {\r\n                        current: e.currentTarget,\r\n                      },\r\n                      align: 'end',\r\n                      direction: 'bottom',\r\n                      gap: 4,\r\n                    });\r\n                    setIsContextMenuOpen(true);\r\n                  }}\r\n                  class={`time ${\r\n                    isContextMenuOpen && contextMenuProps?.anchorRef\r\n                      ? 'is-open'\r\n                      : ''\r\n                  }`}\r\n                >\r\n                  {showCommentHint && !showCommentCount ? (\r\n                    <Icon\r\n                      icon=\"comment2\"\r\n                      size=\"s\"\r\n                      alt={`${repliesCount} ${\r\n                        repliesCount === 1 ? 'reply' : 'replies'\r\n                      }`}\r\n                    />\r\n                  ) : (\r\n                    <Icon\r\n                      icon={visibilityIconsMap[visibility]}\r\n                      alt={visibilityText[visibility]}\r\n                      size=\"s\"\r\n                    />\r\n                  )}{' '}\r\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n                  {!previewMode && !readOnly && (\r\n                    <Icon icon=\"more2\" class=\"more\" />\r\n                  )}\r\n                </Link>\r\n              ) : (\r\n                // <Menu\r\n                //   instanceRef={menuInstanceRef}\r\n                //   portal={{\r\n                //     target: document.body,\r\n                //   }}\r\n                //   containerProps={{\r\n                //     style: {\r\n                //       // Higher than the backdrop\r\n                //       zIndex: 1001,\r\n                //     },\r\n                //     onClick: (e) => {\r\n                //       if (e.target === e.currentTarget)\r\n                //         menuInstanceRef.current?.closeMenu?.();\r\n                //     },\r\n                //   }}\r\n                //   align=\"end\"\r\n                //   gap={4}\r\n                //   overflow=\"auto\"\r\n                //   viewScroll=\"close\"\r\n                //   boundingBoxPadding=\"8 8 8 8\"\r\n                //   unmountOnClose\r\n                //   menuButton={({ open }) => (\r\n                //     <Link\r\n                //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n                //       onClick={(e) => {\r\n                //         e.preventDefault();\r\n                //         e.stopPropagation();\r\n                //         onStatusLinkClick?.(e, status);\r\n                //       }}\r\n                //       class={`time ${open ? 'is-open' : ''}`}\r\n                //     >\r\n                //       <Icon\r\n                //         icon={visibilityIconsMap[visibility]}\r\n                //         alt={visibilityText[visibility]}\r\n                //         size=\"s\"\r\n                //       />{' '}\r\n                //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n                //     </Link>\r\n                //   )}\r\n                // >\r\n                //   {StatusMenuItems}\r\n                // </Menu>\r\n                <span class=\"time\">\r\n                  <Icon\r\n                    icon={visibilityIconsMap[visibility]}\r\n                    alt={visibilityText[visibility]}\r\n                    size=\"s\"\r\n                  />{' '}\r\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n                </span>\r\n              ))}\r\n          </div>\r\n          {visibility === 'direct' && (\r\n            <>\r\n              <div class=\"status-direct-badge\">Private mention</div>{' '}\r\n            </>\r\n          )}\r\n          {!withinContext && (\r\n            <>\r\n              {isThread ? (\r\n                <div class=\"status-thread-badge\">\r\n                  <Icon icon=\"thread\" size=\"s\" />\r\n                  Thread\r\n                  {snapStates.statusThreadNumber[sKey]\r\n                    ? ` ${snapStates.statusThreadNumber[sKey]}/X`\r\n                    : ''}\r\n                </div>\r\n              ) : (\r\n                !!inReplyToId &&\r\n                !!inReplyToAccount &&\r\n                (!!spoilerText ||\r\n                  !mentions.find((mention) => {\r\n                    return mention.id === inReplyToAccountId;\r\n                  })) && (\r\n                  <div class=\"status-reply-badge\">\r\n                    <Icon icon=\"reply\" />{' '}\r\n                    <NameText\r\n                      account={inReplyToAccount}\r\n                      instance={instance}\r\n                      short\r\n                    />\r\n                  </div>\r\n                )\r\n              )}\r\n            </>\r\n          )}\r\n          <div\r\n            class={`content-container ${\r\n              spoilerText || sensitive ? 'has-spoiler' : ''\r\n            } ${showSpoiler ? 'show-spoiler' : ''} ${\r\n              showSpoilerMedia ? 'show-media' : ''\r\n            }`}\r\n            data-content-text-weight={contentTextWeight ? textWeight() : null}\r\n            style={\r\n              (isSizeLarge || contentTextWeight) && {\r\n                '--content-text-weight': textWeight(),\r\n              }\r\n            }\r\n          >\r\n            {!!spoilerText && (\r\n              <>\r\n                <div\r\n                  class=\"content spoiler-content\"\r\n                  lang={language}\r\n                  dir=\"auto\"\r\n                  ref={spoilerContentRef}\r\n                  data-read-more={readMoreText}\r\n                >\r\n                  <p>\r\n                    <EmojiText text={spoilerText} emojis={emojis} />\r\n                  </p>\r\n                </div>\r\n                {readingExpandSpoilers || previewMode ? (\r\n                  <div class=\"spoiler-divider\">\r\n                    <Icon icon=\"eye-open\" /> Content warning\r\n                  </div>\r\n                ) : (\r\n                  <button\r\n                    class={`light spoiler-button ${\r\n                      showSpoiler ? 'spoiling' : ''\r\n                    }`}\r\n                    type=\"button\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      e.stopPropagation();\r\n                      if (showSpoiler) {\r\n                        delete states.spoilers[id];\r\n                        if (!readingExpandSpoilers) {\r\n                          delete states.spoilersMedia[id];\r\n                        }\r\n                      } else {\r\n                        states.spoilers[id] = true;\r\n                        if (!readingExpandSpoilers) {\r\n                          states.spoilersMedia[id] = true;\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\r\n                    {showSpoiler ? 'Show less' : 'Show content'}\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n            {!!content && (\r\n              <div\r\n                class=\"content\"\r\n                ref={contentRef}\r\n                data-read-more={readMoreText}\r\n              >\r\n                <PostContent\r\n                  post={status}\r\n                  instance={instance}\r\n                  previewMode={previewMode}\r\n                />\r\n                <QuoteStatuses id={id} instance={instance} level={quoted} />\r\n              </div>\r\n            )}\r\n            {!!poll && (\r\n              <Poll\r\n                lang={language}\r\n                poll={poll}\r\n                readOnly={readOnly || !sameInstance || !authenticated}\r\n                onUpdate={(newPoll) => {\r\n                  states.statuses[sKey].poll = newPoll;\r\n                }}\r\n                refresh={() => {\r\n                  return masto.v1.polls\r\n                    .$select(poll.id)\r\n                    .fetch()\r\n                    .then((pollResponse) => {\r\n                      states.statuses[sKey].poll = pollResponse;\r\n                    })\r\n                    .catch((e) => {}); // Silently fail\r\n                }}\r\n                votePoll={(choices) => {\r\n                  return masto.v1.polls\r\n                    .$select(poll.id)\r\n                    .votes.create({\r\n                      choices,\r\n                    })\r\n                    .then((pollResponse) => {\r\n                      states.statuses[sKey].poll = pollResponse;\r\n                    })\r\n                    .catch((e) => {}); // Silently fail\r\n                }}\r\n              />\r\n            )}\r\n            {(((enableTranslate || inlineTranslate) &&\r\n              !!content.trim() &&\r\n              !!getHTMLText(emojifyText(content, emojis)) &&\r\n              differentLanguage) ||\r\n              forceTranslate) && (\r\n              <TranslationBlock\r\n                forceTranslate={forceTranslate || inlineTranslate}\r\n                mini={!isSizeLarge && !withinContext}\r\n                sourceLanguage={language}\r\n                text={getPostText(status)}\r\n              />\r\n            )}\r\n            {!previewMode &&\r\n              sensitive &&\r\n              !!mediaAttachments.length &&\r\n              readingExpandMedia !== 'show_all' && (\r\n                <button\r\n                  class={`plain spoiler-media-button ${\r\n                    showSpoilerMedia ? 'spoiling' : ''\r\n                  }`}\r\n                  type=\"button\"\r\n                  hidden={!readingExpandSpoilers && !!spoilerText}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    if (showSpoilerMedia) {\r\n                      delete states.spoilersMedia[id];\r\n                    } else {\r\n                      states.spoilersMedia[id] = true;\r\n                    }\r\n                  }}\r\n                >\r\n                  <Icon icon={showSpoilerMedia ? 'eye-open' : 'eye-close'} />{' '}\r\n                  {showSpoilerMedia ? 'Show less' : 'Show media'}\r\n                </button>\r\n              )}\r\n            {!!mediaAttachments.length && (\r\n              <MultipleMediaFigure\r\n                lang={language}\r\n                enabled={showMultipleMediaCaptions}\r\n                captionChildren={captionChildren}\r\n              >\r\n                <div\r\n                  ref={mediaContainerRef}\r\n                  class={`media-container media-eq${mediaAttachments.length} ${\r\n                    mediaAttachments.length > 2 ? 'media-gt2' : ''\r\n                  } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\r\n                >\r\n                  {displayedMediaAttachments.map((media, i) => (\r\n                    <Media\r\n                      key={media.id}\r\n                      media={media}\r\n                      autoAnimate={isSizeLarge}\r\n                      showCaption={mediaAttachments.length === 1}\r\n                      lang={language}\r\n                      altIndex={\r\n                        showMultipleMediaCaptions &&\r\n                        !!media.description &&\r\n                        i + 1\r\n                      }\r\n                      to={`/${instance}/s/${id}?${\r\n                        withinContext ? 'media' : 'media-only'\r\n                      }=${i + 1}`}\r\n                      onClick={\r\n                        onMediaClick\r\n                          ? (e) => {\r\n                              onMediaClick(e, i, media, status);\r\n                            }\r\n                          : undefined\r\n                      }\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </MultipleMediaFigure>\r\n            )}\r\n            {!!card &&\r\n              /^https/i.test(card?.url) &&\r\n              !sensitive &&\r\n              !spoilerText &&\r\n              !poll &&\r\n              !mediaAttachments.length &&\r\n              !snapStates.statusQuotes[sKey] && (\r\n                <Card\r\n                  card={card}\r\n                  selfReferential={\r\n                    card?.url === status.url || card?.url === status.uri\r\n                  }\r\n                  instance={currentInstance}\r\n                />\r\n              )}\r\n          </div>\r\n          {!isSizeLarge && showCommentCount && (\r\n            <div class=\"content-comment-hint insignificant\">\r\n              <Icon icon=\"comment2\" alt=\"Replies\" /> {repliesCount}\r\n            </div>\r\n          )}\r\n          {isSizeLarge && (\r\n            <>\r\n              <div class=\"extra-meta\">\r\n                {_deleted ? (\r\n                  <span class=\"status-deleted-tag\">Deleted</span>\r\n                ) : (\r\n                  <>\r\n                    {/* <Icon\r\n                      icon={visibilityIconsMap[visibility]}\r\n                      alt={visibilityText[visibility]}\r\n                    /> */}\r\n                    <span>{visibilityText[visibility]}</span> &bull;{' '}\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      <time\r\n                        class=\"created\"\r\n                        datetime={createdAtDate.toISOString()}\r\n                        title={createdAtDate.toLocaleString()}\r\n                      >\r\n                        {createdDateText}\r\n                      </time>\r\n                    </a>\r\n                    {editedAt && (\r\n                      <>\r\n                        {' '}\r\n                        &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\r\n                        <time\r\n                          tabIndex=\"0\"\r\n                          class=\"edited\"\r\n                          datetime={editedAtDate.toISOString()}\r\n                          onClick={() => {\r\n                            setShowEdited(id);\r\n                          }}\r\n                        >\r\n                          {editedDateText}\r\n                        </time>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div class={`actions ${_deleted ? 'disabled' : ''}`}>\r\n                <div class=\"action has-count\">\r\n                  <StatusButton\r\n                    title=\"Reply\"\r\n                    alt=\"Comments\"\r\n                    class=\"reply-button\"\r\n                    icon=\"comment\"\r\n                    count={repliesCount}\r\n                    onClick={replyStatus}\r\n                  />\r\n                </div>\r\n                {/* <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={reblogged}\r\n                  title={['Boost', 'Unboost']}\r\n                  alt={['Boost', 'Boosted']}\r\n                  class=\"reblog-button\"\r\n                  icon=\"rocket\"\r\n                  count={reblogsCount}\r\n                  onClick={boostStatus}\r\n                  disabled={!canBoost}\r\n                />\r\n              </div> */}\r\n                <MenuConfirm\r\n                  disabled={!canBoost}\r\n                  onClick={confirmBoostStatus}\r\n                  confirmLabel={\r\n                    <>\r\n                      <Icon icon=\"rocket\" />\r\n                      <span>\r\n                        {reblogged ? 'Unboost?' : 'Boost to everyone?'}\r\n                      </span>\r\n                    </>\r\n                  }\r\n                  menuFooter={\r\n                    mediaNoDesc &&\r\n                    !reblogged && (\r\n                      <div class=\"footer\">\r\n                        <Icon icon=\"alert\" />\r\n                        Some media have no descriptions.\r\n                      </div>\r\n                    )\r\n                  }\r\n                >\r\n                  <div class=\"action has-count\">\r\n                    <StatusButton\r\n                      checked={reblogged}\r\n                      title={['Boost', 'Unboost']}\r\n                      alt={['Boost', 'Boosted']}\r\n                      class=\"reblog-button\"\r\n                      icon=\"rocket\"\r\n                      count={reblogsCount}\r\n                      // onClick={boostStatus}\r\n                      disabled={!canBoost}\r\n                    />\r\n                  </div>\r\n                </MenuConfirm>\r\n                <div class=\"action has-count\">\r\n                  <StatusButton\r\n                    checked={favourited}\r\n                    title={['Like', 'Unlike']}\r\n                    alt={['Like', 'Liked']}\r\n                    class=\"favourite-button\"\r\n                    icon=\"heart\"\r\n                    count={favouritesCount}\r\n                    onClick={favouriteStatus}\r\n                  />\r\n                </div>\r\n                <div class=\"action\">\r\n                  <StatusButton\r\n                    checked={bookmarked}\r\n                    title={['Bookmark', 'Unbookmark']}\r\n                    alt={['Bookmark', 'Bookmarked']}\r\n                    class=\"bookmark-button\"\r\n                    icon=\"bookmark\"\r\n                    onClick={bookmarkStatus}\r\n                  />\r\n                </div>\r\n                <Menu2\r\n                  portal={{\r\n                    target:\r\n                      document.querySelector('.status-deck') || document.body,\r\n                  }}\r\n                  align=\"end\"\r\n                  gap={4}\r\n                  overflow=\"auto\"\r\n                  viewScroll=\"close\"\r\n                  menuButton={\r\n                    <div class=\"action\">\r\n                      <button\r\n                        type=\"button\"\r\n                        title=\"More\"\r\n                        class=\"plain more-button\"\r\n                      >\r\n                        <Icon icon=\"more\" size=\"l\" alt=\"More\" />\r\n                      </button>\r\n                    </div>\r\n                  }\r\n                >\r\n                  {StatusMenuItems}\r\n                </Menu2>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {!!showEdited && (\r\n          <Modal\r\n            class=\"light\"\r\n            onClick={(e) => {\r\n              if (e.target === e.currentTarget) {\r\n                setShowEdited(false);\r\n                // statusRef.current?.focus();\r\n              }\r\n            }}\r\n          >\r\n            <EditedAtModal\r\n              statusID={showEdited}\r\n              instance={instance}\r\n              fetchStatusHistory={() => {\r\n                return masto.v1.statuses.$select(showEdited).history.list();\r\n              }}\r\n              onClose={() => {\r\n                setShowEdited(false);\r\n                statusRef.current?.focus();\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </article>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MultipleMediaFigure(props) {\r\n  const { enabled, children, lang, captionChildren } = props;\r\n  if (!enabled || !captionChildren) return children;\r\n  return (\r\n    <figure class=\"media-figure-multiple\">\r\n      {children}\r\n      <figcaption lang={lang} dir=\"auto\">\r\n        {captionChildren}\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nfunction Card({ card, selfReferential, instance }) {\r\n  const snapStates = useSnapshot(states);\r\n  const {\r\n    blurhash,\r\n    title,\r\n    description,\r\n    html,\r\n    providerName,\r\n    providerUrl,\r\n    authorName,\r\n    authorUrl,\r\n    width,\r\n    height,\r\n    image,\r\n    imageDescription,\r\n    url,\r\n    type,\r\n    embedUrl,\r\n    language,\r\n    publishedAt,\r\n  } = card;\r\n\r\n  /* type\r\n  link = Link OEmbed\r\n  photo = Photo OEmbed\r\n  video = Video OEmbed\r\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\r\n  */\r\n\r\n  const hasText = title || providerName || authorName;\r\n  const isLandscape = width / height >= 1.2;\r\n  const size = isLandscape ? 'large' : '';\r\n\r\n  const [cardStatusURL, setCardStatusURL] = useState(null);\r\n  // const [cardStatusID, setCardStatusID] = useState(null);\r\n  useEffect(() => {\r\n    if (hasText && image && !selfReferential && isMastodonLinkMaybe(url)) {\r\n      unfurlMastodonLink(instance, url).then((result) => {\r\n        if (!result) return;\r\n        const { id, url } = result;\r\n        setCardStatusURL('#' + url);\r\n\r\n        // NOTE: This is for quote post\r\n        // (async () => {\r\n        //   const { masto } = api({ instance });\r\n        //   const status = await masto.v1.statuses.$select(id).fetch();\r\n        //   saveStatus(status, instance);\r\n        //   setCardStatusID(id);\r\n        // })();\r\n      });\r\n    }\r\n  }, [hasText, image, selfReferential]);\r\n\r\n  // if (cardStatusID) {\r\n  //   return (\r\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\r\n  //   );\r\n  // }\r\n\r\n  if (snapStates.unfurledLinks[url]) return null;\r\n\r\n  const hasIframeHTML = /<iframe/i.test(html);\r\n  const handleClick = useCallback(\r\n    (e) => {\r\n      if (hasIframeHTML) {\r\n        e.preventDefault();\r\n        states.showEmbedModal = {\r\n          html,\r\n          url: url || embedUrl,\r\n          width,\r\n          height,\r\n        };\r\n      }\r\n    },\r\n    [hasIframeHTML],\r\n  );\r\n\r\n  if (hasText && (image || (type === 'photo' && blurhash))) {\r\n    const domain = new URL(url).hostname\r\n      .replace(/^www\\./, '')\r\n      .replace(/\\/$/, '');\r\n    let blurhashImage;\r\n    const rgbAverageColor =\r\n      image && blurhash ? getBlurHashAverageColor(blurhash) : null;\r\n    if (!image) {\r\n      const w = 44;\r\n      const h = 44;\r\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = w;\r\n      canvas.height = h;\r\n      const ctx = canvas.getContext('2d');\r\n      const imageData = ctx.createImageData(w, h);\r\n      imageData.data.set(blurhashPixels);\r\n      ctx.putImageData(imageData, 0, 0);\r\n      blurhashImage = canvas.toDataURL();\r\n    }\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link ${blurhashImage ? '' : size}`}\r\n        lang={language}\r\n        dir=\"auto\"\r\n        style={{\r\n          '--average-color':\r\n            rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n        }}\r\n        onClick={handleClick}\r\n      >\r\n        <div class=\"card-image\">\r\n          <img\r\n            src={image || blurhashImage}\r\n            width={width}\r\n            height={height}\r\n            loading=\"lazy\"\r\n            alt={imageDescription || ''}\r\n            onError={(e) => {\r\n              try {\r\n                e.target.style.display = 'none';\r\n              } catch (e) {}\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\" dir=\"auto\">\r\n            {domain}\r\n          </p>\r\n          <p class=\"title\" dir=\"auto\">\r\n            {title}\r\n          </p>\r\n          <p class=\"meta\" dir=\"auto\">\r\n            {description ||\r\n              (!!publishedAt && (\r\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\r\n              ))}\r\n          </p>\r\n        </div>\r\n      </a>\r\n    );\r\n  } else if (type === 'photo') {\r\n    return (\r\n      <a\r\n        href={url}\r\n        target=\"_blank\"\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class=\"card photo\"\r\n        onClick={handleClick}\r\n      >\r\n        <img\r\n          src={embedUrl}\r\n          width={width}\r\n          height={height}\r\n          alt={title || description}\r\n          loading=\"lazy\"\r\n          style={{\r\n            height: 'auto',\r\n            aspectRatio: `${width}/${height}`,\r\n          }}\r\n        />\r\n      </a>\r\n    );\r\n  } else {\r\n    if (type === 'video') {\r\n      if (/youtube/i.test(providerName)) {\r\n        // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\r\n        const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\r\n        if (videoID) {\r\n          return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\r\n        }\r\n      }\r\n      // return (\r\n      //   <div\r\n      //     class=\"card video\"\r\n      //     style={{\r\n      //       aspectRatio: `${width}/${height}`,\r\n      //     }}\r\n      //     dangerouslySetInnerHTML={{ __html: html }}\r\n      //   />\r\n      // );\r\n    }\r\n    if (hasText && !image) {\r\n      const domain = new URL(url).hostname.replace(/^www\\./, '');\r\n      return (\r\n        <a\r\n          href={cardStatusURL || url}\r\n          target={cardStatusURL ? null : '_blank'}\r\n          rel=\"nofollow noopener noreferrer\"\r\n          class={`card link no-image`}\r\n          lang={language}\r\n          onClick={handleClick}\r\n        >\r\n          <div class=\"meta-container\">\r\n            <p class=\"meta domain\">\r\n              <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\r\n            </p>\r\n            <p class=\"title\">{title}</p>\r\n            <p class=\"meta\">{description || providerName || authorName}</p>\r\n          </div>\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction EditedAtModal({\r\n  statusID,\r\n  instance,\r\n  fetchStatusHistory = () => {},\r\n  onClose,\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const [editHistory, setEditHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const editHistory = await fetchStatusHistory();\r\n        console.log(editHistory);\r\n        setEditHistory(editHistory);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"edit-history\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Edit History</h2>\r\n        {uiState === 'error' && <p>Failed to load history</p>}\r\n        {uiState === 'loading' && (\r\n          <p>\r\n            <Loader abrupt /> Loading&hellip;\r\n          </p>\r\n        )}\r\n      </header>\r\n      <main tabIndex=\"-1\">\r\n        {editHistory.length > 0 && (\r\n          <ol>\r\n            {editHistory.map((status) => {\r\n              const { createdAt } = status;\r\n              const createdAtDate = new Date(createdAt);\r\n              return (\r\n                <li key={createdAt} class=\"history-item\">\r\n                  <h3>\r\n                    <time>\r\n                      {niceDateTime(createdAtDate, {\r\n                        formatOpts: {\r\n                          weekday: 'short',\r\n                          second: 'numeric',\r\n                        },\r\n                      })}\r\n                    </time>\r\n                  </h3>\r\n                  <Status\r\n                    status={status}\r\n                    instance={instance}\r\n                    size=\"s\"\r\n                    withinContext\r\n                    readOnly\r\n                    previewMode\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StatusButton({\r\n  checked,\r\n  count,\r\n  class: className,\r\n  title,\r\n  alt,\r\n  size,\r\n  icon,\r\n  iconSize = 'l',\r\n  onClick,\r\n  ...props\r\n}) {\r\n  if (typeof title === 'string') {\r\n    title = [title, title];\r\n  }\r\n  if (typeof alt === 'string') {\r\n    alt = [alt, alt];\r\n  }\r\n\r\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\r\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\r\n\r\n  useEffect(() => {\r\n    if (checked) {\r\n      setButtonTitle(title[1] || '');\r\n      setIconAlt(alt[1] || '');\r\n    } else {\r\n      setButtonTitle(title[0] || '');\r\n      setIconAlt(alt[0] || '');\r\n    }\r\n  }, [checked, title, alt]);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      title={buttonTitle}\r\n      class={`plain ${size ? 'small' : ''} ${className} ${\r\n        checked ? 'checked' : ''\r\n      }`}\r\n      onClick={(e) => {\r\n        if (!onClick) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onClick(e);\r\n      }}\r\n      {...props}\r\n    >\r\n      <Icon icon={icon} size={iconSize} alt={iconAlt} />\r\n      {!!count && (\r\n        <>\r\n          {' '}\r\n          <small title={count}>{shortenNumber(count)}</small>\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function formatDuration(time) {\r\n  if (!time) return;\r\n  let hours = Math.floor(time / 3600);\r\n  let minutes = Math.floor((time % 3600) / 60);\r\n  let seconds = Math.round(time % 60);\r\n\r\n  if (hours === 0) {\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  } else {\r\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\r\n      .toString()\r\n      .padStart(2, '0')}`;\r\n  }\r\n}\r\n\r\nfunction nicePostURL(url) {\r\n  if (!url) return;\r\n  const urlObj = new URL(url);\r\n  const { host, pathname } = urlObj;\r\n  const path = pathname.replace(/\\/$/, '');\r\n  // split only first slash\r\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\r\n  return (\r\n    <>\r\n      {host}\r\n      {username ? (\r\n        <>\r\n          /{username}\r\n          <wbr />\r\n          <span class=\"more-insignificant\">/{restPath}</span>\r\n        </>\r\n      ) : (\r\n        <span class=\"more-insignificant\">{path}</span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction StatusCompact({ sKey }) {\r\n  const snapStates = useSnapshot(states);\r\n  const statusReply = snapStates.statusReply[sKey];\r\n  if (!statusReply) return null;\r\n\r\n  const { id, instance } = statusReply;\r\n  const status = getStatus(id, instance);\r\n  if (!status) return null;\r\n\r\n  const {\r\n    sensitive,\r\n    spoilerText,\r\n    account: { avatar, avatarStatic, bot },\r\n    visibility,\r\n    content,\r\n    language,\r\n  } = status;\r\n  if (sensitive || spoilerText) return null;\r\n  if (!content) return null;\r\n\r\n  const srKey = statusKey(id, instance);\r\n\r\n  const statusPeekText = statusPeek(status);\r\n  return (\r\n    <article\r\n      class={`status compact-reply ${\r\n        visibility === 'direct' ? 'visibility-direct' : ''\r\n      }`}\r\n      tabindex=\"-1\"\r\n      data-state-post-id={srKey}\r\n    >\r\n      <Avatar url={avatarStatic || avatar} squircle={bot} />\r\n      <div\r\n        class=\"content-compact\"\r\n        title={statusPeekText}\r\n        lang={language}\r\n        dir=\"auto\"\r\n      >\r\n        {statusPeekText}\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nfunction FilteredStatus({\r\n  status,\r\n  filterInfo,\r\n  instance,\r\n  containerProps = {},\r\n  showFollowedTags,\r\n}) {\r\n  const snapStates = useSnapshot(states);\r\n  const {\r\n    id: statusID,\r\n    account: { avatar, avatarStatic, bot, group },\r\n    createdAt,\r\n    visibility,\r\n    reblog,\r\n  } = status;\r\n  const isReblog = !!reblog;\r\n  const filterTitleStr = filterInfo?.titlesStr || '';\r\n  const createdAtDate = new Date(createdAt);\r\n  const statusPeekText = statusPeek(status.reblog || status);\r\n\r\n  const [showPeek, setShowPeek] = useState(false);\r\n  const bindLongPressPeek = useLongPress(\r\n    () => {\r\n      setShowPeek(true);\r\n    },\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const statusPeekRef = useTruncated();\r\n  const sKey = statusKey(status.id, instance);\r\n  const ssKey =\r\n    statusKey(status.id, instance) +\r\n    ' ' +\r\n    (statusKey(reblog?.id, instance) || '');\r\n\r\n  const actualStatusID = reblog?.id || statusID;\r\n  const url = instance\r\n    ? `/${instance}/s/${actualStatusID}`\r\n    : `/s/${actualStatusID}`;\r\n  const isFollowedTags =\r\n    showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length;\r\n\r\n  return (\r\n    <div\r\n      class={\r\n        isReblog\r\n          ? group\r\n            ? 'status-group'\r\n            : 'status-reblog'\r\n          : isFollowedTags\r\n          ? 'status-followed-tags'\r\n          : ''\r\n      }\r\n      {...containerProps}\r\n      // title={statusPeekText}\r\n      onContextMenu={(e) => {\r\n        e.preventDefault();\r\n        setShowPeek(true);\r\n      }}\r\n      {...bindLongPressPeek()}\r\n    >\r\n      <article data-state-post-id={ssKey} class=\"status filtered\" tabindex=\"-1\">\r\n        <b\r\n          class=\"status-filtered-badge clickable badge-meta\"\r\n          title={filterTitleStr}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setShowPeek(true);\r\n          }}\r\n        >\r\n          <span>Filtered</span>\r\n          <span>{filterTitleStr}</span>\r\n        </b>{' '}\r\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\r\n        <span class=\"status-filtered-info\">\r\n          <span class=\"status-filtered-info-1\">\r\n            <NameText account={status.account} instance={instance} />{' '}\r\n            <Icon\r\n              icon={visibilityIconsMap[visibility]}\r\n              alt={visibilityText[visibility]}\r\n              size=\"s\"\r\n            />{' '}\r\n            {isReblog ? (\r\n              'boosted'\r\n            ) : isFollowedTags ? (\r\n              <span>\r\n                {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\r\n                  <span key={tag} class=\"status-followed-tag-item\">\r\n                    #{tag}\r\n                  </span>\r\n                ))}\r\n              </span>\r\n            ) : (\r\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n            )}\r\n          </span>\r\n          <span class=\"status-filtered-info-2\">\r\n            {isReblog && (\r\n              <>\r\n                <Avatar\r\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\r\n                  squircle={bot}\r\n                />{' '}\r\n              </>\r\n            )}\r\n            {statusPeekText}\r\n          </span>\r\n        </span>\r\n      </article>\r\n      {!!showPeek && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowPeek(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"filtered-status-peek\" class=\"sheet\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => setShowPeek(false)}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <Link\r\n                ref={statusPeekRef}\r\n                class=\"status-link\"\r\n                to={url}\r\n                onClick={() => {\r\n                  setShowPeek(false);\r\n                }}\r\n                data-read-more=\"Read more →\"\r\n              >\r\n                <Status status={status} instance={instance} size=\"s\" readOnly />\r\n              </Link>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\r\n  if (!id || !instance) return;\r\n  const snapStates = useSnapshot(states);\r\n  const sKey = statusKey(id, instance);\r\n  const quotes = snapStates.statusQuotes[sKey];\r\n  const uniqueQuotes = quotes?.filter(\r\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\r\n  );\r\n\r\n  if (!uniqueQuotes?.length) return;\r\n  if (level > 2) return;\r\n\r\n  return uniqueQuotes.map((q) => {\r\n    return (\r\n      <Link\r\n        key={q.instance + q.id}\r\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\r\n        class=\"status-card-link\"\r\n        data-read-more=\"Read more →\"\r\n      >\r\n        <Status\r\n          statusID={q.id}\r\n          instance={q.instance}\r\n          size=\"s\"\r\n          quoted={level + 1}\r\n          enableCommentHint\r\n        />\r\n      </Link>\r\n    );\r\n  });\r\n});\r\n\r\nexport default memo(Status, (oldProps, newProps) => {\r\n  // Shallow equal all props except 'status'\r\n  // This will be pure static until status ID changes\r\n  const { status, ...restOldProps } = oldProps;\r\n  const { status: newStatus, ...restNewProps } = newProps;\r\n  return (\r\n    status?.id === newStatus?.id && shallowEqual(restOldProps, restNewProps)\r\n  );\r\n});\r\n","import './compose.css';\r\n\r\nimport '@github/text-expander-element';\r\nimport { MenuItem } from '@szhsin/react-menu';\r\nimport { deepEqual } from 'fast-equals';\r\nimport { forwardRef } from 'preact/compat';\r\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { substring } from 'runes2';\r\nimport stringLength from 'string-length';\r\nimport { uid } from 'uid/single';\r\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport Menu2 from '../components/menu2';\r\nimport supportedLanguages from '../data/status-supported-languages';\r\nimport urlRegex from '../data/url-regex';\r\nimport { api } from '../utils/api';\r\nimport db from '../utils/db';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport localeMatch from '../utils/locale-match';\r\nimport openCompose from '../utils/open-compose';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport showToast from '../utils/show-toast';\r\nimport states, { saveStatus } from '../utils/states';\r\nimport store from '../utils/store';\r\nimport {\r\n  getCurrentAccount,\r\n  getCurrentAccountNS,\r\n  getCurrentInstance,\r\n  getCurrentInstanceConfiguration,\r\n} from '../utils/store-utils';\r\nimport supports from '../utils/supports';\r\nimport useCloseWatcher from '../utils/useCloseWatcher';\r\nimport useInterval from '../utils/useInterval';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport AccountBlock from './account-block';\r\n// import Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\nimport Modal from './modal';\r\nimport Status from './status';\r\n\r\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\r\n\r\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\r\n  const [code, common, native] = l;\r\n  acc[code] = {\r\n    common,\r\n    native,\r\n  };\r\n  return acc;\r\n}, {});\r\n\r\n/* NOTES:\r\n  - Max character limit includes BOTH status text and Content Warning text\r\n*/\r\n\r\nconst expiryOptions = {\r\n  '5 minutes': 5 * 60,\r\n  '30 minutes': 30 * 60,\r\n  '1 hour': 60 * 60,\r\n  '6 hours': 6 * 60 * 60,\r\n  '12 hours': 12 * 60 * 60,\r\n  '1 day': 24 * 60 * 60,\r\n  '3 days': 3 * 24 * 60 * 60,\r\n  '7 days': 7 * 24 * 60 * 60,\r\n};\r\nconst expirySeconds = Object.values(expiryOptions);\r\nconst oneDay = 24 * 60 * 60;\r\n\r\nconst expiresInFromExpiresAt = (expiresAt) => {\r\n  if (!expiresAt) return oneDay;\r\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\r\n  return expirySeconds.find((s) => s >= delta) || oneDay;\r\n};\r\n\r\nconst menu = document.createElement('ul');\r\nmenu.role = 'listbox';\r\nmenu.className = 'text-expander-menu';\r\n\r\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\r\nconst windowMargin = 16;\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      const { left, width } = entry.boundingClientRect;\r\n      const { innerWidth } = window;\r\n      if (left + width > innerWidth) {\r\n        menu.style.left = innerWidth - width - windowMargin + 'px';\r\n      }\r\n    }\r\n  });\r\n});\r\nobserver.observe(menu);\r\n\r\nconst DEFAULT_LANG = localeMatch(\r\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\r\n  supportedLanguages.map((l) => l[0]),\r\n  'en',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\r\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\r\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\r\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\r\nfunction countableText(inputText) {\r\n  return inputText\r\n    .replace(urlRegexObj, urlPlaceholder)\r\n    .replace(usernameRegex, '$1@$3');\r\n}\r\n\r\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\r\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\r\nconst MENTION_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\p{L}\\\\w.-]+[\\\\w]+)?)`,\r\n  'uig',\r\n);\r\n\r\n// AI-generated, all other regexes are too complicated\r\nconst HASHTAG_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(#[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?)(?![\\\\/\\\\w])`,\r\n  'ig',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\r\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\r\nconst SCAN_RE = new RegExp(\r\n  `([^A-Za-z0-9_:\\\\n]|^)(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\r\n  'g',\r\n);\r\n\r\nfunction highlightText(text, { maxCharacters = Infinity }) {\r\n  // Accept text string, return formatted HTML string\r\n  // Escape all HTML special characters\r\n  let html = text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&apos;');\r\n\r\n  // Exceeded characters limit\r\n  const { composerCharacterCount } = states;\r\n  let leftoverHTML = '';\r\n  if (composerCharacterCount > maxCharacters) {\r\n    // NOTE: runes2 substring considers surrogate pairs\r\n    // const leftoverCount = composerCharacterCount - maxCharacters;\r\n    // Highlight exceeded characters\r\n    leftoverHTML =\r\n      '<mark class=\"compose-highlight-exceeded\">' +\r\n      // html.slice(-leftoverCount) +\r\n      substring(html, maxCharacters) +\r\n      '</mark>';\r\n    // html = html.slice(0, -leftoverCount);\r\n    html = substring(html, 0, maxCharacters);\r\n    return html + leftoverHTML;\r\n  }\r\n\r\n  return html\r\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\r\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\r\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\r\n    .replace(\r\n      SCAN_RE,\r\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\r\n    ); // Emoji shortcodes\r\n}\r\n\r\nfunction Compose({\r\n  onClose,\r\n  replyToStatus,\r\n  editStatus,\r\n  draftStatus,\r\n  standalone,\r\n  hasOpener,\r\n}) {\r\n  console.warn('RENDER COMPOSER');\r\n  const { masto, instance } = api();\r\n  const [uiState, setUIState] = useState('default');\r\n  const UID = useRef(draftStatus?.uid || uid());\r\n  console.log('Compose UID', UID.current);\r\n\r\n  const currentAccount = getCurrentAccount();\r\n  const currentAccountInfo = currentAccount.info;\r\n\r\n  const configuration = getCurrentInstanceConfiguration();\r\n  console.log('⚙️ Configuration', configuration);\r\n\r\n  const {\r\n    statuses: {\r\n      maxCharacters,\r\n      maxMediaAttachments,\r\n      charactersReservedPerUrl,\r\n    } = {},\r\n    mediaAttachments: {\r\n      supportedMimeTypes = [],\r\n      imageSizeLimit,\r\n      imageMatrixLimit,\r\n      videoSizeLimit,\r\n      videoMatrixLimit,\r\n      videoFrameRateLimit,\r\n    } = {},\r\n    polls: {\r\n      maxOptions,\r\n      maxCharactersPerOption,\r\n      maxExpiration,\r\n      minExpiration,\r\n    } = {},\r\n  } = configuration || {};\r\n\r\n  const textareaRef = useRef();\r\n  const spoilerTextRef = useRef();\r\n  const [visibility, setVisibility] = useState('public');\r\n  const [sensitive, setSensitive] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    store.session.get('currentLanguage') || DEFAULT_LANG,\r\n  );\r\n  const prevLanguage = useRef(language);\r\n  const [mediaAttachments, setMediaAttachments] = useState([]);\r\n  const [poll, setPoll] = useState(null);\r\n\r\n  const prefs = store.account.get('preferences') || {};\r\n\r\n  const oninputTextarea = () => {\r\n    if (!textareaRef.current) return;\r\n    textareaRef.current.dispatchEvent(new Event('input'));\r\n  };\r\n  const focusTextarea = () => {\r\n    setTimeout(() => {\r\n      console.debug('FOCUS textarea');\r\n      textareaRef.current?.focus();\r\n    }, 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (replyToStatus) {\r\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\r\n      if (spoilerText && spoilerTextRef.current) {\r\n        spoilerTextRef.current.value = spoilerText;\r\n      }\r\n      const mentions = new Set([\r\n        replyToStatus.account.acct,\r\n        ...replyToStatus.mentions.map((m) => m.acct),\r\n      ]);\r\n      const allMentions = [...mentions].filter(\r\n        (m) => m !== currentAccountInfo.acct,\r\n      );\r\n      if (allMentions.length > 0) {\r\n        textareaRef.current.value = `${allMentions\r\n          .map((m) => `@${m}`)\r\n          .join(' ')} `;\r\n        oninputTextarea();\r\n      }\r\n      focusTextarea();\r\n      setVisibility(\r\n        visibility === 'public' && prefs['posting:default:visibility']\r\n          ? prefs['posting:default:visibility']\r\n          : visibility,\r\n      );\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      setSensitive(sensitive && !!spoilerText);\r\n    } else if (editStatus) {\r\n      const { visibility, language, sensitive, poll, mediaAttachments } =\r\n        editStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      setUIState('loading');\r\n      (async () => {\r\n        try {\r\n          const statusSource = await masto.v1.statuses\r\n            .$select(editStatus.id)\r\n            .source.fetch();\r\n          console.log({ statusSource });\r\n          const { text, spoilerText } = statusSource;\r\n          textareaRef.current.value = text;\r\n          textareaRef.current.dataset.source = text;\r\n          oninputTextarea();\r\n          focusTextarea();\r\n          spoilerTextRef.current.value = spoilerText;\r\n          setVisibility(visibility);\r\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\r\n          setSensitive(sensitive);\r\n          setPoll(composablePoll);\r\n          setMediaAttachments(mediaAttachments);\r\n          setUIState('default');\r\n        } catch (e) {\r\n          console.error(e);\r\n          alert(e?.reason || e);\r\n          setUIState('error');\r\n        }\r\n      })();\r\n    } else {\r\n      focusTextarea();\r\n      console.log('Apply prefs', prefs);\r\n      if (prefs['posting:default:visibility']) {\r\n        setVisibility(prefs['posting:default:visibility']);\r\n      }\r\n      if (prefs['posting:default:language']) {\r\n        setLanguage(prefs['posting:default:language']);\r\n      }\r\n      if (prefs['posting:default:sensitive']) {\r\n        setSensitive(prefs['posting:default:sensitive']);\r\n      }\r\n    }\r\n    if (draftStatus) {\r\n      const {\r\n        status,\r\n        spoilerText,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      } = draftStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      textareaRef.current.value = status;\r\n      oninputTextarea();\r\n      focusTextarea();\r\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\r\n      if (visibility) setVisibility(visibility);\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      if (sensitive !== null) setSensitive(sensitive);\r\n      if (composablePoll) setPoll(composablePoll);\r\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\r\n    }\r\n  }, [draftStatus, editStatus, replyToStatus]);\r\n\r\n  const formRef = useRef();\r\n\r\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\r\n  const canClose = () => {\r\n    const { value, dataset } = textareaRef.current;\r\n\r\n    // check if loading\r\n    if (uiState === 'loading') {\r\n      console.log('canClose', { uiState });\r\n      return false;\r\n    }\r\n\r\n    // check for status and media attachments\r\n    const hasMediaAttachments = mediaAttachments.length > 0;\r\n    if (!value && !hasMediaAttachments) {\r\n      console.log('canClose', { value, mediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if all media attachments have IDs\r\n    const hasIDMediaAttachments =\r\n      mediaAttachments.length > 0 &&\r\n      mediaAttachments.every((media) => media.id);\r\n    if (hasIDMediaAttachments) {\r\n      console.log('canClose', { hasIDMediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if status contains only \"@acct\", if replying\r\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\r\n    const hasOnlyAcct =\r\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\r\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\r\n    if (!isSelf && hasOnlyAcct) {\r\n      console.log('canClose', { isSelf, hasOnlyAcct });\r\n      return true;\r\n    }\r\n\r\n    // check if status is same with source\r\n    const sameWithSource = value === dataset?.source;\r\n    if (sameWithSource) {\r\n      console.log('canClose', { sameWithSource });\r\n      return true;\r\n    }\r\n\r\n    console.log('canClose', {\r\n      value,\r\n      hasMediaAttachments,\r\n      hasIDMediaAttachments,\r\n      poll,\r\n      isSelf,\r\n      hasOnlyAcct,\r\n      sameWithSource,\r\n      uiState,\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  const confirmClose = () => {\r\n    if (!canClose()) {\r\n      const yes = confirm(beforeUnloadCopy);\r\n      return yes;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Show warning if user tries to close window with unsaved changes\r\n    const handleBeforeUnload = (e) => {\r\n      if (!canClose()) {\r\n        e.preventDefault();\r\n        e.returnValue = beforeUnloadCopy;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload, {\r\n      capture: true,\r\n    });\r\n    return () =>\r\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\r\n        capture: true,\r\n      });\r\n  }, []);\r\n\r\n  const getCharCount = () => {\r\n    const { value } = textareaRef.current;\r\n    const { value: spoilerText } = spoilerTextRef.current;\r\n    return stringLength(countableText(value)) + stringLength(spoilerText);\r\n  };\r\n  const updateCharCount = () => {\r\n    const count = getCharCount();\r\n    states.composerCharacterCount = count;\r\n  };\r\n  useEffect(updateCharCount, []);\r\n\r\n  const supportsCloseWatcher = window.CloseWatcher;\r\n  const escDownRef = useRef(false);\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      escDownRef.current = true;\r\n      // This won't be true if this event is already handled and not propagated 🤞\r\n    },\r\n    {\r\n      enabled: !supportsCloseWatcher,\r\n      enableOnFormTags: true,\r\n    },\r\n  );\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      if (!standalone && escDownRef.current && confirmClose()) {\r\n        onClose();\r\n      }\r\n      escDownRef.current = false;\r\n    },\r\n    {\r\n      enabled: !supportsCloseWatcher,\r\n      enableOnFormTags: true,\r\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\r\n      keyup: true,\r\n      ignoreEventWhen: (e) => {\r\n        const modals = document.querySelectorAll('#modal-container > *');\r\n        const hasModal = !!modals;\r\n        const hasOnlyComposer =\r\n          modals.length === 1 && modals[0].querySelector('#compose-container');\r\n        return hasModal && !hasOnlyComposer;\r\n      },\r\n    },\r\n  );\r\n  useCloseWatcher(() => {\r\n    if (!standalone && confirmClose()) {\r\n      onClose();\r\n    }\r\n  }, [standalone, confirmClose, onClose]);\r\n\r\n  const prevBackgroundDraft = useRef({});\r\n  const draftKey = () => {\r\n    const ns = getCurrentAccountNS();\r\n    return `${ns}#${UID.current}`;\r\n  };\r\n  const saveUnsavedDraft = () => {\r\n    // Not enabling this for editing status\r\n    // I don't think this warrant a draft mode for a status that's already posted\r\n    // Maybe it could be a big edit change but it should be rare\r\n    if (editStatus) return;\r\n    const key = draftKey();\r\n    const backgroundDraft = {\r\n      key,\r\n      replyTo: replyToStatus\r\n        ? {\r\n            /* Smaller payload of replyToStatus. Reasons:\r\n              - No point storing whole thing\r\n              - Could have media attachments\r\n              - Could be deleted/edited later\r\n            */\r\n            id: replyToStatus.id,\r\n            account: {\r\n              id: replyToStatus.account.id,\r\n              username: replyToStatus.account.username,\r\n              acct: replyToStatus.account.acct,\r\n            },\r\n          }\r\n        : null,\r\n      draftStatus: {\r\n        uid: UID.current,\r\n        status: textareaRef.current.value,\r\n        spoilerText: spoilerTextRef.current.value,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      },\r\n    };\r\n    if (\r\n      !deepEqual(backgroundDraft, prevBackgroundDraft.current) &&\r\n      !canClose()\r\n    ) {\r\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\r\n      db.drafts\r\n        .set(key, {\r\n          ...backgroundDraft,\r\n          state: 'unsaved',\r\n          updatedAt: Date.now(),\r\n        })\r\n        .then(() => {\r\n          console.debug('DRAFT saved', key, backgroundDraft);\r\n        })\r\n        .catch((e) => {\r\n          console.error('DRAFT failed', key, e);\r\n        });\r\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\r\n    }\r\n  };\r\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\r\n  useEffect(() => {\r\n    saveUnsavedDraft();\r\n    // If unmounted, means user discarded the draft\r\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\r\n    return () => {\r\n      db.drafts.del(draftKey());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleItems = (e) => {\r\n      const { items } = e.clipboardData || e.dataTransfer;\r\n      const files = [];\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        if (item.kind === 'file') {\r\n          const file = item.getAsFile();\r\n          if (file && supportedMimeTypes.includes(file.type)) {\r\n            files.push(file);\r\n          }\r\n        }\r\n      }\r\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\r\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n        return;\r\n      }\r\n      console.log({ files });\r\n      if (files.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\r\n        const max = maxMediaAttachments - mediaAttachments.length;\r\n        const allowedFiles = files.slice(0, max);\r\n        if (allowedFiles.length <= 0) {\r\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n          return;\r\n        }\r\n        const mediaFiles = allowedFiles.map((file) => ({\r\n          file,\r\n          type: file.type,\r\n          size: file.size,\r\n          url: URL.createObjectURL(file),\r\n          id: null,\r\n          description: null,\r\n        }));\r\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\r\n      }\r\n    };\r\n    window.addEventListener('paste', handleItems);\r\n    const handleDragover = (e) => {\r\n      // Prevent default if there's files\r\n      if (e.dataTransfer.items.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n    window.addEventListener('dragover', handleDragover);\r\n    window.addEventListener('drop', handleItems);\r\n    return () => {\r\n      window.removeEventListener('paste', handleItems);\r\n      window.removeEventListener('dragover', handleDragover);\r\n      window.removeEventListener('drop', handleItems);\r\n    };\r\n  }, [mediaAttachments]);\r\n\r\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\r\n\r\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\r\n    const topLanguages = [];\r\n    const restLanguages = [];\r\n    const { contentTranslationHideLanguages = [] } = states.settings;\r\n    supportedLanguages.forEach((l) => {\r\n      const [code] = l;\r\n      if (\r\n        code === language ||\r\n        code === prevLanguage.current ||\r\n        code === DEFAULT_LANG ||\r\n        contentTranslationHideLanguages.includes(code)\r\n      ) {\r\n        topLanguages.push(l);\r\n      } else {\r\n        restLanguages.push(l);\r\n      }\r\n    });\r\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\r\n      if (codeA === language) return -1;\r\n      if (codeB === language) return 1;\r\n      return commonA.localeCompare(commonB);\r\n    });\r\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\r\n      commonA.localeCompare(commonB),\r\n    );\r\n    return [topLanguages, restLanguages];\r\n  }, [language]);\r\n\r\n  return (\r\n    <div id=\"compose-container-outer\">\r\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\r\n        <div class=\"compose-top\">\r\n          {currentAccountInfo?.avatarStatic && (\r\n            // <Avatar\r\n            //   url={currentAccountInfo.avatarStatic}\r\n            //   size=\"xl\"\r\n            //   alt={currentAccountInfo.username}\r\n            //   squircle={currentAccountInfo?.bot}\r\n            // />\r\n            <AccountBlock\r\n              account={currentAccountInfo}\r\n              accountInstance={currentAccount.instanceURL}\r\n              hideDisplayName\r\n              useAvatarStatic\r\n            />\r\n          )}\r\n          {!standalone ? (\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  const newWin = openCompose({\r\n                    editStatus,\r\n                    replyToStatus,\r\n                    draftStatus: {\r\n                      uid: UID.current,\r\n                      status: textareaRef.current.value,\r\n                      spoilerText: spoilerTextRef.current.value,\r\n                      visibility,\r\n                      language,\r\n                      sensitive,\r\n                      poll,\r\n                      mediaAttachments,\r\n                    },\r\n                  });\r\n\r\n                  if (!newWin) {\r\n                    return;\r\n                  }\r\n\r\n                  onClose();\r\n                }}\r\n              >\r\n                <Icon icon=\"popout\" alt=\"Pop out\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"light close-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  if (confirmClose()) {\r\n                    onClose();\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon=\"x\" />\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            hasOpener && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  if (!window.opener) {\r\n                    alert('Looks like you closed the parent window.');\r\n                    return;\r\n                  }\r\n\r\n                  if (window.opener.__STATES__.showCompose) {\r\n                    const yes = confirm(\r\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\r\n                    );\r\n                    if (!yes) return;\r\n                  }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  onClose({\r\n                    fn: () => {\r\n                      const passData = {\r\n                        editStatus,\r\n                        replyToStatus,\r\n                        draftStatus: {\r\n                          uid: UID.current,\r\n                          status: textareaRef.current.value,\r\n                          spoilerText: spoilerTextRef.current.value,\r\n                          visibility,\r\n                          language,\r\n                          sensitive,\r\n                          poll,\r\n                          mediaAttachments,\r\n                        },\r\n                      };\r\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\r\n                      window.opener.__STATES__.showCompose = true;\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"popin\" alt=\"Pop in\" />\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n        {!!replyToStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={replyToStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend reply-to\">\r\n              Replying to @\r\n              {replyToStatus.account.acct || replyToStatus.account.username}\r\n              &rsquo;s post\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!!editStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={editStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend\">Editing source post</div>\r\n          </div>\r\n        )}\r\n        <form\r\n          ref={formRef}\r\n          class={`form-visibility-${visibility}`}\r\n          style={{\r\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\r\n            opacity: uiState === 'loading' ? 0.5 : 1,\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n              formRef.current.dispatchEvent(\r\n                new Event('submit', { cancelable: true }),\r\n              );\r\n            }\r\n          }}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(e.target);\r\n            const entries = Object.fromEntries(formData.entries());\r\n            console.log('ENTRIES', entries);\r\n            let { status, visibility, sensitive, spoilerText } = entries;\r\n\r\n            // Pre-cleanup\r\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\r\n\r\n            // Validation\r\n            /* Let the backend validate this\r\n          if (stringLength(status) > maxCharacters) {\r\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\r\n            return;\r\n          }\r\n          if (\r\n            sensitive &&\r\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\r\n          ) {\r\n            alert(\r\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\r\n            );\r\n            return;\r\n          }\r\n          */\r\n            if (poll) {\r\n              if (poll.options.length < 2) {\r\n                alert('Poll must have at least 2 options');\r\n                return;\r\n              }\r\n              if (poll.options.some((option) => option === '')) {\r\n                alert('Some poll choices are empty');\r\n                return;\r\n              }\r\n            }\r\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\r\n\r\n            if (mediaAttachments.length > 0) {\r\n              // If there are media attachments, check if they have no descriptions\r\n              const hasNoDescriptions = mediaAttachments.some(\r\n                (media) => !media.description?.trim?.(),\r\n              );\r\n              if (hasNoDescriptions) {\r\n                const yes = confirm(\r\n                  'Some media have no descriptions. Continue?',\r\n                );\r\n                if (!yes) return;\r\n              }\r\n            }\r\n\r\n            // Post-cleanup\r\n            spoilerText = (sensitive && spoilerText) || undefined;\r\n            status = status === '' ? undefined : status;\r\n\r\n            setUIState('loading');\r\n            (async () => {\r\n              try {\r\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\r\n                if (mediaAttachments.length > 0) {\r\n                  // Upload media attachments first\r\n                  const mediaPromises = mediaAttachments.map((attachment) => {\r\n                    const { file, description, id } = attachment;\r\n                    console.log('UPLOADING', attachment);\r\n                    if (id) {\r\n                      // If already uploaded\r\n                      return attachment;\r\n                    } else {\r\n                      const params = removeNullUndefined({\r\n                        file,\r\n                        description,\r\n                      });\r\n                      return masto.v2.media.create(params).then((res) => {\r\n                        if (res.id) {\r\n                          attachment.id = res.id;\r\n                        }\r\n                        return res;\r\n                      });\r\n                    }\r\n                  });\r\n                  const results = await Promise.allSettled(mediaPromises);\r\n\r\n                  // If any failed, return\r\n                  if (\r\n                    results.some((result) => {\r\n                      return result.status === 'rejected' || !result.value?.id;\r\n                    })\r\n                  ) {\r\n                    setUIState('error');\r\n                    // Alert all the reasons\r\n                    results.forEach((result) => {\r\n                      if (result.status === 'rejected') {\r\n                        console.error(result);\r\n                        alert(result.reason || `Attachment #${i} failed`);\r\n                      }\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  console.log({ results, mediaAttachments });\r\n                }\r\n\r\n                /* NOTE:\r\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\r\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\r\n\r\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\r\n              */\r\n                let params = {\r\n                  status,\r\n                  // spoilerText,\r\n                  spoiler_text: spoilerText,\r\n                  language,\r\n                  sensitive,\r\n                  poll,\r\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\r\n                  media_ids: mediaAttachments.map(\r\n                    (attachment) => attachment.id,\r\n                  ),\r\n                };\r\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\r\n                  params.media_attributes = mediaAttachments.map(\r\n                    (attachment) => {\r\n                      return {\r\n                        id: attachment.id,\r\n                        description: attachment.description,\r\n                        // focus\r\n                        // thumbnail\r\n                      };\r\n                    },\r\n                  );\r\n                } else if (!editStatus) {\r\n                  params.visibility = visibility;\r\n                  // params.inReplyToId = replyToStatus?.id || undefined;\r\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\r\n                }\r\n                params = removeNullUndefined(params);\r\n                console.log('POST', params);\r\n\r\n                let newStatus;\r\n                if (editStatus) {\r\n                  newStatus = await masto.v1.statuses\r\n                    .$select(editStatus.id)\r\n                    .update(params);\r\n                  saveStatus(newStatus, instance, {\r\n                    skipThreading: true,\r\n                  });\r\n                } else {\r\n                  try {\r\n                    newStatus = await masto.v1.statuses.create(params, {\r\n                      idempotencyKey: UID.current,\r\n                    });\r\n                  } catch (_) {\r\n                    // If idempotency key fails, try again without it\r\n                    newStatus = await masto.v1.statuses.create(params);\r\n                  }\r\n                }\r\n                setUIState('default');\r\n\r\n                // Close\r\n                onClose({\r\n                  // type: post, reply, edit\r\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\r\n                  newStatus,\r\n                  instance,\r\n                });\r\n              } catch (e) {\r\n                console.error(e);\r\n                alert(e?.reason || e);\r\n                setUIState('error');\r\n              }\r\n            })();\r\n          }}\r\n        >\r\n          <div class=\"toolbar stretch\">\r\n            <input\r\n              ref={spoilerTextRef}\r\n              type=\"text\"\r\n              name=\"spoilerText\"\r\n              placeholder=\"Content warning\"\r\n              disabled={uiState === 'loading'}\r\n              class=\"spoiler-text-field\"\r\n              lang={language}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              style={{\r\n                opacity: sensitive ? 1 : 0,\r\n                pointerEvents: sensitive ? 'auto' : 'none',\r\n              }}\r\n              onInput={() => {\r\n                updateCharCount();\r\n              }}\r\n            />\r\n            <label\r\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\r\n              title=\"Content warning or sensitive media\"\r\n            >\r\n              <input\r\n                name=\"sensitive\"\r\n                type=\"checkbox\"\r\n                checked={sensitive}\r\n                disabled={uiState === 'loading'}\r\n                onChange={(e) => {\r\n                  const sensitive = e.target.checked;\r\n                  setSensitive(sensitive);\r\n                  if (sensitive) {\r\n                    spoilerTextRef.current?.focus();\r\n                  } else {\r\n                    textareaRef.current?.focus();\r\n                  }\r\n                }}\r\n              />\r\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n            </label>{' '}\r\n            <label\r\n              class={`toolbar-button ${\r\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\r\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\r\n              title={`Visibility: ${visibility}`}\r\n            >\r\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\r\n              <select\r\n                name=\"visibility\"\r\n                value={visibility}\r\n                onChange={(e) => {\r\n                  setVisibility(e.target.value);\r\n                }}\r\n                disabled={uiState === 'loading' || !!editStatus}\r\n              >\r\n                <option value=\"public\">\r\n                  Public <Icon icon=\"earth\" />\r\n                </option>\r\n                <option value=\"unlisted\">Unlisted</option>\r\n                <option value=\"private\">Followers only</option>\r\n                <option value=\"direct\">Private mention</option>\r\n              </select>\r\n            </label>{' '}\r\n          </div>\r\n          <Textarea\r\n            ref={textareaRef}\r\n            placeholder={\r\n              replyToStatus\r\n                ? 'Post your reply'\r\n                : editStatus\r\n                ? 'Edit your post'\r\n                : 'What are you doing?'\r\n            }\r\n            required={mediaAttachments?.length === 0}\r\n            disabled={uiState === 'loading'}\r\n            lang={language}\r\n            onInput={() => {\r\n              updateCharCount();\r\n            }}\r\n            maxCharacters={maxCharacters}\r\n            performSearch={(params) => {\r\n              const { type, q, limit } = params;\r\n              if (type === 'accounts') {\r\n                return masto.v1.accounts.search.list({\r\n                  q,\r\n                  limit,\r\n                  resolve: false,\r\n                });\r\n              }\r\n              return masto.v2.search.fetch(params);\r\n            }}\r\n          />\r\n          {mediaAttachments?.length > 0 && (\r\n            <div class=\"media-attachments\">\r\n              {mediaAttachments.map((attachment, i) => {\r\n                const { id, file } = attachment;\r\n                const fileID = file?.size + file?.type + file?.name;\r\n                return (\r\n                  <MediaAttachment\r\n                    key={id || fileID || i}\r\n                    attachment={attachment}\r\n                    disabled={uiState === 'loading'}\r\n                    lang={language}\r\n                    onDescriptionChange={(value) => {\r\n                      setMediaAttachments((attachments) => {\r\n                        const newAttachments = [...attachments];\r\n                        newAttachments[i].description = value;\r\n                        return newAttachments;\r\n                      });\r\n                    }}\r\n                    onRemove={() => {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.filter((_, j) => j !== i);\r\n                      });\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n              <label class=\"media-sensitive\">\r\n                <input\r\n                  name=\"sensitive\"\r\n                  type=\"checkbox\"\r\n                  checked={sensitive}\r\n                  disabled={uiState === 'loading'}\r\n                  onChange={(e) => {\r\n                    const sensitive = e.target.checked;\r\n                    setSensitive(sensitive);\r\n                  }}\r\n                />{' '}\r\n                <span>Mark media as sensitive</span>{' '}\r\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n              </label>\r\n            </div>\r\n          )}\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              maxOptions={maxOptions}\r\n              maxExpiration={maxExpiration}\r\n              minExpiration={minExpiration}\r\n              maxCharactersPerOption={maxCharactersPerOption}\r\n              poll={poll}\r\n              disabled={uiState === 'loading'}\r\n              onInput={(poll) => {\r\n                if (poll) {\r\n                  const newPoll = { ...poll };\r\n                  setPoll(newPoll);\r\n                } else {\r\n                  setPoll(null);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          <div\r\n            class=\"toolbar wrap\"\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span>\r\n              <label class=\"toolbar-button\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept={supportedMimeTypes.join(',')}\r\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\r\n                  disabled={\r\n                    uiState === 'loading' ||\r\n                    mediaAttachments.length >= maxMediaAttachments ||\r\n                    !!poll\r\n                  }\r\n                  onChange={(e) => {\r\n                    const files = e.target.files;\r\n                    if (!files) return;\r\n\r\n                    const mediaFiles = Array.from(files).map((file) => ({\r\n                      file,\r\n                      type: file.type,\r\n                      size: file.size,\r\n                      url: URL.createObjectURL(file),\r\n                      id: null, // indicate uploaded state\r\n                      description: null,\r\n                    }));\r\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\r\n\r\n                    // Validate max media attachments\r\n                    if (\r\n                      mediaAttachments.length + mediaFiles.length >\r\n                      maxMediaAttachments\r\n                    ) {\r\n                      alert(\r\n                        `You can only attach up to ${maxMediaAttachments} files.`,\r\n                      );\r\n                    } else {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.concat(mediaFiles);\r\n                      });\r\n                    }\r\n                    // Reset\r\n                    e.target.value = '';\r\n                  }}\r\n                />\r\n                <Icon icon=\"attachment\" />\r\n              </label>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={\r\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\r\n                }\r\n                onClick={() => {\r\n                  setPoll({\r\n                    options: ['', ''],\r\n                    expiresIn: 24 * 60 * 60, // 1 day\r\n                    multiple: false,\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"poll\" alt=\"Add poll\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  setShowEmoji2Picker(true);\r\n                }}\r\n              >\r\n                <Icon icon=\"emoji2\" />\r\n              </button>\r\n            </span>\r\n            <div class=\"spacer\" />\r\n            {uiState === 'loading' ? (\r\n              <Loader abrupt />\r\n            ) : (\r\n              <CharCountMeter\r\n                maxCharacters={maxCharacters}\r\n                hidden={uiState === 'loading'}\r\n              />\r\n            )}\r\n            <label\r\n              class={`toolbar-button ${\r\n                language !== prevLanguage.current ? 'highlight' : ''\r\n              }`}\r\n            >\r\n              <span class=\"icon-text\">\r\n                {supportedLanguagesMap[language]?.native}\r\n              </span>\r\n              <select\r\n                name=\"language\"\r\n                value={language}\r\n                onChange={(e) => {\r\n                  const { value } = e.target;\r\n                  setLanguage(value || DEFAULT_LANG);\r\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\r\n                }}\r\n                disabled={uiState === 'loading'}\r\n              >\r\n                {topSupportedLanguages.map(([code, common, native]) => (\r\n                  <option value={code} key={code}>\r\n                    {common} ({native})\r\n                  </option>\r\n                ))}\r\n                <hr />\r\n                {restSupportedLanguages.map(([code, common, native]) => (\r\n                  <option value={code} key={code}>\r\n                    {common} ({native})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>{' '}\r\n            <button\r\n              type=\"submit\"\r\n              class=\"large\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showEmoji2Picker && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEmoji2Picker(false);\r\n            }\r\n          }}\r\n        >\r\n          <CustomEmojisModal\r\n            masto={masto}\r\n            instance={instance}\r\n            onClose={() => {\r\n              setShowEmoji2Picker(false);\r\n            }}\r\n            onSelect={(emoji) => {\r\n              const emojiWithSpace = ` ${emoji} `;\r\n              const textarea = textareaRef.current;\r\n              if (!textarea) return;\r\n              const { selectionStart, selectionEnd } = textarea;\r\n              const text = textarea.value;\r\n              const newText =\r\n                text.slice(0, selectionStart) +\r\n                emojiWithSpace +\r\n                text.slice(selectionEnd);\r\n              textarea.value = newText;\r\n              textarea.selectionStart = textarea.selectionEnd =\r\n                selectionEnd + emojiWithSpace.length;\r\n              textarea.focus();\r\n              textarea.dispatchEvent(new Event('input'));\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction autoResizeTextarea(textarea) {\r\n  if (!textarea) return;\r\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\r\n  if (offsetHeight < window.innerHeight) {\r\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\r\n    // No idea why it does that, will re-investigate in far future\r\n    const offset = offsetHeight - clientHeight;\r\n    const height = value ? scrollHeight + offset + 'px' : null;\r\n    textarea.style.height = height;\r\n  }\r\n}\r\n\r\nconst Textarea = forwardRef((props, ref) => {\r\n  const { masto } = api();\r\n  const [text, setText] = useState(ref.current?.value || '');\r\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\r\n  // const snapStates = useSnapshot(states);\r\n  // const charCount = snapStates.composerCharacterCount;\r\n\r\n  const customEmojis = useRef();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        console.log({ emojis });\r\n        customEmojis.current = emojis;\r\n      } catch (e) {\r\n        // silent fail\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const textExpanderRef = useRef();\r\n  const textExpanderTextRef = useRef('');\r\n  useEffect(() => {\r\n    let handleChange, handleValue, handleCommited;\r\n    if (textExpanderRef.current) {\r\n      handleChange = (e) => {\r\n        // console.log('text-expander-change', e);\r\n        const { key, provide, text } = e.detail;\r\n        textExpanderTextRef.current = text;\r\n\r\n        if (text === '') {\r\n          provide(\r\n            Promise.resolve({\r\n              matched: false,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (key === ':') {\r\n          // const emojis = customEmojis.current.filter((emoji) =>\r\n          //   emoji.shortcode.startsWith(text),\r\n          // );\r\n          const emojis = filterShortcodes(customEmojis.current, text);\r\n          let html = '';\r\n          emojis.forEach((emoji) => {\r\n            const { shortcode, url } = emoji;\r\n            html += `\r\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\r\n                <img src=\"${encodeHTML(\r\n                  url,\r\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \r\n                :${encodeHTML(shortcode)}:\r\n              </li>`;\r\n          });\r\n          // console.log({ emojis, html });\r\n          menu.innerHTML = html;\r\n          provide(\r\n            Promise.resolve({\r\n              matched: emojis.length > 0,\r\n              fragment: menu,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        const type = {\r\n          '@': 'accounts',\r\n          '#': 'hashtags',\r\n        }[key];\r\n        provide(\r\n          new Promise((resolve) => {\r\n            const searchResults = performSearch({\r\n              type,\r\n              q: text,\r\n              limit: 5,\r\n            });\r\n            searchResults.then((value) => {\r\n              if (text !== textExpanderTextRef.current) {\r\n                return;\r\n              }\r\n              console.log({ value, type, v: value[type] });\r\n              const results = value[type] || value;\r\n              console.log('RESULTS', value, results);\r\n              let html = '';\r\n              results.forEach((result) => {\r\n                const {\r\n                  name,\r\n                  avatarStatic,\r\n                  displayName,\r\n                  username,\r\n                  acct,\r\n                  emojis,\r\n                  history,\r\n                } = result;\r\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\r\n                // const item = menuItem.cloneNode();\r\n                if (acct) {\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\r\n                      <span class=\"avatar\">\r\n                        <img src=\"${encodeHTML(\r\n                          avatarStatic,\r\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\r\n                      </span>\r\n                      <span>\r\n                        <b>${displayNameWithEmoji || username}</b>\r\n                        <br>@${encodeHTML(acct)}\r\n                      </span>\r\n                    </li>\r\n                  `;\r\n                } else {\r\n                  const total = history?.reduce?.(\r\n                    (acc, cur) => acc + +cur.uses,\r\n                    0,\r\n                  );\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\r\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\r\n                      ${\r\n                        total\r\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\r\n                          : ''\r\n                      }\r\n                    </li>\r\n                  `;\r\n                }\r\n                menu.innerHTML = html;\r\n              });\r\n              console.log('MENU', results, menu);\r\n              resolve({\r\n                matched: results.length > 0,\r\n                fragment: menu,\r\n              });\r\n            });\r\n          }),\r\n        );\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-change',\r\n        handleChange,\r\n      );\r\n\r\n      handleValue = (e) => {\r\n        const { key, item } = e.detail;\r\n        if (key === ':') {\r\n          e.detail.value = `:${item.dataset.value}:`;\r\n        } else {\r\n          e.detail.value = `${key}${item.dataset.value}`;\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-value',\r\n        handleValue,\r\n      );\r\n\r\n      handleCommited = (e) => {\r\n        const { input } = e.detail;\r\n        setText(input.value);\r\n        // fire input event\r\n        if (ref.current) {\r\n          const event = new Event('input', { bubbles: true });\r\n          ref.current.dispatchEvent(event);\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-committed',\r\n        handleCommited,\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (textExpanderRef.current) {\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-change',\r\n          handleChange,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-value',\r\n          handleValue,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-committed',\r\n          handleCommited,\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Resize observer for textarea\r\n    const textarea = ref.current;\r\n    if (!textarea) return;\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      // Get height of textarea, set height to textExpander\r\n      if (textExpanderRef.current) {\r\n        const { height } = textarea.getBoundingClientRect();\r\n        textExpanderRef.current.style.height = height + 'px';\r\n      }\r\n    });\r\n    resizeObserver.observe(textarea);\r\n  }, []);\r\n\r\n  const slowHighlightPerf = useRef(0); // increment if slow\r\n  const composeHighlightRef = useRef();\r\n  const throttleHighlightText = useThrottledCallback((text) => {\r\n    if (!composeHighlightRef.current) return;\r\n    if (slowHighlightPerf.current > 3) {\r\n      // After 3 times of lag, disable highlighting\r\n      composeHighlightRef.current.innerHTML = '';\r\n      composeHighlightRef.current = null; // Destroy the whole thing\r\n      throttleHighlightText?.cancel?.();\r\n      return;\r\n    }\r\n    let start;\r\n    let end;\r\n    if (slowHighlightPerf.current <= 3) start = Date.now();\r\n    composeHighlightRef.current.innerHTML =\r\n      highlightText(text, {\r\n        maxCharacters,\r\n      }) + '\\n';\r\n    if (slowHighlightPerf.current <= 3) end = Date.now();\r\n    console.debug('HIGHLIGHT PERF', { start, end, diff: end - start });\r\n    if (start && end && end - start > 50) {\r\n      // if slow, increment\r\n      slowHighlightPerf.current++;\r\n    }\r\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\r\n  }, 500);\r\n\r\n  return (\r\n    <text-expander\r\n      ref={textExpanderRef}\r\n      keys=\"@ # :\"\r\n      class=\"compose-field-container\"\r\n    >\r\n      <textarea\r\n        class=\"compose-field\"\r\n        autoCapitalize=\"sentences\"\r\n        autoComplete=\"on\"\r\n        autoCorrect=\"on\"\r\n        spellCheck=\"true\"\r\n        dir=\"auto\"\r\n        rows=\"6\"\r\n        cols=\"50\"\r\n        {...textareaProps}\r\n        ref={ref}\r\n        name=\"status\"\r\n        value={text}\r\n        onKeyDown={(e) => {\r\n          // Get line before cursor position after pressing 'Enter'\r\n          const { key, target } = e;\r\n          if (key === 'Enter') {\r\n            try {\r\n              const { value, selectionStart } = target;\r\n              const textBeforeCursor = value.slice(0, selectionStart);\r\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\r\n              if (lastLine) {\r\n                // If line starts with \"- \" or \"12. \"\r\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\r\n                  // insert \"- \" at cursor position\r\n                  const [_, preSpaces, bullet, postSpaces, anything] =\r\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\r\n                  if (anything) {\r\n                    e.preventDefault();\r\n                    const [number] = bullet.match(/\\d+/) || [];\r\n                    const newBullet = number ? `${+number + 1}.` : '-';\r\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\r\n                    target.setRangeText(text, selectionStart, selectionStart);\r\n                    const pos = selectionStart + text.length;\r\n                    target.setSelectionRange(pos, pos);\r\n                  } else {\r\n                    // trim the line before the cursor, then insert new line\r\n                    const pos = selectionStart - lastLine.length;\r\n                    target.setRangeText('', pos, selectionStart);\r\n                  }\r\n                  autoResizeTextarea(target);\r\n                  target.dispatchEvent(new Event('input'));\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // silent fail\r\n              console.error(e);\r\n            }\r\n          }\r\n          if (composeHighlightRef.current) {\r\n            composeHighlightRef.current.scrollTop = target.scrollTop;\r\n          }\r\n        }}\r\n        onInput={(e) => {\r\n          const { target } = e;\r\n          const text = target.value;\r\n          setText(text);\r\n          autoResizeTextarea(target);\r\n          props.onInput?.(e);\r\n          throttleHighlightText(text);\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          height: '4em',\r\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\r\n        }}\r\n        onScroll={(e) => {\r\n          if (composeHighlightRef.current) {\r\n            const { scrollTop } = e.target;\r\n            composeHighlightRef.current.scrollTop = scrollTop;\r\n          }\r\n        }}\r\n      />\r\n      <div\r\n        ref={composeHighlightRef}\r\n        class=\"compose-highlight\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </text-expander>\r\n  );\r\n});\r\n\r\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\r\n  const snapStates = useSnapshot(states);\r\n  const charCount = snapStates.composerCharacterCount;\r\n  const leftChars = maxCharacters - charCount;\r\n  if (hidden) {\r\n    return <meter class=\"donut\" hidden />;\r\n  }\r\n  return (\r\n    <meter\r\n      class={`donut ${\r\n        leftChars <= -10\r\n          ? 'explode'\r\n          : leftChars <= 0\r\n          ? 'danger'\r\n          : leftChars <= 20\r\n          ? 'warning'\r\n          : ''\r\n      }`}\r\n      value={charCount}\r\n      max={maxCharacters}\r\n      data-left={leftChars}\r\n      title={`${leftChars}/${maxCharacters}`}\r\n      style={{\r\n        '--percentage': (charCount / maxCharacters) * 100,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction MediaAttachment({\r\n  attachment,\r\n  disabled,\r\n  lang,\r\n  onDescriptionChange = () => {},\r\n  onRemove = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\r\n  const { type, id, file } = attachment;\r\n  const url = useMemo(\r\n    () => (file ? URL.createObjectURL(file) : attachment.url),\r\n    [file, attachment.url],\r\n  );\r\n  console.log({ attachment });\r\n  const [description, setDescription] = useState(attachment.description);\r\n  const [suffixType, subtype] = type.split('/');\r\n  const debouncedOnDescriptionChange = useDebouncedCallback(\r\n    onDescriptionChange,\r\n    250,\r\n  );\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const textareaRef = useRef(null);\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showModal && textareaRef.current) {\r\n      timer = setTimeout(() => {\r\n        textareaRef.current.focus();\r\n      }, 100);\r\n    }\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [showModal]);\r\n\r\n  const descTextarea = (\r\n    <>\r\n      {!!id && !supportsEdit ? (\r\n        <div class=\"media-desc\">\r\n          <span class=\"tag\">Uploaded</span>\r\n          <p title={description}>\r\n            {attachment.description || <i>No description</i>}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={description || ''}\r\n          lang={lang}\r\n          placeholder={\r\n            {\r\n              image: 'Image description',\r\n              video: 'Video description',\r\n              audio: 'Audio description',\r\n            }[suffixType]\r\n          }\r\n          autoCapitalize=\"sentences\"\r\n          autoComplete=\"on\"\r\n          autoCorrect=\"on\"\r\n          spellCheck=\"true\"\r\n          dir=\"auto\"\r\n          disabled={disabled || uiState === 'loading'}\r\n          class={uiState === 'loading' ? 'loading' : ''}\r\n          maxlength=\"1500\" // Not unicode-aware :(\r\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\r\n          onInput={(e) => {\r\n            const { value } = e.target;\r\n            setDescription(value);\r\n            debouncedOnDescriptionChange(value);\r\n          }}\r\n        ></textarea>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const toastRef = useRef(null);\r\n  useEffect(() => {\r\n    return () => {\r\n      toastRef.current?.hideToast?.();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"media-attachment\">\r\n        <div\r\n          class=\"media-preview\"\r\n          tabIndex=\"0\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          {suffixType === 'image' ? (\r\n            <img src={url} alt=\"\" />\r\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n            <video src={url} playsinline muted />\r\n          ) : suffixType === 'audio' ? (\r\n            <audio src={url} controls />\r\n          ) : null}\r\n        </div>\r\n        {descTextarea}\r\n        <div class=\"media-aside\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain close-button\"\r\n            disabled={disabled}\r\n            onClick={onRemove}\r\n          >\r\n            <Icon icon=\"x\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowModal(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <h2>\r\n                {\r\n                  {\r\n                    image: 'Edit image description',\r\n                    video: 'Edit video description',\r\n                    audio: 'Edit audio description',\r\n                  }[suffixType]\r\n                }\r\n              </h2>\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <div class=\"media-preview\">\r\n                {suffixType === 'image' ? (\r\n                  <img src={url} alt=\"\" />\r\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n                  <video src={url} playsinline controls />\r\n                ) : suffixType === 'audio' ? (\r\n                  <audio src={url} controls />\r\n                ) : null}\r\n              </div>\r\n              <div class=\"media-form\">\r\n                {descTextarea}\r\n                <footer>\r\n                  {suffixType === 'image' &&\r\n                    /^(png|jpe?g|gif|webp)$/i.test(subtype) &&\r\n                    !!states.settings.mediaAltGenerator &&\r\n                    !!IMG_ALT_API_URL && (\r\n                      <Menu2\r\n                        portal={{\r\n                          target: document.body,\r\n                        }}\r\n                        containerProps={{\r\n                          style: {\r\n                            zIndex: 1001,\r\n                          },\r\n                        }}\r\n                        align=\"center\"\r\n                        position=\"anchor\"\r\n                        overflow=\"auto\"\r\n                        menuButton={\r\n                          <button type=\"button\" title=\"More\" class=\"plain\">\r\n                            <Icon icon=\"more\" size=\"l\" alt=\"More\" />\r\n                          </button>\r\n                        }\r\n                      >\r\n                        <MenuItem\r\n                          disabled={uiState === 'loading'}\r\n                          onClick={() => {\r\n                            setUIState('loading');\r\n                            toastRef.current = showToast({\r\n                              text: 'Generating description. Please wait...',\r\n                              duration: -1,\r\n                            });\r\n                            // POST with multipart\r\n                            (async function () {\r\n                              try {\r\n                                const body = new FormData();\r\n                                body.append('image', file);\r\n                                const response = await fetch(IMG_ALT_API_URL, {\r\n                                  method: 'POST',\r\n                                  body,\r\n                                }).then((r) => r.json());\r\n                                if (response.error) {\r\n                                  throw new Error(response.error);\r\n                                }\r\n                                setDescription(response.description);\r\n                              } catch (e) {\r\n                                console.error(e);\r\n                                showToast(\r\n                                  `Failed to generate description${\r\n                                    e?.message ? `: ${e.message}` : ''\r\n                                  }`,\r\n                                );\r\n                              } finally {\r\n                                setUIState('default');\r\n                                toastRef.current?.hideToast?.();\r\n                              }\r\n                            })();\r\n                          }}\r\n                        >\r\n                          <Icon icon=\"sparkles2\" />\r\n                          <span>Generate description…</span>\r\n                        </MenuItem>\r\n                      </Menu2>\r\n                    )}\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"light block\"\r\n                    onClick={() => {\r\n                      setShowModal(false);\r\n                    }}\r\n                    disabled={uiState === 'loading'}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Poll({\r\n  lang,\r\n  poll,\r\n  disabled,\r\n  onInput = () => {},\r\n  maxOptions,\r\n  maxExpiration,\r\n  minExpiration,\r\n  maxCharactersPerOption,\r\n}) {\r\n  const { options, expiresIn, multiple } = poll;\r\n\r\n  return (\r\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\r\n      <div class=\"poll-choices\">\r\n        {options.map((option, i) => (\r\n          <div class=\"poll-choice\" key={i}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={option}\r\n              disabled={disabled}\r\n              maxlength={maxCharactersPerOption}\r\n              placeholder={`Choice ${i + 1}`}\r\n              lang={lang}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              onInput={(e) => {\r\n                const { value } = e.target;\r\n                options[i] = value;\r\n                onInput(poll);\r\n              }}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"plain2 poll-button\"\r\n              disabled={disabled || options.length <= 1}\r\n              onClick={() => {\r\n                options.splice(i, 1);\r\n                onInput(poll);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" size=\"s\" />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain2 poll-button\"\r\n          disabled={disabled || options.length >= maxOptions}\r\n          onClick={() => {\r\n            options.push('');\r\n            onInput(poll);\r\n          }}\r\n        >\r\n          +\r\n        </button>{' '}\r\n        <label class=\"multiple-choices\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={multiple}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { checked } = e.target;\r\n              poll.multiple = checked;\r\n              onInput(poll);\r\n            }}\r\n          />{' '}\r\n          Multiple choices\r\n        </label>\r\n        <label class=\"expires-in\">\r\n          Duration{' '}\r\n          <select\r\n            value={expiresIn}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n              poll.expiresIn = value;\r\n              onInput(poll);\r\n            }}\r\n          >\r\n            {Object.entries(expiryOptions)\r\n              .filter(([label, value]) => {\r\n                return value >= minExpiration && value <= maxExpiration;\r\n              })\r\n              .map(([label, value]) => (\r\n                <option value={value} key={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain remove-poll-button\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            onInput(null);\r\n          }}\r\n        >\r\n          Remove poll\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction filterShortcodes(emojis, searchTerm) {\r\n  searchTerm = searchTerm.toLowerCase();\r\n\r\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\r\n  return emojis\r\n    .sort((a, b) => {\r\n      let aLower = a.shortcode.toLowerCase();\r\n      let bLower = b.shortcode.toLowerCase();\r\n\r\n      let aStartsWith = aLower.startsWith(searchTerm);\r\n      let bStartsWith = bLower.startsWith(searchTerm);\r\n      let aContains = aLower.includes(searchTerm);\r\n      let bContains = bLower.includes(searchTerm);\r\n      let bothStartWith = aStartsWith && bStartsWith;\r\n      let bothContain = aContains && bContains;\r\n\r\n      return bothStartWith\r\n        ? a.length - b.length\r\n        : aStartsWith\r\n        ? -1\r\n        : bStartsWith\r\n        ? 1\r\n        : bothContain\r\n        ? a.length - b.length\r\n        : aContains\r\n        ? -1\r\n        : bContains\r\n        ? 1\r\n        : 0;\r\n    })\r\n    .slice(0, 5);\r\n}\r\n\r\nfunction encodeHTML(str) {\r\n  return str.replace(/[&<>\"']/g, function (char) {\r\n    return '&#' + char.charCodeAt(0) + ';';\r\n  });\r\n}\r\n\r\nfunction removeNullUndefined(obj) {\r\n  for (let key in obj) {\r\n    if (obj[key] === null || obj[key] === undefined) {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction CustomEmojisModal({\r\n  masto,\r\n  instance,\r\n  onClose = () => {},\r\n  onSelect = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const customEmojisList = useRef([]);\r\n  const [customEmojis, setCustomEmojis] = useState({});\r\n  const recentlyUsedCustomEmojis = useMemo(\r\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\r\n  );\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        // Group emojis by category\r\n        const emojisCat = {\r\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\r\n            emojis.find((e) => e.shortcode === emoji.shortcode),\r\n          ),\r\n        };\r\n        const othersCat = [];\r\n        emojis.forEach((emoji) => {\r\n          if (!emoji.visibleInPicker) return;\r\n          customEmojisList.current?.push?.(emoji);\r\n          if (!emoji.category) {\r\n            othersCat.push(emoji);\r\n            return;\r\n          }\r\n          if (!emojisCat[emoji.category]) {\r\n            emojisCat[emoji.category] = [];\r\n          }\r\n          emojisCat[emoji.category].push(emoji);\r\n        });\r\n        if (othersCat.length) {\r\n          emojisCat['--others--'] = othersCat;\r\n        }\r\n        setCustomEmojis(emojisCat);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <b>Custom emojis</b>{' '}\r\n        {uiState === 'loading' ? (\r\n          <Loader />\r\n        ) : (\r\n          <small class=\"insignificant\"> • {instance}</small>\r\n        )}\r\n      </header>\r\n      <main>\r\n        <div class=\"custom-emojis-list\">\r\n          {uiState === 'error' && (\r\n            <div class=\"ui-state\">\r\n              <p>Error loading custom emojis</p>\r\n            </div>\r\n          )}\r\n          {uiState === 'default' &&\r\n            Object.entries(customEmojis).map(\r\n              ([category, emojis]) =>\r\n                !!emojis?.length && (\r\n                  <>\r\n                    <div class=\"section-header\">\r\n                      {{\r\n                        '--recent--': 'Recently used',\r\n                        '--others--': 'Others',\r\n                      }[category] || category}\r\n                    </div>\r\n                    <section>\r\n                      {emojis.map((emoji) => (\r\n                        <button\r\n                          key={emoji}\r\n                          type=\"button\"\r\n                          class=\"plain4\"\r\n                          onClick={() => {\r\n                            onClose();\r\n                            requestAnimationFrame(() => {\r\n                              onSelect(`:${emoji.shortcode}:`);\r\n                            });\r\n                            let recentlyUsedCustomEmojis =\r\n                              store.account.get('recentlyUsedCustomEmojis') ||\r\n                              [];\r\n                            const recentlyUsedEmojiIndex =\r\n                              recentlyUsedCustomEmojis.findIndex(\r\n                                (e) => e.shortcode === emoji.shortcode,\r\n                              );\r\n                            if (recentlyUsedEmojiIndex !== -1) {\r\n                              // Move emoji to index 0\r\n                              recentlyUsedCustomEmojis.splice(\r\n                                recentlyUsedEmojiIndex,\r\n                                1,\r\n                              );\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                            } else {\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                              // Remove unavailable ones\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.filter((e) =>\r\n                                  customEmojisList.current?.find?.(\r\n                                    (emoji) => emoji.shortcode === e.shortcode,\r\n                                  ),\r\n                                );\r\n                              // Limit to 10\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.slice(0, 10);\r\n                            }\r\n\r\n                            // Store back\r\n                            store.account.set(\r\n                              'recentlyUsedCustomEmojis',\r\n                              recentlyUsedCustomEmojis,\r\n                            );\r\n                          }}\r\n                          title={`:${emoji.shortcode}:`}\r\n                        >\r\n                          <picture>\r\n                            {!!emoji.staticUrl && (\r\n                              <source\r\n                                srcset={emoji.staticUrl}\r\n                                media=\"(prefers-reduced-motion: reduce)\"\r\n                              />\r\n                            )}\r\n                            <img\r\n                              class=\"shortcode-emoji\"\r\n                              src={emoji.url || emoji.staticUrl}\r\n                              alt={emoji.shortcode}\r\n                              width=\"16\"\r\n                              height=\"16\"\r\n                              loading=\"lazy\"\r\n                              decoding=\"async\"\r\n                            />\r\n                          </picture>\r\n                        </button>\r\n                      ))}\r\n                    </section>\r\n                  </>\r\n                ),\r\n            )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compose;\r\n","import { useLayoutEffect } from 'preact/hooks';\r\nimport { matchPath } from 'react-router-dom';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport states from './states';\r\n\r\nconst { PHANPY_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\r\n\r\nexport default function useTitle(title, path) {\r\n  function setTitle() {\r\n    const { currentLocation } = states;\r\n    const hasPaths = Array.isArray(path);\r\n    let paths = hasPaths ? path : [];\r\n    // Workaround for matchPath not working for optional path segments\r\n    // https://github.com/remix-run/react-router/discussions/9862\r\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\r\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\r\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\r\n    }\r\n    let matched = false;\r\n    if (paths.length) {\r\n      matched = paths.some((p) => matchPath(p, currentLocation));\r\n    } else if (path) {\r\n      matched = matchPath(path, currentLocation);\r\n    }\r\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\r\n    if (matched) {\r\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const unsub = subscribeKey(states, 'currentLocation', setTitle);\r\n    setTitle();\r\n    return unsub;\r\n  }, [title, path]);\r\n}\r\n"],"file":"assets/useTitle-UYZx9-4N.js"}