{"version":3,"mappings":"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","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getCurrentAccount","window","__IGNORE_GET_ACCOUNT_ERROR__","import","currentAccount","getCurrentAccountNS","account","instanceURL","saveAccount","acc","vapidKey","set","accountInfo","updateAccount","currentInstance","getCurrentInstance","instances","instance","e","console","alert","configuration","maxMediaAttachments","maxTootChars","pleroma","pollLimits","statuses","polls","maxCharactersPerOption","getInstanceConfiguration","get","key","localStorage","getItem","JSON","value","setJSON","warn","session","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","toLowerCase","url","client","masto","createRestAPIClient","timeout","initInstance","uri","streamingApi","urls","domain","streaming","streamClient","createStreamingAPIClient","implementation","initAccount","mastoAccount","initPreferences","preferences","accountID","authenticated","_b","_c","_d","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","_moize","moize","mem","fn","opts","maxSize","isDeepEqual","pmem","isPromise","states","proxy","appVersion","prevLocation","currentLocation","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","reloadGenericAccounts","counter","spoilers","scrollPositions","unfurledLinks","statusQuotes","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","showKeyboardShortcutsHelp","showGenericAccounts","showMediaAlt","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","cloakMode","initStates","subscribeKey","v","subscribe","changes","prevValue","path","statusKey","getStatus","statusID","saveStatus","status","skipThreading","override","Object","oldStatus","_pinned","threadifyStatus","requestAnimationFrame","propInstance","api","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","Promise","useInterval","deps","immediate","savedCallback","useRef","useEffect","current","setInterval","tick","clearInterval","openCompose","URL","location","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","SIZES","s","m","l","xl","xxl","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","comment2","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","bus","link","history","share","sparkles","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","Icon","icon","size","alt","title","class","style","iconSize","iconBlock","rotate","flip","Array","isArray","iconData","setIconData","useState","default","_jsx","children","viewBox","dangerouslySetInnerHTML","__html","body","transform","memo","$modalContainer","document","getElementById","Modal","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","escRef","useHotkeys","enabled","keydown","keyup","ref","node","target","currentTarget","tabIndex","onFocus","createPortal","Loader","abrupt","hidden","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","Avatar","squircle","avatarRef","isMissing","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","drawImage","allPixels","getImageData","hasAlpha","pixel","i","length","classList","add","clearRect","Link","forwardRef","routerLocation","useLocation","hash","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","encodeURIComponent","join","pathname","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","root","documentElement","getComputedStyle","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","safeBoundingBoxPadding","paddings","CSS","supports","addEventListener","passive","Menu2","containerProps","instanceRef","_instanceRef","useWindowSize","Menu","boundingBoxPadding","repositionFlag","unmountOnClose","closeMenu","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","menuRef","_jsxs","openTrigger","direction","overflow","gap","shift","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","EmojiText","emojis","indexOf","regex","RegExp","shortcode","elements","split","word","emoji","staticUrl","srcset","NameText","showAvatar","showAcct","short","acct","avatar","avatarStatic","displayName","username","_","acct1","acct2","match","trimmedUsername","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","localeCompare","sensitivity","preventDefault","_Fragment","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","Intl","DateTimeFormat","RelativeTime","datetime","format","date","dateStr","setDateStr","raf","update","str","now","diff","year","twitter","toDate","fromNow","cancelAnimationFrame","toISOString","_localeMatch","args","localeMatch","locales","resolvedOptions","locale","navigator","languages","getTranslateTargetLanguage","fromSettings","translationTargetLanguages","code","localeCode2Text","DisplayNames","type","of","emojifyText","forEach","fauxDiv","whitelistLinkClasses","_enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","links","usernames","innerText","hasChildren","u","d","push","slice","textNodes","extractTextNodes","html","nodeValue","nodes","childNodes","replaceWith","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","niceDateTime","hideTime","formatOpts","Date","currentYear","getFullYear","day","hour","minute","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","useAvatarStatic","internal","showActivity","showStats","accountInstance","hideDisplayName","statusesCount","lastStatusAt","fields","note","verifiedField","f","verifiedAt","supportsCache","feature","version","range","features","satisfies","includePrerelease","loose","throttle","pThrottle","limit","interval","LINGVA_INSTANCES","currentLingvaInstance","_lingvaTranslate","source","pRetry","fetchCall","res","fetch","ok","then","provider","translation","detectedSourceLanguage","detectedSource","retries","log","TRANSLATED_MAX_AGE","lingvaTranslate","forceTranslate","sourceLanguage","onTranslate","mini","uiState","setUIState","targetLang","setTranslatedContent","pronunciationContent","detailsRef","translatedContent","sourceLangText","targetLangText","apiSourceLang","error","detectedLangText","setDetectedLang","pronunciation","_a","query","setPronunciationContent","detectedLang","lang","dir","sourceLanguages","name","draftsStore","createStore","drafts","val","getMany","keys","delMany","clear","db","visibilityIconsMap","public","unlisted","private","direct","Poll","readOnly","votePoll","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","marginLeft","FilterContext","createContext","_isFiltered","filtered","filterContext","appliedFilters","hasContext","context","isHidden","some","filterAction","action","filterTitles","titles","titlesStr","isFiltered","filteredItem","item","currentAccountID","isSelf","filterState","filteredItems","items","htmlContentLength","isMastodonLinkMaybe","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","isSafari","userAgent","dataAltLabel","AltBadge","MEDIA_CAPTION_LIMIT","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalBackgroundPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","useMemo","isVideoMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","mode","backgroundImage","backgroundSize","QuickPinchZoom","backgroundColor","backgroundPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","controls","autoplay","MenuLink","FocusableItem","detail","INLINE_TRANSLATE_LIMIT","fetchAccount","v1","$select","memFetchAccount","visibilityText","isIOS","ontouchstart","Status","withinContext","contentTextWeight","enableTranslate","_forceTranslate","onMediaClick","quoted","onStatusLinkClick","enableCommentHint","sameInstance","sKey","snapStates","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","language","editedAt","card","createdAt","reblog","_deleted","useContext","filterInfo","debugHover","FilteredStatus","createdAtDate","inReplyToAccountRef","editedAtDate","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","prefs","showSpoiler","setForceTranslate","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showReactions","setShowReactions","readMoreText","statusRef","spoilerContentRef","contentRef","mediaContainerRef","textWeight","editedDateText","mediaNoDesc","replyToStatus","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","favouriteStatus","differentLanguage","MenuHeader","StatusMenuItems","createdDateText","MenuDivider","done","replyStatus","nicePostURL","editStatus","cachedStatus","setIsContextMenuOpen","contextMenuProps","setContextMenuProps","showContextMenu","bindLongPressContext","useLongPress","clientX","clientY","isContextMenuOpen","hotkeysEnabled","fRef","rRef","dRef","confirmBoostStatus","bRef","showMultipleMediaCaptions","displayedMediaAttachments","captionChildren","attachments","canBoost","indices","showCommentHint","isThread","nodeRef","contextMenuRef","portal","url2","result","removeAttribute","unfurlMastodonLink","QuoteStatuses","newPoll","pollResponse","TranslationBlock","MultipleMediaFigure","Card","StatusButton","checked","bookmarkStatus","count","EditedAtModal","ReactionsModal","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","blurhashImage","setCardStatusURL","imageData","blurhashPixels","w","putImageData","videoID","fetchStatusHistory","editHistory","setEditHistory","editHistory2","REACTIONS_LIMIT","setAccounts","showMore","setShowMore","reblogIterator","favouriteIterator","fetchAccounts","firstLoad","favouriteResults","reblogResults","rebloggedBy","theAccount","_types","InView","favourite","onChange","inView","setButtonTitle","buttonTitle","iconAlt","hours","seconds","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapshot","padStart","remoteInstanceFetch","theURL","resolve","urlObj","statusMatch","masto2","urlAfterHash","mastoSearchFetch","results","handleFulfill","instance2","selfURL","handleCatch","host","restPath","isReblog","setShowPeek","bindLongPressPeek","filterTitleStr","threshold","captureEvent","statusPeekRef","actualStatusID","statusPeekText","showPeek","uniqueQuotes","quotes","q","arr","q2","level","supportedLanguagesMap","supportedLanguages","reduce","common","native","expiryOptions","expirySeconds","values","oneDay","expiresInFromExpiresAt","delta","getTime","role","windowMargin","observer","IntersectionObserver","entry","isIntersecting","boundingClientRect","innerWidth","observe","DEFAULT_LANG","urlRegexObj","urlRegex","flags","usernameRegex","urlPlaceholder","countableText","inputText","USERNAME_RE","MENTION_RE","HASHTAG_RE","SHORTCODE_RE_FRAGMENT","SCAN_RE","highlightText","maxCharacters","Infinity","composerCharacterCount","leftoverHTML","leftoverCount","Compose","draftStatus","standalone","hasOpener","UID","currentAccountInfo","charactersReservedPerUrl","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxExpiration","maxOptions","minExpiration","spoilerTextRef","textareaRef","prevLanguage","setMediaAttachments","setLanguage","oninputTextarea","focusTextarea","dispatchEvent","visibility2","language2","sensitive2","allMentions","setSensitive","poll2","expiresIn","statusSource","mediaAttachments2","setVisibility","setPoll","composablePoll","beforeUnloadCopy","hasMediaAttachments","canClose","hasOnlyAcct","confirmClose","hasIDMediaAttachments","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","escDownRef","capture","modals","hasModal","hasOnlyComposer","draftKey","equal","backgroundDraft","prevBackgroundDraft","handleItems","i2","file","files","state","allowedFiles","updatedAt","debug","mediaFiles","handleDragover","showEmoji2Picker","setShowEmoji2Picker","topSupportedLanguages","restSupportedLanguages","restLanguages","topLanguages","codeA","commonA","codeB","createObjectURL","commonB","dataTransfer","removeEventListener","passData","sort","opener","formRef","pointerEvents","opacity","mediaPromises","params2","removeNullUndefined","hasNoDescriptions","params","reason","e2","media_attributes","in_reply_to_id","Textarea","newAttachments","j","fileID","required","v2","onInput","accept","CharCountMeter","CustomEmojisModal","emojiWithSpace","textarea","selectionStart","selectionEnd","clientHeight","offset","setText","performSearch","customEmojis","textExpanderTextRef","handleChange","handleValue","handleCommited","textExpanderRef","provide","newText","text2","textareaProps","displayNameWithEmoji","encodeHTML","filterShortcodes","cur","matched","searchResults","input","total","throttleHighlightText","event","lastLine","preSpaces","bullet","postSpaces","anything","number","newBullet","pos","autoResizeTextarea","resizeObserver","scrollTop","autoComplete","composeHighlightRef","autoCorrect","spellCheck","charCount","leftChars","MediaAttachment","setRangeText","setSelectionRange","setDescription","debouncedOnDescriptionChange","useDebouncedCallback","onDescriptionChange","showModal","supportsEdit","suffixType","setShowModal","descTextarea","placeholder","searchTerm","aLower","splice","bStartsWith","bLower","bContains","aStartsWith","b","aContains","char","obj","customEmojisList","setCustomEmojis","emojisCat","othersCat","bothStartWith","category","recentlyUsedCustomEmojis","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","VITE_CLIENT_NAME","CLIENT_NAME","useTitle","setTitle","hasPaths","paths","matchPath"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/show-toast.js","../../src/utils/mem.js","../../src/utils/pmem.js","../../src/utils/states.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/icon.jsx","../../src/components/modal.jsx","../../src/components/loader.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/components/menu2.jsx","../../src/components/menu-confirm.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/utils/visibility-icons-map.js","../../src/components/poll.jsx","../../src/utils/filter-context.js","../../src/utils/filters.jsx","../../src/utils/html-content-length.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\r\n\r\nexport function getAccount(id) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.info.id === id) || accounts[0];\r\n}\r\n\r\nexport function getAccountByAccessToken(accessToken) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.accessToken === accessToken);\r\n}\r\n\r\nexport function getCurrentAccount() {\r\n  if (!window.__IGNORE_GET_ACCOUNT_ERROR__) {\r\n    // Track down getCurrentAccount() calls before account-based states are initialized\r\n    console.error('getCurrentAccount() called before states are initialized');\r\n    if (import.meta.env.DEV) console.trace();\r\n  }\r\n  const currentAccount = store.session.get('currentAccount');\r\n  const account = getAccount(currentAccount);\r\n  return account;\r\n}\r\n\r\nexport function getCurrentAccountNS() {\r\n  const account = getCurrentAccount();\r\n  const {\r\n    instanceURL,\r\n    info: { id },\r\n  } = account;\r\n  return `${id}@${instanceURL}`;\r\n}\r\n\r\nexport function saveAccount(account) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === account.info.id);\r\n  if (acc) {\r\n    acc.info = account.info;\r\n    acc.instanceURL = account.instanceURL;\r\n    acc.accessToken = account.accessToken;\r\n    acc.vapidKey = account.vapidKey;\r\n  } else {\r\n    accounts.push(account);\r\n  }\r\n  store.local.setJSON('accounts', accounts);\r\n  store.session.set('currentAccount', account.info.id);\r\n}\r\n\r\nexport function updateAccount(accountInfo) {\r\n  // Only update if displayName or avatar or avatar_static is different\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\r\n  if (acc) {\r\n    if (\r\n      acc.info.displayName !== accountInfo.displayName ||\r\n      acc.info.avatar !== accountInfo.avatar ||\r\n      acc.info.avatar_static !== accountInfo.avatar_static\r\n    ) {\r\n      acc.info = {\r\n        ...acc.info,\r\n        ...accountInfo,\r\n      };\r\n      store.local.setJSON('accounts', accounts);\r\n    }\r\n  }\r\n}\r\n\r\nlet currentInstance = null;\r\nexport function getCurrentInstance() {\r\n  if (currentInstance) return currentInstance;\r\n  try {\r\n    const account = getCurrentAccount();\r\n    const instances = store.local.getJSON('instances');\r\n    const instance = account.instanceURL.toLowerCase();\r\n    return (currentInstance = instances[instance]);\r\n  } catch (e) {\r\n    console.error(e);\r\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\r\n    // Temporary fix for corrupted data\r\n    store.local.del('instances');\r\n    location.reload();\r\n    return {};\r\n  }\r\n}\r\n\r\n// Massage these instance configurations to match the Mastodon API\r\n// - Pleroma\r\nfunction getInstanceConfiguration(instance) {\r\n  const {\r\n    configuration,\r\n    maxMediaAttachments,\r\n    maxTootChars,\r\n    pleroma,\r\n    pollLimits,\r\n  } = instance;\r\n\r\n  const statuses = configuration?.statuses || {};\r\n  if (maxMediaAttachments) {\r\n    statuses.maxMediaAttachments ??= maxMediaAttachments;\r\n  }\r\n  if (maxTootChars) {\r\n    statuses.maxCharacters ??= maxTootChars;\r\n  }\r\n\r\n  const polls = configuration?.polls || {};\r\n  if (pollLimits) {\r\n    polls.maxCharactersPerOption ??= pollLimits.maxOptionChars;\r\n    polls.maxExpiration ??= pollLimits.maxExpiration;\r\n    polls.maxOptions ??= pollLimits.maxOptions;\r\n    polls.minExpiration ??= pollLimits.minExpiration;\r\n  }\r\n\r\n  return {\r\n    ...configuration,\r\n    statuses,\r\n    polls,\r\n  };\r\n}\r\n\r\nexport function getCurrentInstanceConfiguration() {\r\n  const instance = getCurrentInstance();\r\n  return getInstanceConfiguration(instance);\r\n}\r\n","import { getCurrentAccountNS } from './store-utils';\r\n\r\nconst local = {\r\n  get: (key) => {\r\n    try {\r\n      return localStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(local.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return localStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return local.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return localStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nconst session = {\r\n  get: (key) => {\r\n    try {\r\n      return sessionStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(session.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return sessionStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return session.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return sessionStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\n// Store with account namespace (id@domain.tld) <- uses id, not username\r\nconst account = {\r\n  get: (key) => {\r\n    try {\r\n      return local.getJSON(key)[getCurrentAccountNS()];\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      data[getCurrentAccountNS()] = value;\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      delete data[getCurrentAccountNS()];\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default { local, session, account };\r\n","import { createRestAPIClient, createStreamingAPIClient } from 'masto';\r\n\r\nimport store from './store';\r\nimport {\r\n  getAccount,\r\n  getAccountByAccessToken,\r\n  getCurrentAccount,\r\n  saveAccount,\r\n} from './store-utils';\r\n\r\n// Default *fallback* instance\r\nconst DEFAULT_INSTANCE = 'mastodon.social';\r\n\r\n// Per-instance masto instance\r\n// Useful when only one account is logged in\r\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\r\n// E.g. apis['mastodon.social']\r\nconst apis = {};\r\n\r\n// Per-account masto instance\r\n// Note: There can be many accounts per instance\r\n// Useful when multiple accounts are logged in or when certain actions require a specific account\r\n// Just in case if I need this one day.\r\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\r\nconst accountApis = {};\r\nwindow.__ACCOUNT_APIS__ = accountApis;\r\n\r\n// Current account masto instance\r\nlet currentAccountApi;\r\n\r\nexport function initClient({ instance, accessToken }) {\r\n  if (/^https?:\\/\\//.test(instance)) {\r\n    instance = instance\r\n      .replace(/^https?:\\/\\//, '')\r\n      .replace(/\\/+$/, '')\r\n      .toLowerCase();\r\n  }\r\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\r\n\r\n  const masto = createRestAPIClient({\r\n    url,\r\n    accessToken, // Can be null\r\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\r\n  });\r\n\r\n  const client = {\r\n    masto,\r\n    instance,\r\n    accessToken,\r\n  };\r\n  apis[instance] = client;\r\n  if (!accountApis[instance]) accountApis[instance] = {};\r\n  if (accessToken) accountApis[instance][accessToken] = client;\r\n\r\n  return client;\r\n}\r\n\r\n// Get the instance information\r\n// The config is needed for composing\r\nexport async function initInstance(client, instance) {\r\n  console.log('INIT INSTANCE', client, instance);\r\n  const { masto, accessToken } = client;\r\n  // Request v2, fallback to v1 if fail\r\n  let info;\r\n  try {\r\n    info = await masto.v2.instance.fetch();\r\n  } catch (e) {}\r\n  if (!info) {\r\n    try {\r\n      info = await masto.v1.instance.fetch();\r\n    } catch (e) {}\r\n  }\r\n  if (!info) return;\r\n  console.log(info);\r\n  const {\r\n    // v1\r\n    uri,\r\n    urls: { streamingApi } = {},\r\n    // v2\r\n    domain,\r\n    configuration: { urls: { streaming } = {} } = {},\r\n  } = info;\r\n  const instances = store.local.getJSON('instances') || {};\r\n  if (uri || domain) {\r\n    instances[\r\n      (domain || uri)\r\n        .replace(/^https?:\\/\\//, '')\r\n        .replace(/\\/+$/, '')\r\n        .toLowerCase()\r\n    ] = info;\r\n  }\r\n  if (instance) {\r\n    instances[instance.toLowerCase()] = info;\r\n  }\r\n  store.local.setJSON('instances', instances);\r\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\r\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\r\n  const supportsWebSocket = 'WebSocket' in window;\r\n  if (supportsWebSocket && (streamingApi || streaming)) {\r\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\r\n    // masto.config.props.streamingApiUrl = streaming || streamingApi;\r\n    // Legacy masto.ws\r\n    const streamClient = createStreamingAPIClient({\r\n      streamingApiUrl: streaming || streamingApi,\r\n      accessToken,\r\n      implementation: WebSocket,\r\n    });\r\n    client.streaming = streamClient;\r\n    // masto.ws = streamClient;\r\n    console.log('🎏 Streaming API client:', client);\r\n  }\r\n}\r\n\r\n// Get the account information and store it\r\nexport async function initAccount(client, instance, accessToken, vapidKey) {\r\n  const { masto } = client;\r\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\r\n\r\n  console.log('CURRENTACCOUNT SET', mastoAccount.id);\r\n  store.session.set('currentAccount', mastoAccount.id);\r\n\r\n  saveAccount({\r\n    info: mastoAccount,\r\n    instanceURL: instance.toLowerCase(),\r\n    accessToken,\r\n    vapidKey,\r\n  });\r\n}\r\n\r\n// Get preferences\r\nexport async function initPreferences(client) {\r\n  try {\r\n    const { masto } = client;\r\n    const preferences = await masto.v1.preferences.fetch();\r\n    store.account.set('preferences', preferences);\r\n  } catch (e) {\r\n    // silently fail\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n// Get the masto instance\r\n// If accountID is provided, get the masto instance for that account\r\nexport function api({ instance, accessToken, accountID, account } = {}) {\r\n  // Always lowercase and trim the instance\r\n  if (instance) {\r\n    instance = instance.toLowerCase().trim();\r\n  }\r\n\r\n  // If instance and accessToken are provided, get the masto instance for that account\r\n  if (instance && accessToken) {\r\n    const client =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    const { masto, streaming } = client;\r\n    return {\r\n      masto,\r\n      streaming,\r\n      client,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  if (accessToken) {\r\n    // If only accessToken is provided, get the masto instance for that accessToken\r\n    console.log('X 1', accountApis);\r\n    for (const instance in accountApis) {\r\n      if (accountApis[instance][accessToken]) {\r\n        console.log('X 2', accountApis, instance, accessToken);\r\n        const client = accountApis[instance][accessToken];\r\n        const { masto, streaming } = client;\r\n        return {\r\n          masto,\r\n          streaming,\r\n          client,\r\n          authenticated: true,\r\n          instance,\r\n        };\r\n      } else {\r\n        console.log('X 3', accountApis, instance, accessToken);\r\n        const account = getAccountByAccessToken(accessToken);\r\n        if (account) {\r\n          const accessToken = account.accessToken;\r\n          const instance = account.instanceURL.toLowerCase().trim();\r\n          const client = initClient({ instance, accessToken });\r\n          const { masto, streaming } = client;\r\n          return {\r\n            masto,\r\n            streaming,\r\n            client,\r\n            authenticated: true,\r\n            instance,\r\n          };\r\n        } else {\r\n          throw new Error(`Access token not found`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If account is provided, get the masto instance for that account\r\n  if (account || accountID) {\r\n    account = account || getAccount(accountID);\r\n    if (account) {\r\n      const accessToken = account.accessToken;\r\n      const instance = account.instanceURL.toLowerCase().trim();\r\n      const client =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      const { masto, streaming } = client;\r\n      return {\r\n        masto,\r\n        streaming,\r\n        client,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    } else {\r\n      throw new Error(`Account ${accountID} not found`);\r\n    }\r\n  }\r\n\r\n  const currentAccount = getCurrentAccount();\r\n\r\n  // If only instance is provided, get the masto instance for that instance\r\n  if (instance) {\r\n    if (currentAccountApi?.instance === instance) {\r\n      return {\r\n        masto: currentAccountApi.masto,\r\n        streaming: currentAccountApi.streaming,\r\n        client: currentAccountApi,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    if (currentAccount?.instanceURL === instance) {\r\n      const { accessToken } = currentAccount;\r\n      currentAccountApi =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      return {\r\n        masto: currentAccountApi.masto,\r\n        streaming: currentAccountApi.streaming,\r\n        client: currentAccountApi,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    const client = apis[instance] || initClient({ instance });\r\n    const { masto, streaming, accessToken } = client;\r\n    return {\r\n      masto,\r\n      streaming,\r\n      client,\r\n      authenticated: !!accessToken,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided, get the masto instance for the current account\r\n  if (currentAccountApi) {\r\n    return {\r\n      masto: currentAccountApi.masto,\r\n      streaming: currentAccountApi.streaming,\r\n      client: currentAccountApi,\r\n      authenticated: true,\r\n      instance: currentAccountApi.instance,\r\n    };\r\n  }\r\n  if (currentAccount) {\r\n    const { accessToken, instanceURL: instance } = currentAccount;\r\n    currentAccountApi =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    return {\r\n      masto: currentAccountApi.masto,\r\n      streaming: currentAccountApi.streaming,\r\n      client: currentAccountApi,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\r\n  const client =\r\n    apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE });\r\n  const { masto, streaming } = client;\r\n  return {\r\n    masto,\r\n    streaming,\r\n    client,\r\n    authenticated: false,\r\n    instance: DEFAULT_INSTANCE,\r\n  };\r\n}\r\n\r\nwindow.__API__ = {\r\n  currentAccountApi,\r\n  apis,\r\n  accountApis,\r\n};\r\n","import Toastify from 'toastify-js';\r\n\r\nwindow._showToast = showToast;\r\n\r\nfunction showToast(props) {\r\n  if (typeof props === 'string') {\r\n    props = { text: props };\r\n  }\r\n  const { onClick, delay, ...rest } = props;\r\n  const toast = Toastify({\r\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\r\n    gravity: 'bottom',\r\n    position: 'center',\r\n    ...rest,\r\n    onClick: () => {\r\n      onClick?.(toast); // Pass in the object itself!\r\n    },\r\n  });\r\n  if (delay) {\r\n    setTimeout(() => {\r\n      toast.showToast();\r\n    }, delay);\r\n  } else {\r\n    toast.showToast();\r\n  }\r\n}\r\n\r\nexport default showToast;\r\n","import moize from 'moize';\r\n\r\nwindow._moize = moize;\r\n\r\nexport default function mem(fn, opts = {}) {\r\n  return moize(fn, { ...opts, maxSize: 50, isDeepEqual: true });\r\n}\r\n","import mem from './mem';\r\n\r\nexport default function pmem(fn, opts = {}) {\r\n  return mem(fn, { isPromise: true, ...opts });\r\n}\r\n","import { proxy, subscribe } from 'valtio';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport { api } from './api';\r\nimport pmem from './pmem';\r\nimport store from './store';\r\n\r\nconst states = proxy({\r\n  appVersion: {},\r\n  // history: [],\r\n  prevLocation: null,\r\n  currentLocation: null,\r\n  statuses: {},\r\n  statusThreadNumber: {},\r\n  home: [],\r\n  // specialHome: [],\r\n  homeNew: [],\r\n  homeLast: null, // Last item in 'home' list\r\n  homeLastFetchTime: null,\r\n  notifications: [],\r\n  notificationsLast: null, // Last read notification\r\n  notificationsNew: [],\r\n  notificationsShowNew: false,\r\n  notificationsLastFetchTime: null,\r\n  reloadStatusPage: 0,\r\n  reloadGenericAccounts: {\r\n    id: null,\r\n    counter: 0,\r\n  },\r\n  spoilers: {},\r\n  scrollPositions: {},\r\n  unfurledLinks: {},\r\n  statusQuotes: {},\r\n  accounts: {},\r\n  routeNotification: null,\r\n  // Modals\r\n  showCompose: false,\r\n  showSettings: false,\r\n  showAccount: false,\r\n  showAccounts: false,\r\n  showDrafts: false,\r\n  showMediaModal: false,\r\n  showShortcutsSettings: false,\r\n  showKeyboardShortcutsHelp: false,\r\n  showGenericAccounts: false,\r\n  showMediaAlt: false,\r\n  // Shortcuts\r\n  shortcuts: [],\r\n  // Settings\r\n  settings: {\r\n    autoRefresh: false,\r\n    shortcutsViewMode: null,\r\n    shortcutsColumnsMode: false,\r\n    boostsCarousel: true,\r\n    contentTranslation: true,\r\n    contentTranslationTargetLanguage: null,\r\n    contentTranslationHideLanguages: [],\r\n    contentTranslationAutoInline: false,\r\n    cloakMode: false,\r\n  },\r\n});\r\n\r\nexport default states;\r\n\r\nexport function initStates() {\r\n  // init all account based states\r\n  // all keys that uses store.account.get() should be initialized here\r\n  states.notificationsLast = store.account.get('notificationsLast') || null;\r\n  states.shortcuts = store.account.get('shortcuts') ?? [];\r\n  states.settings.autoRefresh =\r\n    store.account.get('settings-autoRefresh') ?? false;\r\n  states.settings.shortcutsViewMode =\r\n    store.account.get('settings-shortcutsViewMode') ?? null;\r\n  if (store.account.get('settings-shortcutsColumnsMode')) {\r\n    states.settings.shortcutsColumnsMode = true;\r\n  }\r\n  states.settings.boostsCarousel =\r\n    store.account.get('settings-boostsCarousel') ?? true;\r\n  states.settings.contentTranslation =\r\n    store.account.get('settings-contentTranslation') ?? true;\r\n  states.settings.contentTranslationTargetLanguage =\r\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\r\n  states.settings.contentTranslationHideLanguages =\r\n    store.account.get('settings-contentTranslationHideLanguages') || [];\r\n  states.settings.contentTranslationAutoInline =\r\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\r\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\r\n}\r\n\r\nsubscribeKey(states, 'notificationsLast', (v) => {\r\n  console.log('CHANGE', v);\r\n  store.account.set('notificationsLast', states.notificationsLast);\r\n});\r\nsubscribe(states, (changes) => {\r\n  console.debug('STATES change', changes);\r\n  for (const [action, path, value, prevValue] of changes) {\r\n    if (path.join('.') === 'settings.autoRefresh') {\r\n      store.account.set('settings-autoRefresh', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.boostsCarousel') {\r\n      store.account.set('settings-boostsCarousel', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.shortcutsViewMode') {\r\n      store.account.set('settings-shortcutsViewMode', value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslation') {\r\n      store.account.set('settings-contentTranslation', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\r\n      store.account.set('settings-contentTranslationAutoInline', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\r\n      console.log('SET', value);\r\n      store.account.set('settings-contentTranslationTargetLanguage', value);\r\n    }\r\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\r\n      store.account.set(\r\n        'settings-contentTranslationHideLanguages',\r\n        states.settings.contentTranslationHideLanguages,\r\n      );\r\n    }\r\n    if (path?.[0] === 'shortcuts') {\r\n      store.account.set('shortcuts', states.shortcuts);\r\n    }\r\n    if (path.join('.') === 'settings.cloakMode') {\r\n      store.account.set('settings-cloakMode', !!value);\r\n    }\r\n  }\r\n});\r\n\r\nexport function hideAllModals() {\r\n  states.showCompose = false;\r\n  states.showSettings = false;\r\n  states.showAccount = false;\r\n  states.showAccounts = false;\r\n  states.showDrafts = false;\r\n  states.showMediaModal = false;\r\n  states.showShortcutsSettings = false;\r\n  states.showKeyboardShortcutsHelp = false;\r\n  states.showGenericAccounts = false;\r\n  states.showMediaAlt = false;\r\n}\r\n\r\nexport function statusKey(id, instance) {\r\n  if (!id) return;\r\n  return instance ? `${instance}/${id}` : id;\r\n}\r\n\r\nexport function getStatus(statusID, instance) {\r\n  if (instance) {\r\n    const key = statusKey(statusID, instance);\r\n    return states.statuses[key];\r\n  }\r\n  return states.statuses[statusID];\r\n}\r\n\r\nexport function saveStatus(status, instance, opts) {\r\n  if (typeof instance === 'object') {\r\n    opts = instance;\r\n    instance = null;\r\n  }\r\n  const { override, skipThreading } = Object.assign(\r\n    { override: true, skipThreading: false },\r\n    opts,\r\n  );\r\n  if (!status) return;\r\n  const oldStatus = getStatus(status.id, instance);\r\n  if (!override && oldStatus) return;\r\n  const key = statusKey(status.id, instance);\r\n  if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\r\n  // if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\r\n  states.statuses[key] = status;\r\n  if (status.reblog) {\r\n    const key = statusKey(status.reblog.id, instance);\r\n    states.statuses[key] = status.reblog;\r\n  }\r\n\r\n  // THREAD TRAVERSER\r\n  if (!skipThreading) {\r\n    requestAnimationFrame(() => {\r\n      threadifyStatus(status, instance);\r\n      if (status.reblog) {\r\n        threadifyStatus(status.reblog, instance);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function threadifyStatus(status, propInstance) {\r\n  const { masto, instance } = api({ instance: propInstance });\r\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\r\n  let fetchIndex = 0;\r\n  async function traverse(status, index = 0) {\r\n    const { inReplyToId, inReplyToAccountId } = status;\r\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\r\n      return [status];\r\n    }\r\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\r\n      throw 'Not a thread';\r\n      // Possibly thread of replies by multiple people?\r\n    }\r\n    const key = statusKey(inReplyToId, instance);\r\n    let prevStatus = states.statuses[key];\r\n    if (!prevStatus) {\r\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\r\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\r\n      // prevStatus = await masto.v1.statuses.$.select(inReplyToId).fetch();\r\n      prevStatus = await fetchStatus(inReplyToId, masto);\r\n      saveStatus(prevStatus, instance, { skipThreading: true });\r\n    }\r\n    // Prepend so that first status in thread will be index 0\r\n    return [...(await traverse(prevStatus, ++index)), status];\r\n  }\r\n  return traverse(status)\r\n    .then((statuses) => {\r\n      if (statuses.length > 1) {\r\n        console.debug('THREAD', statuses);\r\n        statuses.forEach((status, index) => {\r\n          const key = statusKey(status.id, instance);\r\n          states.statusThreadNumber[key] = index + 1;\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e, status);\r\n    });\r\n}\r\n\r\nconst fetchStatus = pmem((statusID, masto) => {\r\n  return masto.v1.statuses.$select(statusID).fetch();\r\n});\r\n","import { useEffect, useRef } from 'preact/hooks';\r\n\r\nfunction useInterval(fn, delay, deps, immediate) {\r\n  const savedCallback = useRef(fn);\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn, deps]);\r\n\r\n  useEffect(() => {\r\n    if (!immediate || delay === null || delay === false) return;\r\n    savedCallback.current();\r\n  }, [immediate]);\r\n\r\n  useEffect(() => {\r\n    if (delay === null || delay === false) return;\r\n    const tick = () => savedCallback.current();\r\n    const id = setInterval(tick, delay);\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default function openCompose(opts) {\r\n  const url = new URL('/compose/', window.location);\r\n  const { width: screenWidth, height: screenHeight } = window.screen;\r\n  const left = Math.max(0, (screenWidth - 600) / 2);\r\n  const top = Math.max(0, (screenHeight - 450) / 2);\r\n  const width = Math.min(screenWidth, 600);\r\n  const height = Math.min(screenHeight, 450);\r\n  const winUID = opts?.uid || Math.random();\r\n  const newWin = window.open(\r\n    url,\r\n    'compose' + winUID,\r\n    `width=${width},height=${height},left=${left},top=${top}`,\r\n  );\r\n\r\n  if (newWin) {\r\n    // if (masto) {\r\n    //   newWin.masto = masto;\r\n    // }\r\n\r\n    newWin.__COMPOSE__ = opts;\r\n  } else {\r\n    alert('Looks like your browser is blocking popups.');\r\n  }\r\n\r\n  return newWin;\r\n}\r\n","import { memo } from 'preact/compat';\r\nimport { useEffect, useState } from 'preact/hooks';\r\n\r\nconst SIZES = {\r\n  s: 12,\r\n  m: 16,\r\n  l: 20,\r\n  xl: 24,\r\n  xxl: 32,\r\n};\r\n\r\nexport const ICONS = {\r\n  x: () => import('@iconify-icons/mingcute/close-line'),\r\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\r\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\r\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\r\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\r\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\r\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\r\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\r\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\r\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\r\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\r\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\r\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\r\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\r\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\r\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\r\n  message: () => import('@iconify-icons/mingcute/mail-line'),\r\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\r\n  comment2: () => import('@iconify-icons/mingcute/comment-2-line'),\r\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\r\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\r\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\r\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\r\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\r\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\r\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\r\n  at: () => import('@iconify-icons/mingcute/at-line'),\r\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\r\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\r\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\r\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\r\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\r\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\r\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\r\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\r\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\r\n  reply: [\r\n    () => import('@iconify-icons/mingcute/share-forward-line'),\r\n    '180deg',\r\n    'horizontal',\r\n  ],\r\n  thread: () => import('@iconify-icons/mingcute/route-line'),\r\n  group: () => import('@iconify-icons/mingcute/group-line'),\r\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\r\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\r\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\r\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\r\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\r\n  info: () => import('@iconify-icons/mingcute/information-line'),\r\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\r\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\r\n  following: () => import('@iconify-icons/mingcute/walk-line'),\r\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\r\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\r\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\r\n  history: () => import('@iconify-icons/mingcute/history-line'),\r\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\r\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\r\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\r\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\r\n  play: () => import('@iconify-icons/mingcute/play-fill'),\r\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\r\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\r\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\r\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n  unblock: [\r\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n    '180deg',\r\n  ],\r\n  flag: () => import('@iconify-icons/mingcute/flag-4-line'),\r\n  time: () => import('@iconify-icons/mingcute/time-line'),\r\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\r\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\r\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\r\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\r\n  react: () => import('@iconify-icons/mingcute/react-line'),\r\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\r\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\r\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\r\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\r\n  round: () => import('@iconify-icons/mingcute/round-fill'),\r\n  'arrow-up-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\r\n  'arrow-down-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\r\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\r\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\r\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\r\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\r\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\r\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\r\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\r\n};\r\n\r\nfunction Icon({\r\n  icon,\r\n  size = 'm',\r\n  alt,\r\n  title,\r\n  class: className = '',\r\n  style = {},\r\n}) {\r\n  if (!icon) return null;\r\n\r\n  const iconSize = SIZES[size];\r\n  let iconBlock = ICONS[icon];\r\n  let rotate, flip;\r\n  if (Array.isArray(iconBlock)) {\r\n    [iconBlock, rotate, flip] = iconBlock;\r\n  }\r\n\r\n  const [iconData, setIconData] = useState(null);\r\n  useEffect(async () => {\r\n    const icon = await iconBlock();\r\n    setIconData(icon.default);\r\n  }, [iconBlock]);\r\n\r\n  return (\r\n    <span\r\n      class={`icon ${className}`}\r\n      title={title || alt}\r\n      style={{\r\n        width: `${iconSize}px`,\r\n        height: `${iconSize}px`,\r\n        ...style,\r\n      }}\r\n    >\r\n      {iconData && (\r\n        <svg\r\n          width={iconSize}\r\n          height={iconSize}\r\n          viewBox={`0 0 ${iconData.width} ${iconData.height}`}\r\n          dangerouslySetInnerHTML={{ __html: iconData.body }}\r\n          style={{\r\n            transform: `${rotate ? `rotate(${rotate})` : ''} ${\r\n              flip ? `scaleX(-1)` : ''\r\n            }`,\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default memo(Icon);\r\n","import './modal.css';\r\n\r\nimport { createPortal } from 'preact/compat';\r\nimport { useEffect, useRef } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\nconst $modalContainer = document.getElementById('modal-container');\r\n\r\nfunction Modal({ children, onClose, onClick, class: className }) {\r\n  if (!children) return null;\r\n\r\n  const modalRef = useRef();\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\r\n      if (focusElement) {\r\n        focusElement.focus();\r\n      }\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const escRef = useHotkeys(\r\n    'esc',\r\n    () => {\r\n      setTimeout(() => {\r\n        onClose?.();\r\n      }, 0);\r\n    },\r\n    {\r\n      enabled: !!onClose,\r\n      // Using keyup and setTimeout above\r\n      // This will run \"later\" to prevent clash with esc handlers from other components\r\n      keydown: false,\r\n      keyup: true,\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  const Modal = (\r\n    <div\r\n      ref={(node) => {\r\n        modalRef.current = node;\r\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\r\n      }}\r\n      className={className}\r\n      onClick={(e) => {\r\n        onClick?.(e);\r\n        if (e.target === e.currentTarget) {\r\n          onClose?.(e);\r\n        }\r\n      }}\r\n      tabIndex=\"-1\"\r\n      onFocus={(e) => {\r\n        if (e.target === e.currentTarget) {\r\n          modalRef.current?.querySelector?.('[tabindex=\"-1\"]')?.focus?.();\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return createPortal(Modal, $modalContainer);\r\n\r\n  // return createPortal(children, $modalContainer);\r\n}\r\n\r\nexport default Modal;\r\n","import './loader.css';\r\n\r\nfunction Loader({ abrupt, hidden, ...props }) {\r\n  return (\r\n    <span\r\n      {...props}\r\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\r\n        hidden ? 'hidden' : ''\r\n      }`}\r\n    >\r\n      <span class=\"loader\" />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import './avatar.css';\r\n\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport mem from '../utils/mem';\r\n\r\nconst SIZES = {\r\n  s: 16,\r\n  m: 20,\r\n  l: 24,\r\n  xl: 32,\r\n  xxl: 50,\r\n  xxxl: 64,\r\n};\r\n\r\nconst alphaCache = {};\r\n\r\nconst canvas = window.OffscreenCanvas\r\n  ? new OffscreenCanvas(1, 1)\r\n  : document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d', {\r\n  willReadFrequently: true,\r\n});\r\n\r\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\r\n  size = SIZES[size] || size || SIZES.m;\r\n  const avatarRef = useRef();\r\n  const isMissing = /missing\\.png$/.test(url);\r\n  return (\r\n    <span\r\n      ref={avatarRef}\r\n      class={`avatar ${squircle ? 'squircle' : ''} ${\r\n        alphaCache[url] ? 'has-alpha' : ''\r\n      }`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n      }}\r\n      title={alt}\r\n      {...props}\r\n    >\r\n      {!!url && (\r\n        <img\r\n          src={url}\r\n          width={size}\r\n          height={size}\r\n          alt={alt}\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n          crossOrigin={\r\n            alphaCache[url] === undefined && !isMissing\r\n              ? 'anonymous'\r\n              : undefined\r\n          }\r\n          onError={(e) => {\r\n            if (e.target.crossOrigin) {\r\n              e.target.crossOrigin = null;\r\n              e.target.src = url;\r\n            }\r\n          }}\r\n          onLoad={(e) => {\r\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\r\n            if (alphaCache[url] !== undefined) return;\r\n            if (isMissing) return;\r\n            try {\r\n              // Check if image has alpha channel\r\n              const { width, height } = e.target;\r\n              if (canvas.width !== width) canvas.width = width;\r\n              if (canvas.height !== height) canvas.height = height;\r\n              ctx.drawImage(e.target, 0, 0);\r\n              const allPixels = ctx.getImageData(0, 0, width, height);\r\n              // At least 10% of pixels have alpha <= 128\r\n              const hasAlpha =\r\n                allPixels.data.filter((pixel, i) => i % 4 === 3 && pixel <= 128)\r\n                  .length /\r\n                  (allPixels.data.length / 4) >\r\n                0.1;\r\n              if (hasAlpha) {\r\n                // console.log('hasAlpha', hasAlpha, allPixels.data);\r\n                avatarRef.current.classList.add('has-alpha');\r\n              }\r\n              alphaCache[url] = hasAlpha;\r\n              ctx.clearRect(0, 0, width, height);\r\n            } catch (e) {\r\n              // Silent fail\r\n              alphaCache[url] = false;\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default mem(Avatar);\r\n","import { forwardRef } from 'preact/compat';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport states from '../utils/states';\r\n\r\n/* NOTES\r\n   =====\r\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\r\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\r\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\r\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\r\n*/\r\n\r\nconst Link = forwardRef((props, ref) => {\r\n  let routerLocation;\r\n  try {\r\n    routerLocation = useLocation();\r\n  } catch (e) {}\r\n  let hash = (location.hash || '').replace(/^#/, '').trim();\r\n  if (hash === '') hash = '/';\r\n  const { to, ...restProps } = props;\r\n\r\n  // Handle encodeURIComponent of searchParams values\r\n  if (!!hash && hash !== '/' && hash.includes('?')) {\r\n    const parsedHash = new URL(hash, location.origin); // Fake base URL\r\n    if (parsedHash.searchParams.size) {\r\n      const searchParamsStr = Array.from(parsedHash.searchParams.entries())\r\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n        .join('&');\r\n      hash = parsedHash.pathname + '?' + searchParamsStr;\r\n    }\r\n  }\r\n\r\n  const isActive = hash === to || decodeURIComponent(hash) === to;\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      href={`#${to}`}\r\n      {...restProps}\r\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\r\n      onClick={(e) => {\r\n        if (e.currentTarget?.parentNode?.closest('a')) {\r\n          // If this <a> is nested inside another <a>\r\n          e.stopPropagation();\r\n        }\r\n        if (routerLocation) states.prevLocation = routerLocation;\r\n        props.onClick?.(e);\r\n      }}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Link;\r\n","const root = document.documentElement;\r\nconst style = getComputedStyle(root);\r\nconst defaultBoundingBoxPadding = 8;\r\n\r\nlet safeAreaInsets = [0, 0, 0, 0];\r\nfunction getSafeAreaInsets() {\r\n  // Get safe area inset variables from root\r\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\r\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\r\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\r\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\r\n  safeAreaInsets = [\r\n    // top, right, bottom, left (clockwise)\r\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\r\n  ];\r\n}\r\nrequestAnimationFrame(getSafeAreaInsets);\r\n\r\nfunction safeBoundingBoxPadding(paddings = []) {\r\n  const str = safeAreaInsets\r\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\r\n    .join(' ');\r\n  // console.log(str);\r\n  return str;\r\n}\r\n\r\n// Update safe area insets when orientation or resize\r\nif (CSS.supports('top: env(safe-area-inset-top)')) {\r\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\r\n}\r\n\r\nexport default safeBoundingBoxPadding;\r\n","import { Menu } from '@szhsin/react-menu';\r\nimport { useWindowSize } from '@uidotdev/usehooks';\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\r\n\r\n// It's like Menu but with sensible defaults, bug fixes and improvements.\r\nfunction Menu2(props) {\r\n  const { containerProps, instanceRef: _instanceRef } = props;\r\n  const size = useWindowSize();\r\n  const instanceRef = _instanceRef?.current ? _instanceRef : useRef();\r\n\r\n  return (\r\n    <Menu\r\n      boundingBoxPadding={safeBoundingBoxPadding()}\r\n      repositionFlag={`${size.width}x${size.height}`}\r\n      unmountOnClose\r\n      {...props}\r\n      instanceRef={instanceRef}\r\n      containerProps={{\r\n        onClick: (e) => {\r\n          if (e.target === e.currentTarget) {\r\n            instanceRef.current?.closeMenu?.();\r\n          }\r\n          containerProps?.onClick?.(e);\r\n        },\r\n        ...containerProps,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Menu2;\r\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\r\nimport { cloneElement } from 'preact';\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport Menu2 from './menu2';\r\n\r\nfunction MenuConfirm({\r\n  subMenu = false,\r\n  confirm = true,\r\n  confirmLabel,\r\n  menuItemClassName,\r\n  menuFooter,\r\n  ...props\r\n}) {\r\n  const { children, onClick, ...restProps } = props;\r\n  if (!confirm) {\r\n    if (subMenu) return <MenuItem {...props} />;\r\n    if (onClick) {\r\n      return cloneElement(children, {\r\n        onClick,\r\n      });\r\n    }\r\n    return children;\r\n  }\r\n  const Parent = subMenu ? SubMenu : Menu2;\r\n  const menuRef = useRef();\r\n  return (\r\n    <Parent\r\n      instanceRef={menuRef}\r\n      openTrigger=\"clickOnly\"\r\n      direction=\"bottom\"\r\n      overflow=\"auto\"\r\n      gap={-8}\r\n      shift={8}\r\n      menuClassName=\"menu-emphasized\"\r\n      {...restProps}\r\n      menuButton={subMenu ? undefined : children}\r\n      label={subMenu ? children : undefined}\r\n      // Test fix for bug; submenus not opening on Android\r\n      itemProps={{\r\n        onPointerMove: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n        onPointerLeave: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n      }}\r\n    >\r\n      <MenuItem className={menuItemClassName} onClick={onClick}>\r\n        {confirmLabel}\r\n      </MenuItem>\r\n      {menuFooter}\r\n    </Parent>\r\n  );\r\n}\r\n\r\nexport default MenuConfirm;\r\n","function EmojiText({ text, emojis }) {\r\n  if (!text) return '';\r\n  if (!emojis?.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  const regex = new RegExp(\r\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\r\n    'g',\r\n  );\r\n  const elements = text.split(regex).map((word) => {\r\n    const emoji = emojis.find((e) => e.shortcode === word);\r\n    if (emoji) {\r\n      const { url, staticUrl } = emoji;\r\n      return (\r\n        <picture>\r\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\r\n          <img\r\n            key={word}\r\n            src={url}\r\n            alt={word}\r\n            class=\"shortcode-emoji emoji\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n          />\r\n        </picture>\r\n      );\r\n    }\r\n    return word;\r\n  });\r\n  return elements;\r\n}\r\n\r\nexport default EmojiText;\r\n","import './name-text.css';\r\n\r\nimport { memo } from 'preact/compat';\r\n\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\n\r\nfunction NameText({\r\n  account,\r\n  instance,\r\n  showAvatar,\r\n  showAcct,\r\n  short,\r\n  external,\r\n  onClick,\r\n}) {\r\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\r\n    account;\r\n  let { username } = account;\r\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n\r\n  const trimmedUsername = username.toLowerCase().trim();\r\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\r\n  const shortenedDisplayName = trimmedDisplayName\r\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\r\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\r\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\r\n    /[^a-z0-9]/gi,\r\n    '',\r\n  ); // Remove non-alphanumeric characters\r\n\r\n  if (\r\n    !short &&\r\n    (trimmedUsername === trimmedDisplayName ||\r\n      trimmedUsername === shortenedDisplayName ||\r\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\r\n      trimmedUsername.localeCompare?.(shortenedDisplayName, 'en', {\r\n        sensitivity: 'base',\r\n      }) === 0)\r\n  ) {\r\n    username = null;\r\n  }\r\n\r\n  return (\r\n    <a\r\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (onClick) return onClick(e);\r\n        states.showAccount = {\r\n          account,\r\n          instance,\r\n        };\r\n      }}\r\n    >\r\n      {showAvatar && (\r\n        <>\r\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\r\n        </>\r\n      )}\r\n      {displayName && !short ? (\r\n        <>\r\n          <b>\r\n            <EmojiText text={displayName} emojis={emojis} />\r\n          </b>\r\n          {!showAcct && username && (\r\n            <>\r\n              {' '}\r\n              <i>@{username}</i>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : short ? (\r\n        <i>{username}</i>\r\n      ) : (\r\n        <b>{username}</b>\r\n      )}\r\n      {showAcct && (\r\n        <>\r\n          <br />\r\n          <i>\r\n            @{acct1}\r\n            <span class=\"ib\">{acct2}</span>\r\n          </i>\r\n        </>\r\n      )}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default memo(NameText);\r\n","// Twitter-style relative time component\r\n// Seconds = 1s\r\n// Minutes = 1m\r\n// Hours = 1h\r\n// Days = 1d\r\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\r\nimport dayjs from 'dayjs';\r\nimport dayjsTwitter from 'dayjs-twitter';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useEffect, useState } from 'preact/hooks';\r\n\r\ndayjs.extend(dayjsTwitter);\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(relativeTime);\r\n\r\nconst dtf = new Intl.DateTimeFormat();\r\n\r\nexport default function RelativeTime({ datetime, format }) {\r\n  if (!datetime) return null;\r\n  const date = dayjs(datetime);\r\n  const [dateStr, setDateStr] = useState('');\r\n\r\n  useEffect(() => {\r\n    let timer, raf;\r\n    const update = () => {\r\n      raf = requestAnimationFrame(() => {\r\n        let str;\r\n        if (format === 'micro') {\r\n          // If date <= 1 day ago or day is within this year\r\n          const now = dayjs();\r\n          const dayDiff = now.diff(date, 'day');\r\n          if (dayDiff <= 1 || now.year() === date.year()) {\r\n            str = date.twitter();\r\n          } else {\r\n            str = dtf.format(date.toDate());\r\n          }\r\n        } else {\r\n          str = date.fromNow();\r\n        }\r\n        setDateStr(str);\r\n\r\n        timer = setTimeout(update, 30_000);\r\n      });\r\n    };\r\n    raf = requestAnimationFrame(update);\r\n    return () => {\r\n      clearTimeout(timer);\r\n      cancelAnimationFrame(raf);\r\n    };\r\n  }, [date]);\r\n\r\n  return (\r\n    <time datetime={date.toISOString()} title={date.format('LLLL')}>\r\n      {dateStr}\r\n    </time>\r\n  );\r\n}\r\n","import { match } from '@formatjs/intl-localematcher';\r\n\r\nimport mem from './mem';\r\n\r\nfunction _localeMatch(...args) {\r\n  // Wrap in try/catch because localeMatcher throws on invalid locales\r\n  try {\r\n    return match(...args);\r\n  } catch (e) {\r\n    const defaultLocale = args[2];\r\n    return defaultLocale || false;\r\n  }\r\n}\r\nconst localeMatch = mem(_localeMatch);\r\n\r\nexport default localeMatch;\r\n","import translationTargetLanguages from '../data/lingva-target-languages';\r\n\r\nimport localeMatch from './locale-match';\r\nimport states from './states';\r\n\r\nconst locales = [\r\n  new Intl.DateTimeFormat().resolvedOptions().locale,\r\n  ...navigator.languages,\r\n];\r\n\r\nfunction getTranslateTargetLanguage(fromSettings = false) {\r\n  if (fromSettings) {\r\n    const { contentTranslationTargetLanguage } = states.settings;\r\n    if (contentTranslationTargetLanguage) {\r\n      return contentTranslationTargetLanguage;\r\n    }\r\n  }\r\n  return localeMatch(\r\n    locales,\r\n    translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\r\n    'en',\r\n  );\r\n}\r\n\r\nexport default getTranslateTargetLanguage;\r\n","export default function localeCode2Text(code) {\r\n  try {\r\n    return new Intl.DisplayNames(navigator.languages, {\r\n      type: 'language',\r\n    }).of(code);\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n","function emojifyText(text, emojis = []) {\r\n  if (!text) return '';\r\n  if (!emojis.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  // Replace shortcodes in text with emoji\r\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\r\n  emojis.forEach((emoji) => {\r\n    const { shortcode, staticUrl, url } = emoji;\r\n    text = text.replace(\r\n      new RegExp(`:${shortcode}:`, 'g'),\r\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\r\n    );\r\n  });\r\n  // console.log(text, emojis);\r\n  return text;\r\n}\r\n\r\nexport default emojifyText;\r\n","import emojifyText from './emojify-text';\r\nimport mem from './mem';\r\n\r\nconst fauxDiv = document.createElement('div');\r\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\r\n\r\nfunction _enhanceContent(content, opts = {}) {\r\n  const { emojis, postEnhanceDOM = () => {} } = opts;\r\n  let enhancedContent = content;\r\n  const dom = document.createElement('div');\r\n  dom.innerHTML = enhancedContent;\r\n  const hasLink = /<a/i.test(enhancedContent);\r\n  const hasCodeBlock = enhancedContent.indexOf('```') !== -1;\r\n\r\n  if (hasLink) {\r\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\r\n    // E.g. `note` in `account`\r\n    const noTargetBlankLinks = Array.from(\r\n      dom.querySelectorAll('a:not([target=\"_blank\"])'),\r\n    );\r\n    noTargetBlankLinks.forEach((link) => {\r\n      link.setAttribute('target', '_blank');\r\n    });\r\n\r\n    // Remove all classes except `u-url`, `mention`, `hashtag`\r\n    const links = Array.from(dom.querySelectorAll('a[class]'));\r\n    links.forEach((link) => {\r\n      Array.from(link.classList).forEach((c) => {\r\n        if (!whitelistLinkClasses.includes(c)) {\r\n          link.classList.remove(c);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Add 'has-url-text' to all links that contains a url\r\n  if (hasLink) {\r\n    const links = Array.from(dom.querySelectorAll('a[href]'));\r\n    links.forEach((link) => {\r\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\r\n        link.classList.add('has-url-text');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Spanify un-spanned mentions\r\n  if (hasLink) {\r\n    const links = Array.from(dom.querySelectorAll('a[href]'));\r\n    const usernames = [];\r\n    links.forEach((link) => {\r\n      const text = link.innerText.trim();\r\n      const hasChildren = link.querySelector('*');\r\n      // If text looks like @username@domain, then it's a mention\r\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\r\n        // Only show @username\r\n        const [_, username, domain] = text.split('@');\r\n        if (!hasChildren) {\r\n          if (\r\n            !usernames.find(([u]) => u === username) ||\r\n            usernames.find(([u, d]) => u === username && d === domain)\r\n          ) {\r\n            link.innerHTML = `@<span>${username}</span>`;\r\n            usernames.push([username, domain]);\r\n          } else {\r\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\r\n          }\r\n        }\r\n        link.classList.add('mention');\r\n      }\r\n      // If text looks like #hashtag, then it's a hashtag\r\n      if (/^#[^#]+$/g.test(text)) {\r\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\r\n        link.classList.add('mention', 'hashtag');\r\n      }\r\n    });\r\n  }\r\n\r\n  // EMOJIS\r\n  // ======\r\n  // Convert :shortcode: to <img />\r\n  let textNodes;\r\n  if (enhancedContent.indexOf(':') !== -1) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (emojis) {\r\n        html = emojifyText(html, emojis);\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // CODE BLOCKS\r\n  // ===========\r\n  // Convert ```code``` to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const blocks = Array.from(dom.querySelectorAll('p')).filter((p) =>\r\n      /^```[^]+```$/g.test(p.innerText.trim()),\r\n    );\r\n    blocks.forEach((block) => {\r\n      const pre = document.createElement('pre');\r\n      // Replace <br /> with newlines\r\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\r\n      block.replaceWith(pre);\r\n    });\r\n  }\r\n\r\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const paragraphs = Array.from(dom.querySelectorAll('p'));\r\n    // Filter out paragraphs with ``` in beginning only\r\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\r\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\r\n    codeBlocks.forEach((block) => {\r\n      const nextParagraphs = [block];\r\n      let hasCodeBlock = false;\r\n      let currentBlock = block;\r\n      while (currentBlock.nextElementSibling) {\r\n        const next = currentBlock.nextElementSibling;\r\n        if (next && next.tagName === 'P') {\r\n          if (/```$/g.test(next.innerText)) {\r\n            nextParagraphs.push(next);\r\n            hasCodeBlock = true;\r\n            break;\r\n          } else {\r\n            nextParagraphs.push(next);\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n        currentBlock = next;\r\n      }\r\n      if (hasCodeBlock) {\r\n        const pre = document.createElement('pre');\r\n        nextParagraphs.forEach((p) => {\r\n          // Replace <br /> with newlines\r\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n        });\r\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\r\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\r\n        block.replaceWith(pre);\r\n        nextParagraphs.forEach((p) => p.remove());\r\n      }\r\n    });\r\n  }\r\n\r\n  // INLINE CODE\r\n  // ===========\r\n  // Convert `code` to <code>code</code>\r\n  if (enhancedContent.indexOf('`') !== -1) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/`[^`]+`/g.test(html)) {\r\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // TWITTER USERNAMES\r\n  // =================\r\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\r\n  if (/twitter\\.com/i.test(enhancedContent)) {\r\n    textNodes = extractTextNodes(dom, {\r\n      rejectFilter: ['A'],\r\n    });\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\r\n        html = html.replaceAll(\r\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\r\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\r\n        );\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // HASHTAG STUFFING\r\n  // ================\r\n  // Get the <p> that contains a lot of hashtags, add a class to it\r\n  if (enhancedContent.indexOf('#') !== -1) {\r\n    let prevIndex = null;\r\n    const hashtagStuffedParagraphs = Array.from(\r\n      dom.querySelectorAll('p'),\r\n    ).filter((p, index) => {\r\n      let hashtagCount = 0;\r\n      for (let i = 0; i < p.childNodes.length; i++) {\r\n        const node = p.childNodes[i];\r\n\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n          const text = node.textContent.trim();\r\n          if (text !== '') {\r\n            return false;\r\n          }\r\n        } else if (node.tagName === 'BR') {\r\n          // Ignore <br />\r\n        } else if (node.tagName === 'A') {\r\n          const linkText = node.textContent.trim();\r\n          if (!linkText || !linkText.startsWith('#')) {\r\n            return false;\r\n          } else {\r\n            hashtagCount++;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      // Only consider \"stuffing\" if:\r\n      // - there are more than 3 hashtags\r\n      // - there are more than 1 hashtag in adjacent paragraphs\r\n      if (hashtagCount > 3) {\r\n        prevIndex = index;\r\n        return true;\r\n      }\r\n      if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\r\n        prevIndex = index;\r\n        return true;\r\n      }\r\n    });\r\n    if (hashtagStuffedParagraphs?.length) {\r\n      hashtagStuffedParagraphs.forEach((p) => {\r\n        p.classList.add('hashtag-stuffing');\r\n        p.title = p.innerText;\r\n      });\r\n    }\r\n  }\r\n\r\n  if (postEnhanceDOM) {\r\n    postEnhanceDOM(dom); // mutate dom\r\n  }\r\n\r\n  enhancedContent = dom.innerHTML;\r\n\r\n  return enhancedContent;\r\n}\r\nconst enhanceContent = mem(_enhanceContent);\r\n\r\nconst defaultRejectFilter = [\r\n  // Document metadata\r\n  'STYLE',\r\n  // Image and multimedia\r\n  'IMG',\r\n  'VIDEO',\r\n  'AUDIO',\r\n  'AREA',\r\n  'MAP',\r\n  'TRACK',\r\n  // Embedded content\r\n  'EMBED',\r\n  'IFRAME',\r\n  'OBJECT',\r\n  'PICTURE',\r\n  'PORTAL',\r\n  'SOURCE',\r\n  // SVG and MathML\r\n  'SVG',\r\n  'MATH',\r\n  // Scripting\r\n  'CANVAS',\r\n  'NOSCRIPT',\r\n  'SCRIPT',\r\n  // Forms\r\n  'INPUT',\r\n  'OPTION',\r\n  'TEXTAREA',\r\n  // Web Components\r\n  'SLOT',\r\n  'TEMPLATE',\r\n];\r\nconst defaultRejectFilterMap = Object.fromEntries(\r\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\r\n);\r\nfunction extractTextNodes(dom, opts = {}) {\r\n  const textNodes = [];\r\n  const walk = document.createTreeWalker(\r\n    dom,\r\n    NodeFilter.SHOW_TEXT,\r\n    {\r\n      acceptNode(node) {\r\n        if (defaultRejectFilterMap[node.parentNode.nodeName]) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        if (\r\n          opts.rejectFilter &&\r\n          opts.rejectFilter.includes(node.parentNode.nodeName)\r\n        ) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        return NodeFilter.FILTER_ACCEPT;\r\n      },\r\n    },\r\n    false,\r\n  );\r\n  let node;\r\n  while ((node = walk.nextNode())) {\r\n    textNodes.push(node);\r\n  }\r\n  return textNodes;\r\n}\r\n\r\nexport default enhanceContent;\r\n","import mem from './mem';\r\n\r\nconst div = document.createElement('div');\r\nfunction getHTMLText(html) {\r\n  if (!html) return '';\r\n  div.innerHTML = html\r\n    .replace(/<\\/p>/g, '</p>\\n\\n')\r\n    .replace(/<\\/li>/g, '</li>\\n');\r\n  div.querySelectorAll('br').forEach((br) => {\r\n    br.replaceWith('\\n');\r\n  });\r\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\r\n}\r\n\r\nexport default mem(getHTMLText);\r\n","import states from './states';\r\n\r\nfunction handleContentLinks(opts) {\r\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\r\n  return (e) => {\r\n    let { target } = e;\r\n    target = target.closest('a');\r\n    if (!target) return;\r\n\r\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\r\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\r\n      return;\r\n    }\r\n\r\n    const prevText = target.previousSibling?.textContent;\r\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\r\n    const textStartsWithAt = target.innerText.startsWith('@');\r\n    if (\r\n      (target.classList.contains('u-url') && textStartsWithAt) ||\r\n      (textBeforeLinkIsAt && !textStartsWithAt)\r\n    ) {\r\n      const targetText = (\r\n        target.querySelector('span') || target\r\n      ).innerText.trim();\r\n      const username = targetText.replace(/^@/, '');\r\n      const url = target.getAttribute('href');\r\n      const mention = mentions.find(\r\n        (mention) =>\r\n          mention.username === username ||\r\n          mention.acct === username ||\r\n          mention.url === url,\r\n      );\r\n      if (mention) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.showAccount = {\r\n          account: mention.acct,\r\n          instance,\r\n        };\r\n      } else if (!/^http/i.test(targetText)) {\r\n        console.log('mention not found', targetText);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const href = target.getAttribute('href');\r\n        states.showAccount = {\r\n          account: href,\r\n          instance,\r\n        };\r\n      }\r\n    } else if (!previewMode) {\r\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\r\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const tag = target.innerText.replace(/^#/, '').trim();\r\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\r\n        console.log({ hashURL });\r\n        location.hash = hashURL;\r\n      } else if (\r\n        states.unfurledLinks[target.href]?.url &&\r\n        statusURL !== target.href\r\n      ) {\r\n        // If unfurled AND not self-referential\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.prevLocation = {\r\n          pathname: location.hash.replace(/^#/, ''),\r\n        };\r\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default handleContentLinks;\r\n","const { locale } = new Intl.DateTimeFormat().resolvedOptions();\r\n\r\nfunction niceDateTime(date, { hideTime, formatOpts } = {}) {\r\n  if (!(date instanceof Date)) {\r\n    date = new Date(date);\r\n  }\r\n  const currentYear = new Date().getFullYear();\r\n  const dateText = Intl.DateTimeFormat(locale, {\r\n    // Show year if not current year\r\n    year: date.getFullYear() === currentYear ? undefined : 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    // Hide time if requested\r\n    hour: hideTime ? undefined : 'numeric',\r\n    minute: hideTime ? undefined : 'numeric',\r\n    ...formatOpts,\r\n  }).format(date);\r\n  return dateText;\r\n}\r\n\r\nexport default niceDateTime;\r\n","const { locale } = Intl.NumberFormat().resolvedOptions();\r\nconst shortenNumber = Intl.NumberFormat(locale, {\r\n  notation: 'compact',\r\n}).format;\r\nexport default shortenNumber;\r\n","import './account-block.css';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\n\r\nfunction AccountBlock({\r\n  skeleton,\r\n  account,\r\n  avatarSize = 'xl',\r\n  useAvatarStatic = false,\r\n  instance,\r\n  external,\r\n  internal,\r\n  onClick,\r\n  showActivity = false,\r\n  showStats = false,\r\n  accountInstance,\r\n  hideDisplayName = false,\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"account-block skeleton\">\r\n        <Avatar size={avatarSize} />\r\n        <span>\r\n          <b>████████</b>\r\n          <br />\r\n          <span class=\"account-block-acct\">@██████</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const {\r\n    id,\r\n    acct,\r\n    avatar,\r\n    avatarStatic,\r\n    displayName,\r\n    username,\r\n    emojis,\r\n    url,\r\n    statusesCount,\r\n    lastStatusAt,\r\n    bot,\r\n    fields,\r\n    note,\r\n    group,\r\n  } = account;\r\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n  if (accountInstance) {\r\n    acct2 = `@${accountInstance}`;\r\n  }\r\n\r\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\r\n\r\n  return (\r\n    <a\r\n      class=\"account-block\"\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        if (onClick) return onClick(e);\r\n        if (internal) {\r\n          // navigate(`/${instance}/a/${id}`);\r\n          location.hash = `/${instance}/a/${id}`;\r\n        } else {\r\n          states.showAccount = {\r\n            account,\r\n            instance,\r\n          };\r\n        }\r\n      }}\r\n    >\r\n      <Avatar\r\n        url={useAvatarStatic ? avatarStatic : avatar || avatarStatic}\r\n        size={avatarSize}\r\n        squircle={bot}\r\n      />\r\n      <span class=\"account-block-content\">\r\n        {!hideDisplayName && (\r\n          <>\r\n            {displayName ? (\r\n              <b>\r\n                <EmojiText text={displayName} emojis={emojis} />\r\n              </b>\r\n            ) : (\r\n              <b>{username}</b>\r\n            )}\r\n            <br />\r\n          </>\r\n        )}\r\n        <span class=\"account-block-acct\">\r\n          @{acct1}\r\n          <wbr />\r\n          {acct2}\r\n        </span>\r\n        {showActivity && (\r\n          <>\r\n            <br />\r\n            <small class=\"last-status-at insignificant\">\r\n              Posts: {statusesCount}\r\n              {!!lastStatusAt && (\r\n                <>\r\n                  {' '}\r\n                  &middot; Last posted:{' '}\r\n                  {niceDateTime(lastStatusAt, {\r\n                    hideTime: true,\r\n                  })}\r\n                </>\r\n              )}\r\n            </small>\r\n          </>\r\n        )}\r\n        {showStats && (\r\n          <div class=\"account-block-stats\">\r\n            <div\r\n              class=\"short-desc\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: enhanceContent(note, { emojis }),\r\n              }}\r\n            />\r\n            {bot && (\r\n              <>\r\n                <span class=\"tag\">\r\n                  <Icon icon=\"bot\" /> Automated\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!group && (\r\n              <>\r\n                <span class=\"tag\">\r\n                  <Icon icon=\"group\" /> Group\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!verifiedField && (\r\n              <span class=\"verified-field ib\">\r\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\r\n                <span\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: enhanceContent(verifiedField.value, { emojis }),\r\n                  }}\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </span>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default AccountBlock;\r\n","import { satisfies } from 'compare-versions';\r\n\r\nimport features from '../data/features.json';\r\n\r\nimport { getCurrentInstance } from './store-utils';\r\n\r\nconst supportsCache = {};\r\n\r\nfunction supports(feature) {\r\n  try {\r\n    const { version, domain } = getCurrentInstance();\r\n    const key = `${domain}-${feature}`;\r\n    if (supportsCache[key]) return supportsCache[key];\r\n    const range = features[feature];\r\n    if (!range) return false;\r\n    return (supportsCache[key] = satisfies(version, range, {\r\n      includePrerelease: true,\r\n      loose: true,\r\n    }));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default supports;\r\n","import './translation-block.css';\r\n\r\nimport pRetry from 'p-retry';\r\nimport pThrottle from 'p-throttle';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\n\r\nimport sourceLanguages from '../data/lingva-source-languages';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport localeCode2Text from '../utils/localeCode2Text';\r\nimport pmem from '../utils/pmem';\r\n\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\n\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 2000,\r\n});\r\n\r\n// Using other API instances instead of lingva.ml because of this bug (slashes don't work):\r\n// https://github.com/thedaviddelta/lingva-translate/issues/68\r\nconst LINGVA_INSTANCES = [\r\n  'lingva.lunar.icu',\r\n  'lingva.garudalinux.org',\r\n  'translate.plausibility.cloud',\r\n];\r\nlet currentLingvaInstance = 0;\r\n\r\nfunction _lingvaTranslate(text, source, target) {\r\n  console.log('TRANSLATE', text, source, target);\r\n  const fetchCall = () => {\r\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\r\n    return fetch(\r\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\r\n        text,\r\n      )}`,\r\n    )\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(res.statusText);\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        return {\r\n          provider: 'lingva',\r\n          content: res.translation,\r\n          detectedSourceLanguage: res.info?.detectedSource,\r\n          info: res.info,\r\n        };\r\n      });\r\n  };\r\n  return pRetry(fetchCall, {\r\n    retries: 3,\r\n    onFailedAttempt: (e) => {\r\n      currentLingvaInstance =\r\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\r\n      console.log(\r\n        'Retrying translation with another instance',\r\n        currentLingvaInstance,\r\n      );\r\n    },\r\n  });\r\n  // return masto.v1.statuses.$select(id).translate({\r\n  //   lang: DEFAULT_LANG,\r\n  // });\r\n}\r\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\r\nconst lingvaTranslate = pmem(_lingvaTranslate, {\r\n  maxAge: TRANSLATED_MAX_AGE,\r\n});\r\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\r\n  // I know, this is double-layered memoization\r\n  maxAge: TRANSLATED_MAX_AGE,\r\n});\r\n\r\nfunction TranslationBlock({\r\n  forceTranslate,\r\n  sourceLanguage,\r\n  onTranslate,\r\n  text = '',\r\n  mini,\r\n}) {\r\n  const targetLang = getTranslateTargetLanguage(true);\r\n  const [uiState, setUIState] = useState('default');\r\n  const [pronunciationContent, setPronunciationContent] = useState(null);\r\n  const [translatedContent, setTranslatedContent] = useState(null);\r\n  const [detectedLang, setDetectedLang] = useState(null);\r\n  const detailsRef = useRef();\r\n\r\n  const sourceLangText = sourceLanguage\r\n    ? localeCode2Text(sourceLanguage)\r\n    : null;\r\n  const targetLangText = localeCode2Text(targetLang);\r\n  const apiSourceLang = useRef('auto');\r\n\r\n  if (!onTranslate) {\r\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\r\n  }\r\n\r\n  const translate = async () => {\r\n    setUIState('loading');\r\n    try {\r\n      const { content, detectedSourceLanguage, provider, error, ...props } =\r\n        await onTranslate(text, apiSourceLang.current, targetLang);\r\n      if (content) {\r\n        if (detectedSourceLanguage) {\r\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\r\n          setDetectedLang(detectedLangText);\r\n        }\r\n        if (provider === 'lingva') {\r\n          const pronunciation = props?.info?.pronunciation?.query;\r\n          if (pronunciation) {\r\n            setPronunciationContent(pronunciation);\r\n          }\r\n        }\r\n        setTranslatedContent(content);\r\n        setUIState('default');\r\n        if (!mini && content.trim() !== text.trim()) {\r\n          detailsRef.current.open = true;\r\n          detailsRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'nearest',\r\n          });\r\n        }\r\n      } else {\r\n        if (error) console.error(error);\r\n        setUIState('error');\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      setUIState('error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (forceTranslate) {\r\n      translate();\r\n    }\r\n  }, [forceTranslate]);\r\n\r\n  if (mini) {\r\n    if (\r\n      !!translatedContent &&\r\n      translatedContent.trim() !== text.trim() &&\r\n      detectedLang !== targetLangText\r\n    ) {\r\n      return (\r\n        <div class=\"shazam-container\">\r\n          <div class=\"shazam-container-inner\">\r\n            <div class=\"status-translation-block-mini\">\r\n              <Icon\r\n                icon=\"translate\"\r\n                alt={`Auto-translated from ${sourceLangText}`}\r\n              />\r\n              <output\r\n                lang={targetLang}\r\n                dir=\"auto\"\r\n                title={pronunciationContent || ''}\r\n              >\r\n                {translatedContent}\r\n              </output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      class=\"status-translation-block\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <details ref={detailsRef}>\r\n        <summary>\r\n          <button\r\n            type=\"button\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              detailsRef.current.open = !detailsRef.current.open;\r\n              if (uiState === 'loading') return;\r\n              if (!translatedContent) translate();\r\n            }}\r\n          >\r\n            <Icon icon=\"translate\" />{' '}\r\n            <span>\r\n              {uiState === 'loading'\r\n                ? 'Translating…'\r\n                : sourceLanguage && sourceLangText && !detectedLang\r\n                ? `Translate from ${sourceLangText}`\r\n                : `Translate`}\r\n            </span>\r\n          </button>\r\n        </summary>\r\n        <div class=\"translated-block\">\r\n          <div class=\"translation-info insignificant\">\r\n            <select\r\n              class=\"translated-source-select\"\r\n              disabled={uiState === 'loading'}\r\n              onChange={(e) => {\r\n                apiSourceLang.current = e.target.value;\r\n                translate();\r\n              }}\r\n            >\r\n              {sourceLanguages.map((l) => (\r\n                <option value={l.code}>\r\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\r\n                </option>\r\n              ))}\r\n            </select>{' '}\r\n            <span>→ {targetLangText}</span>\r\n            <Loader abrupt hidden={uiState !== 'loading'} />\r\n          </div>\r\n          {uiState === 'error' ? (\r\n            <p class=\"ui-state\">Failed to translate</p>\r\n          ) : (\r\n            !!translatedContent && (\r\n              <>\r\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\r\n                  {translatedContent}\r\n                </output>\r\n                {!!pronunciationContent && (\r\n                  <output\r\n                    class=\"translated-pronunciation-content\"\r\n                    tabIndex={-1}\r\n                    onClick={(e) => {\r\n                      e.target.classList.toggle('expand');\r\n                    }}\r\n                  >\r\n                    {pronunciationContent}\r\n                  </output>\r\n                )}\r\n              </>\r\n            )\r\n          )}\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslationBlock;\r\n","import {\r\n  clear,\r\n  createStore,\r\n  del,\r\n  delMany,\r\n  get,\r\n  getMany,\r\n  keys,\r\n  set,\r\n} from 'idb-keyval';\r\n\r\nconst draftsStore = createStore('drafts-db', 'drafts-store');\r\n\r\n// Add additonal `draftsStore` parameter to all methods\r\n\r\nconst drafts = {\r\n  set: (key, val) => set(key, val, draftsStore),\r\n  get: (key) => get(key, draftsStore),\r\n  getMany: (keys) => getMany(keys, draftsStore),\r\n  del: (key) => del(key, draftsStore),\r\n  delMany: (keys) => delMany(keys, draftsStore),\r\n  clear: () => clear(draftsStore),\r\n  keys: () => keys(draftsStore),\r\n};\r\n\r\nexport default {\r\n  drafts,\r\n};\r\n","export default {\r\n  public: 'earth',\r\n  unlisted: 'group',\r\n  private: 'lock',\r\n  direct: 'message',\r\n};\r\n","import { useState } from 'preact/hooks';\r\n\r\nimport shortenNumber from '../utils/shorten-number';\r\n\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\nimport RelativeTime from './relative-time';\r\n\r\nexport default function Poll({\r\n  poll,\r\n  lang,\r\n  readOnly,\r\n  refresh = () => {},\r\n  votePoll = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const {\r\n    expired,\r\n    expiresAt,\r\n    id,\r\n    multiple,\r\n    options,\r\n    ownVotes,\r\n    voted,\r\n    votersCount,\r\n    votesCount,\r\n    emojis,\r\n  } = poll;\r\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\r\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\r\n  // https://stackoverflow.com/a/56718027/20838\r\n  // useEffect(() => {\r\n  //   let timeout;\r\n  //   if (!expired && expiresAtDate) {\r\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\r\n  //     if (ms > 0) {\r\n  //       timeout = setTimeout(() => {\r\n  //         setUIState('loading');\r\n  //         (async () => {\r\n  //           // await refresh();\r\n  //           setUIState('default');\r\n  //         })();\r\n  //       }, ms);\r\n  //     }\r\n  //   }\r\n  //   return () => {\r\n  //     clearTimeout(timeout);\r\n  //   };\r\n  // }, [expired, expiresAtDate]);\r\n\r\n  const pollVotesCount = votersCount || votesCount;\r\n  let roundPrecision = 0;\r\n\r\n  if (pollVotesCount <= 1000) {\r\n    roundPrecision = 0;\r\n  } else if (pollVotesCount <= 10000) {\r\n    roundPrecision = 1;\r\n  } else if (pollVotesCount <= 100000) {\r\n    roundPrecision = 2;\r\n  }\r\n\r\n  const [showResults, setShowResults] = useState(false);\r\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\r\n\r\n  return (\r\n    <div\r\n      lang={lang}\r\n      dir=\"auto\"\r\n      class={`poll ${readOnly ? 'read-only' : ''} ${\r\n        uiState === 'loading' ? 'loading' : ''\r\n      }`}\r\n    >\r\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\r\n        <>\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title, votesCount: optionVotesCount } = option;\r\n              const percentage = pollVotesCount\r\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\r\n                    roundPrecision,\r\n                  )\r\n                : 0; // check if current poll choice is the leading one\r\n\r\n              const isLeading =\r\n                optionVotesCount > 0 &&\r\n                optionVotesCount ===\r\n                  Math.max(...options.map((o) => o.votesCount));\r\n              return (\r\n                <div\r\n                  key={`${i}-${title}-${optionVotesCount}`}\r\n                  class={`poll-option poll-result ${\r\n                    isLeading ? 'poll-option-leading' : ''\r\n                  }`}\r\n                  style={{\r\n                    '--percentage': `${percentage}%`,\r\n                  }}\r\n                >\r\n                  <div class=\"poll-option-title\">\r\n                    <span>\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                    {voted && ownVotes.includes(i) && (\r\n                      <>\r\n                        {' '}\r\n                        <Icon icon=\"check-circle\" />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    class=\"poll-option-votes\"\r\n                    title={`${optionVotesCount} vote${\r\n                      optionVotesCount === 1 ? '' : 's'\r\n                    }`}\r\n                  >\r\n                    {percentage}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!expired && !voted && (\r\n            <button\r\n              class=\"poll-vote-button plain2\"\r\n              disabled={uiState === 'loading'}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setShowResults(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\r\n            </button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const formData = new FormData(form);\r\n            const choices = [];\r\n            formData.forEach((value, key) => {\r\n              if (key === 'poll') {\r\n                choices.push(value);\r\n              }\r\n            });\r\n            if (!choices.length) return;\r\n            setUIState('loading');\r\n            await votePoll(choices);\r\n            setUIState('default');\r\n          }}\r\n        >\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title } = option;\r\n              return (\r\n                <div class=\"poll-option\">\r\n                  <label class=\"poll-label\">\r\n                    <input\r\n                      type={multiple ? 'checkbox' : 'radio'}\r\n                      name=\"poll\"\r\n                      value={i}\r\n                      disabled={uiState === 'loading'}\r\n                      readOnly={readOnly}\r\n                    />\r\n                    <span class=\"poll-option-title\">\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!readOnly && (\r\n            <button\r\n              class=\"poll-vote-button\"\r\n              type=\"submit\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              Vote\r\n            </button>\r\n          )}\r\n        </form>\r\n      )}\r\n      <p class=\"poll-meta\">\r\n        {!expired && !readOnly && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            style={{\r\n              marginLeft: -8,\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setUIState('loading');\r\n\r\n              (async () => {\r\n                await refresh();\r\n                setUIState('default');\r\n              })();\r\n            }}\r\n            title=\"Refresh\"\r\n          >\r\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\r\n          </button>\r\n        )}\r\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setShowResults(!showResults);\r\n            }}\r\n            title={showResults ? 'Hide results' : 'Show results'}\r\n          >\r\n            <Icon\r\n              icon={showResults ? 'eye-open' : 'eye-close'}\r\n              alt={showResults ? 'Hide results' : 'Show results'}\r\n            />{' '}\r\n          </button>\r\n        )}\r\n        {!expired && !readOnly && ' '}\r\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\r\n        {votesCount === 1 ? '' : 's'}\r\n        {!!votersCount && votersCount !== votesCount && (\r\n          <>\r\n            {' '}\r\n            &bull; <span title={votersCount}>\r\n              {shortenNumber(votersCount)}\r\n            </span>{' '}\r\n            voter\r\n            {votersCount === 1 ? '' : 's'}\r\n          </>\r\n        )}{' '}\r\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\r\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\r\n      </p>{' '}\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'preact';\r\n\r\nconst FilterContext = createContext();\r\nexport default FilterContext;\r\n","import mem from './mem';\r\nimport store from './store';\r\n\r\nfunction _isFiltered(filtered, filterContext) {\r\n  if (!filtered?.length) return false;\r\n  const appliedFilters = filtered.filter((f) => {\r\n    const { filter } = f;\r\n    const hasContext = filter.context.includes(filterContext);\r\n    if (!hasContext) return false;\r\n    if (!filter.expiresAt) return hasContext;\r\n    return new Date(filter.expiresAt) > new Date();\r\n  });\r\n  if (!appliedFilters.length) return false;\r\n  const isHidden = appliedFilters.some((f) => f.filter.filterAction === 'hide');\r\n  if (isHidden)\r\n    return {\r\n      action: 'hide',\r\n    };\r\n  const isWarn = appliedFilters.some((f) => f.filter.filterAction === 'warn');\r\n  if (isWarn) {\r\n    const filterTitles = appliedFilters.map((f) => f.filter.title);\r\n    return {\r\n      action: 'warn',\r\n      titles: filterTitles,\r\n      titlesStr: filterTitles.join(' • '),\r\n    };\r\n  }\r\n  return false;\r\n}\r\nexport const isFiltered = mem(_isFiltered);\r\n\r\nexport function filteredItem(item, filterContext, currentAccountID) {\r\n  const { filtered } = item;\r\n  if (!filtered?.length) return true;\r\n  const isSelf = currentAccountID && item.account?.id === currentAccountID;\r\n  if (isSelf) return true;\r\n  const filterState = isFiltered(filtered, filterContext);\r\n  if (!filterState) return true;\r\n  if (filterState.action === 'hide') return false;\r\n  // item._filtered = filterState;\r\n  return true;\r\n}\r\nexport function filteredItems(items, filterContext) {\r\n  if (!items?.length) return [];\r\n  if (!filterContext) return items;\r\n  const currentAccountID = store.session.get('currentAccount');\r\n  return items.filter((item) =>\r\n    filteredItem(item, filterContext, currentAccountID),\r\n  );\r\n}\r\n","const div = document.createElement('div');\r\nexport default function htmlContentLength(html) {\r\n  if (!html) return 0;\r\n  div.innerHTML = html;\r\n  return div.innerText.length;\r\n}\r\n","export default function isMastodonLinkMaybe(url) {\r\n  const { pathname, hash } = new URL(url);\r\n  return (\r\n    /^\\/.*\\/\\d+$/i.test(pathname) ||\r\n    /^\\/@[^/]+\\/(statuses|posts)\\/\\w+\\/?$/i.test(pathname) || // GoToSocial, Takahe\r\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\r\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\r\n    /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) || // Pleroma\r\n    /#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(hash) // Phanpy 🫣\r\n  );\r\n}\r\n","import getHTMLText from './getHTMLText';\r\n\r\nfunction statusPeek(status) {\r\n  const { spoilerText, content, poll, mediaAttachments } = status;\r\n  let text = '';\r\n  if (spoilerText?.trim()) {\r\n    text += spoilerText;\r\n  } else {\r\n    text += getHTMLText(content);\r\n  }\r\n  text = text.trim();\r\n  if (poll) {\r\n    text += ' 📊';\r\n  }\r\n  if (mediaAttachments?.length) {\r\n    text +=\r\n      ' ' +\r\n      mediaAttachments\r\n        .map(\r\n          (m) =>\r\n            ({\r\n              image: '🖼️',\r\n              gifv: '🎞️',\r\n              video: '📹',\r\n              audio: '🎵',\r\n              unknown: '',\r\n            }[m.type] || ''),\r\n        )\r\n        .join('');\r\n  }\r\n  return text;\r\n}\r\n\r\nexport default statusPeek;\r\n","import { useRef } from 'preact/hooks';\r\nimport { useThrottledCallback } from 'use-debounce';\r\nimport useResizeObserver from 'use-resize-observer';\r\n\r\nexport default function useTruncated({ className = 'truncated' } = {}) {\r\n  const ref = useRef();\r\n  const onResize = useThrottledCallback(({ height }) => {\r\n    if (ref.current) {\r\n      const { scrollHeight } = ref.current;\r\n      let truncated = scrollHeight > height;\r\n      if (truncated) {\r\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\r\n        const computedHeight = parseInt(maxHeight || _height, 10);\r\n        truncated = scrollHeight > computedHeight;\r\n      }\r\n      ref.current.classList.toggle(className, truncated);\r\n    }\r\n  }, 300);\r\n  useResizeObserver({\r\n    ref,\r\n    box: 'border-box',\r\n    onResize,\r\n  });\r\n  return ref;\r\n}\r\n","import { getBlurHashAverageColor } from 'fast-blurhash';\r\nimport { Fragment } from 'preact';\r\nimport {\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\r\n\r\nimport mem from '../utils/mem';\r\nimport states from '../utils/states';\r\n\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport { formatDuration } from './status';\r\n\r\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\r\n\r\n/*\r\nMedia type\r\n===\r\nunknown = unsupported or unrecognized file type\r\nimage = Static image\r\ngifv = Looping, soundless animation\r\nvideo = Video clip\r\naudio = Audio track\r\n*/\r\n\r\nconst dataAltLabel = 'ALT';\r\nconst AltBadge = (props) => {\r\n  const { alt, lang, index, ...rest } = props;\r\n  if (!alt || !alt.trim()) return null;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      class=\"alt-badge clickable\"\r\n      {...rest}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        states.showMediaAlt = {\r\n          alt,\r\n          lang,\r\n        };\r\n      }}\r\n      title=\"Media description\"\r\n    >\r\n      {dataAltLabel}\r\n      {!!index && <sup>{index}</sup>}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst MEDIA_CAPTION_LIMIT = 140;\r\nexport const isMediaCaptionLong = mem((caption) =>\r\n  caption?.length\r\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\r\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\r\n    : false,\r\n);\r\n\r\nfunction Media({\r\n  class: className = '',\r\n  media,\r\n  to,\r\n  lang,\r\n  showOriginal,\r\n  autoAnimate,\r\n  showCaption,\r\n  altIndex,\r\n  onClick = () => {},\r\n}) {\r\n  const {\r\n    blurhash,\r\n    description,\r\n    meta,\r\n    previewRemoteUrl,\r\n    previewUrl,\r\n    remoteUrl,\r\n    url,\r\n    type,\r\n  } = media;\r\n  const { original = {}, small, focus } = meta || {};\r\n\r\n  const width = showOriginal ? original?.width : small?.width;\r\n  const height = showOriginal ? original?.height : small?.height;\r\n  const mediaURL = showOriginal ? url : previewUrl || url;\r\n  const remoteMediaURL = showOriginal\r\n    ? remoteUrl\r\n    : previewRemoteUrl || remoteUrl;\r\n  const orientation = width >= height ? 'landscape' : 'portrait';\r\n\r\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\r\n\r\n  const videoRef = useRef();\r\n\r\n  let focalBackgroundPosition;\r\n  if (focus) {\r\n    // Convert focal point to CSS background position\r\n    // Formula from jquery-focuspoint\r\n    // x = -1, y = 1 => 0% 0%\r\n    // x = 0, y = 0 => 50% 50%\r\n    // x = 1, y = -1 => 100% 100%\r\n    const x = ((focus.x + 1) / 2) * 100;\r\n    const y = ((1 - focus.y) / 2) * 100;\r\n    focalBackgroundPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\r\n  }\r\n\r\n  const mediaRef = useRef();\r\n  const onUpdate = useCallback(({ x, y, scale }) => {\r\n    const { current: media } = mediaRef;\r\n\r\n    if (media) {\r\n      const value = make3dTransformValue({ x, y, scale });\r\n\r\n      if (scale === 1) {\r\n        media.style.removeProperty('transform');\r\n      } else {\r\n        media.style.setProperty('transform', value);\r\n      }\r\n\r\n      media.closest('.media-zoom').style.touchAction =\r\n        scale <= 1.01 ? 'pan-x' : '';\r\n    }\r\n  }, []);\r\n\r\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\r\n  const quickPinchZoomProps = {\r\n    enabled: pinchZoomEnabled,\r\n    draggableUnZoomed: false,\r\n    inertiaFriction: 0.9,\r\n    doubleTapZoomOutOnMaxScale: true,\r\n    containerProps: {\r\n      className: 'media-zoom',\r\n      style: {\r\n        overflow: 'visible',\r\n        //   width: 'inherit',\r\n        //   height: 'inherit',\r\n        //   justifyContent: 'inherit',\r\n        //   alignItems: 'inherit',\r\n        //   display: 'inherit',\r\n      },\r\n    },\r\n    onUpdate,\r\n  };\r\n\r\n  const Parent = useMemo(\r\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\r\n    [to],\r\n  );\r\n\r\n  const isVideoMaybe =\r\n    type === 'unknown' &&\r\n    /\\.(mp4|m4a|m4p|m4b|m4r|m4v|mov|webm)$/i.test(remoteMediaURL);\r\n  const isImage =\r\n    type === 'image' || (type === 'unknown' && previewUrl && !isVideoMaybe);\r\n\r\n  const parentRef = useRef();\r\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\r\n  useLayoutEffect(() => {\r\n    if (!isImage) return;\r\n    if (!showOriginal) return;\r\n    if (!parentRef.current) return;\r\n    const { offsetWidth, offsetHeight } = parentRef.current;\r\n    const smaller = width < offsetWidth && height < offsetHeight;\r\n    if (smaller) setImageSmallerThanParent(smaller);\r\n  }, [width, height]);\r\n\r\n  const maxAspectHeight =\r\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\r\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\r\n  const averageColorStyle = {\r\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n  };\r\n  const mediaStyles =\r\n    width && height\r\n      ? {\r\n          '--width': `${width}px`,\r\n          '--height': `${height}px`,\r\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\r\n          '--aspectWidth': `${\r\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\r\n          }px`,\r\n          aspectRatio: `${width} / ${height}`,\r\n          ...averageColorStyle,\r\n        }\r\n      : {\r\n          ...averageColorStyle,\r\n        };\r\n\r\n  const longDesc = isMediaCaptionLong(description);\r\n  const showInlineDesc =\r\n    !!showCaption && !showOriginal && !!description && !longDesc;\r\n  const Figure = !showInlineDesc\r\n    ? Fragment\r\n    : (props) => {\r\n        const { children, ...restProps } = props;\r\n        return (\r\n          <figure {...restProps}>\r\n            {children}\r\n            <figcaption\r\n              class=\"media-caption\"\r\n              lang={lang}\r\n              dir=\"auto\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                states.showMediaAlt = {\r\n                  alt: description,\r\n                  lang,\r\n                };\r\n              }}\r\n            >\r\n              {description}\r\n            </figcaption>\r\n          </figure>\r\n        );\r\n      };\r\n\r\n  if (isImage) {\r\n    // Note: type: unknown might not have width/height\r\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\r\n\r\n    useLayoutEffect(() => {\r\n      if (!isSafari) return;\r\n      if (!showOriginal) return;\r\n      (async () => {\r\n        try {\r\n          await fetch(mediaURL, { mode: 'no-cors' });\r\n          mediaRef.current.src = mediaURL;\r\n        } catch (e) {\r\n          // Ignore\r\n        }\r\n      })();\r\n    }, [mediaURL]);\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          ref={parentRef}\r\n          class={`media media-image ${className}`}\r\n          onClick={onClick}\r\n          data-orientation={orientation}\r\n          data-has-alt={!showInlineDesc}\r\n          style={\r\n            showOriginal\r\n              ? {\r\n                  backgroundImage: `url(${previewUrl})`,\r\n                  backgroundSize: imageSmallerThanParent\r\n                    ? `${width}px ${height}px`\r\n                    : undefined,\r\n                  ...averageColorStyle,\r\n                }\r\n              : mediaStyles\r\n          }\r\n        >\r\n          {showOriginal ? (\r\n            <QuickPinchZoom {...quickPinchZoomProps}>\r\n              <img\r\n                ref={mediaRef}\r\n                src={mediaURL}\r\n                alt={description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"eager\"\r\n                decoding=\"sync\"\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.closest('.media-zoom').style.display = '';\r\n                  setPinchZoomEnabled(true);\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n            </QuickPinchZoom>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={mediaURL}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n                style={{\r\n                  backgroundColor:\r\n                    rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n                  backgroundPosition: focalBackgroundPosition || 'center',\r\n                  // Duration based on width or height in pixels\r\n                  // 100px per second (rough estimate)\r\n                  // Clamp between 5s and 120s\r\n                  '--anim-duration': `${Math.min(\r\n                    Math.max(Math.max(width, height) / 100, 5),\r\n                    120,\r\n                  )}s`,\r\n                }}\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.dataset.loaded = true;\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\r\n    const shortDuration = original.duration < 31;\r\n    const isGIF = type === 'gifv' && shortDuration;\r\n    // If GIF is too long, treat it as a video\r\n    const loopable = original.duration < 61;\r\n    const formattedDuration = formatDuration(original.duration);\r\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\r\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\r\n\r\n    const videoHTML = `\r\n    <video\r\n      src=\"${url}\"\r\n      poster=\"${previewUrl}\"\r\n      width=\"${width}\"\r\n      height=\"${height}\"\r\n      data-orientation=\"${orientation}\"\r\n      preload=\"auto\"\r\n      autoplay\r\n      muted=\"${isGIF}\"\r\n      ${isGIF ? '' : 'controls'}\r\n      playsinline\r\n      loop=\"${loopable}\"\r\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\r\n    ></video>\r\n  `;\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\r\n            autoGIFAnimate ? 'media-contain' : ''\r\n          }`}\r\n          data-orientation={orientation}\r\n          data-formatted-duration={\r\n            !showOriginal ? formattedDuration : undefined\r\n          }\r\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\r\n          data-has-alt={!showInlineDesc}\r\n          // style={{\r\n          //   backgroundColor:\r\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n          // }}\r\n          style={!showOriginal && mediaStyles}\r\n          onClick={(e) => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n            onClick(e);\r\n          }}\r\n          onMouseEnter={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onMouseLeave={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onBlur={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n        >\r\n          {showOriginal || autoGIFAnimate ? (\r\n            isGIF && showOriginal ? (\r\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\r\n                <div\r\n                  ref={mediaRef}\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: videoHTML,\r\n                  }}\r\n                />\r\n              </QuickPinchZoom>\r\n            ) : (\r\n              <div\r\n                class=\"video-container\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: videoHTML,\r\n                }}\r\n              />\r\n            )\r\n          ) : isGIF ? (\r\n            <video\r\n              ref={videoRef}\r\n              src={url}\r\n              poster={previewUrl}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              preload=\"auto\"\r\n              // controls\r\n              playsinline\r\n              loop\r\n              muted\r\n            />\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={previewUrl}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n              />\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          {!showOriginal && !showInlineDesc && (\r\n            <AltBadge alt={description} lang={lang} index={altIndex} />\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'audio') {\r\n    const formattedDuration = formatDuration(original.duration);\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media media-audio ${className}`}\r\n          data-formatted-duration={\r\n            !showOriginal ? formattedDuration : undefined\r\n          }\r\n          data-has-alt={!showInlineDesc}\r\n          onClick={onClick}\r\n          style={!showOriginal && mediaStyles}\r\n        >\r\n          {showOriginal ? (\r\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\r\n          ) : previewUrl ? (\r\n            <img\r\n              src={previewUrl}\r\n              alt={showInlineDesc ? '' : description}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              loading=\"lazy\"\r\n            />\r\n          ) : null}\r\n          {!showOriginal && (\r\n            <>\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Media;\r\n","import { FocusableItem } from '@szhsin/react-menu';\r\n\r\nimport Link from './link';\r\n\r\nfunction MenuLink(props) {\r\n  return (\r\n    <FocusableItem>\r\n      {({ ref, closeMenu }) => (\r\n        <Link\r\n          {...props}\r\n          ref={ref}\r\n          onClick={({ detail }) =>\r\n            closeMenu(detail === 0 ? 'Enter' : undefined)\r\n          }\r\n        />\r\n      )}\r\n    </FocusableItem>\r\n  );\r\n}\r\n\r\nexport default MenuLink;\r\n","import './status.css';\r\n\r\nimport '@justinribeiro/lite-youtube';\r\nimport {\r\n  ControlledMenu,\r\n  Menu,\r\n  MenuDivider,\r\n  MenuHeader,\r\n  MenuItem,\r\n} from '@szhsin/react-menu';\r\nimport { decodeBlurHash } from 'fast-blurhash';\r\nimport pThrottle from 'p-throttle';\r\nimport { memo } from 'preact/compat';\r\nimport {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { InView } from 'react-intersection-observer';\r\nimport { useLongPress } from 'use-long-press';\r\nimport { useSnapshot } from 'valtio';\r\nimport { snapshot } from 'valtio/vanilla';\r\n\r\nimport AccountBlock from '../components/account-block';\r\nimport EmojiText from '../components/emoji-text';\r\nimport Loader from '../components/loader';\r\nimport Menu2 from '../components/menu2';\r\nimport MenuConfirm from '../components/menu-confirm';\r\nimport Modal from '../components/modal';\r\nimport NameText from '../components/name-text';\r\nimport Poll from '../components/poll';\r\nimport { api } from '../utils/api';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport FilterContext from '../utils/filter-context';\r\nimport { isFiltered } from '../utils/filters';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport getHTMLText from '../utils/getHTMLText';\r\nimport handleContentLinks from '../utils/handle-content-links';\r\nimport htmlContentLength from '../utils/html-content-length';\r\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\r\nimport localeMatch from '../utils/locale-match';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport openCompose from '../utils/open-compose';\r\nimport pmem from '../utils/pmem';\r\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport showToast from '../utils/show-toast';\r\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\r\nimport statusPeek from '../utils/status-peek';\r\nimport store from '../utils/store';\r\nimport useTruncated from '../utils/useTruncated';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport Media from './media';\r\nimport { isMediaCaptionLong } from './media';\r\nimport MenuLink from './menu-link';\r\nimport RelativeTime from './relative-time';\r\nimport TranslationBlock from './translation-block';\r\n\r\nconst INLINE_TRANSLATE_LIMIT = 140;\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 1000,\r\n});\r\n\r\nfunction fetchAccount(id, masto) {\r\n  return masto.v1.accounts.$select(id).fetch();\r\n}\r\nconst memFetchAccount = pmem(fetchAccount);\r\n\r\nconst visibilityText = {\r\n  public: 'Public',\r\n  unlisted: 'Unlisted',\r\n  private: 'Followers only',\r\n  direct: 'Private mention',\r\n};\r\n\r\nconst isIOS =\r\n  window.ontouchstart !== undefined &&\r\n  /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\nfunction Status({\r\n  statusID,\r\n  status,\r\n  instance: propInstance,\r\n  withinContext,\r\n  size = 'm',\r\n  skeleton,\r\n  readOnly,\r\n  contentTextWeight,\r\n  enableTranslate,\r\n  forceTranslate: _forceTranslate,\r\n  previewMode,\r\n  // allowFilters,\r\n  onMediaClick,\r\n  quoted,\r\n  onStatusLinkClick = () => {},\r\n  enableCommentHint,\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"status skeleton\">\r\n        <Avatar size=\"xxl\" />\r\n        <div class=\"container\">\r\n          <div class=\"meta\">███ ████████</div>\r\n          <div class=\"content-container\">\r\n            <div class=\"content\">\r\n              <p>████ ████████</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const { masto, instance, authenticated } = api({ instance: propInstance });\r\n  const { instance: currentInstance } = api();\r\n  const sameInstance = instance === currentInstance;\r\n\r\n  let sKey = statusKey(statusID, instance);\r\n  const snapStates = useSnapshot(states);\r\n  if (!status) {\r\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\r\n    sKey = statusKey(status?.id, instance);\r\n  }\r\n  if (!status) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    account: {\r\n      acct,\r\n      avatar,\r\n      avatarStatic,\r\n      id: accountId,\r\n      url: accountURL,\r\n      displayName,\r\n      username,\r\n      emojis: accountEmojis,\r\n      bot,\r\n      group,\r\n    },\r\n    id,\r\n    repliesCount,\r\n    reblogged,\r\n    reblogsCount,\r\n    favourited,\r\n    favouritesCount,\r\n    bookmarked,\r\n    poll,\r\n    muted,\r\n    sensitive,\r\n    spoilerText,\r\n    visibility, // public, unlisted, private, direct\r\n    language,\r\n    editedAt,\r\n    filtered,\r\n    card,\r\n    createdAt,\r\n    inReplyToId,\r\n    inReplyToAccountId,\r\n    content,\r\n    mentions,\r\n    mediaAttachments,\r\n    reblog,\r\n    uri,\r\n    url,\r\n    emojis,\r\n    // Non-API props\r\n    _deleted,\r\n    _pinned,\r\n    // _filtered,\r\n  } = status;\r\n\r\n  const currentAccount = useMemo(() => {\r\n    return store.session.get('currentAccount');\r\n  }, []);\r\n  const isSelf = useMemo(() => {\r\n    return currentAccount && currentAccount === accountId;\r\n  }, [accountId, currentAccount]);\r\n\r\n  const filterContext = useContext(FilterContext);\r\n  const filterInfo =\r\n    !isSelf && !readOnly && !previewMode && isFiltered(filtered, filterContext);\r\n\r\n  if (filterInfo?.action === 'hide') {\r\n    return null;\r\n  }\r\n\r\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\r\n\r\n  const debugHover = (e) => {\r\n    if (e.shiftKey) {\r\n      console.log({\r\n        ...status,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (/*allowFilters && */ size !== 'l' && filterInfo) {\r\n    return (\r\n      <FilteredStatus\r\n        status={status}\r\n        filterInfo={filterInfo}\r\n        instance={instance}\r\n        containerProps={{\r\n          onMouseEnter: debugHover,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const createdAtDate = new Date(createdAt);\r\n  const editedAtDate = new Date(editedAt);\r\n\r\n  let inReplyToAccountRef = mentions?.find(\r\n    (mention) => mention.id === inReplyToAccountId,\r\n  );\r\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\r\n    inReplyToAccountRef = { url: accountURL, username, displayName };\r\n  }\r\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\r\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\r\n    const account = states.accounts[inReplyToAccountId];\r\n    if (account) {\r\n      setInReplyToAccount(account);\r\n    } else {\r\n      memFetchAccount(inReplyToAccountId, masto)\r\n        .then((account) => {\r\n          setInReplyToAccount(account);\r\n          states.accounts[account.id] = account;\r\n        })\r\n        .catch((e) => {});\r\n    }\r\n  }\r\n  const mentionSelf =\r\n    inReplyToAccountId === currentAccount ||\r\n    mentions?.find((mention) => mention.id === currentAccount);\r\n\r\n  const readingExpandSpoilers = useMemo(() => {\r\n    const prefs = store.account.get('preferences') || {};\r\n    return !!prefs['reading:expand:spoilers'];\r\n  }, []);\r\n  const showSpoiler =\r\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id] || false;\r\n\r\n  if (reblog) {\r\n    // If has statusID, means useItemID (cached in states)\r\n\r\n    if (group) {\r\n      return (\r\n        <div\r\n          data-state-post-id={sKey}\r\n          class=\"status-group\"\r\n          onMouseEnter={debugHover}\r\n        >\r\n          <div class=\"status-pre-meta\">\r\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\r\n            <NameText account={status.account} instance={instance} showAvatar />\r\n          </div>\r\n          <Status\r\n            status={statusID ? null : reblog}\r\n            statusID={statusID ? reblog.id : null}\r\n            instance={instance}\r\n            size={size}\r\n            contentTextWeight={contentTextWeight}\r\n            readOnly={readOnly}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        data-state-post-id={sKey}\r\n        class=\"status-reblog\"\r\n        onMouseEnter={debugHover}\r\n      >\r\n        <div class=\"status-pre-meta\">\r\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\r\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\r\n          <span>boosted</span>\r\n        </div>\r\n        <Status\r\n          status={statusID ? null : reblog}\r\n          statusID={statusID ? reblog.id : null}\r\n          instance={instance}\r\n          size={size}\r\n          contentTextWeight={contentTextWeight}\r\n          readOnly={readOnly}\r\n          enableCommentHint\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isSizeLarge = size === 'l';\r\n\r\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\r\n  const targetLanguage = getTranslateTargetLanguage(true);\r\n  const contentTranslationHideLanguages =\r\n    snapStates.settings.contentTranslationHideLanguages || [];\r\n  const { contentTranslation, contentTranslationAutoInline } =\r\n    snapStates.settings;\r\n  if (!contentTranslation) enableTranslate = false;\r\n  const inlineTranslate = useMemo(() => {\r\n    if (\r\n      !contentTranslation ||\r\n      !contentTranslationAutoInline ||\r\n      readOnly ||\r\n      (withinContext && !isSizeLarge) ||\r\n      previewMode ||\r\n      spoilerText ||\r\n      sensitive ||\r\n      poll ||\r\n      card ||\r\n      mediaAttachments?.length\r\n    ) {\r\n      return false;\r\n    }\r\n    const contentLength = htmlContentLength(content);\r\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\r\n  }, [\r\n    contentTranslation,\r\n    contentTranslationAutoInline,\r\n    readOnly,\r\n    withinContext,\r\n    isSizeLarge,\r\n    previewMode,\r\n    spoilerText,\r\n    sensitive,\r\n    poll,\r\n    card,\r\n    mediaAttachments,\r\n    content,\r\n  ]);\r\n\r\n  const [showEdited, setShowEdited] = useState(false);\r\n  const [showReactions, setShowReactions] = useState(false);\r\n\r\n  const spoilerContentRef = useTruncated();\r\n  const contentRef = useTruncated();\r\n  const mediaContainerRef = useTruncated();\r\n  const readMoreText = 'Read more →';\r\n\r\n  const statusRef = useRef(null);\r\n\r\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\r\n\r\n  const textWeight = useCallback(\r\n    () =>\r\n      Math.max(\r\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\r\n          1,\r\n        1,\r\n      ),\r\n    [spoilerText, content],\r\n  );\r\n\r\n  const createdDateText = niceDateTime(createdAtDate);\r\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\r\n\r\n  // Can boost if:\r\n  // - authenticated AND\r\n  // - visibility != direct OR\r\n  // - visibility = private AND isSelf\r\n  let canBoost =\r\n    authenticated && visibility !== 'direct' && visibility !== 'private';\r\n  if (visibility === 'private' && isSelf) {\r\n    canBoost = true;\r\n  }\r\n\r\n  const replyStatus = (e) => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    // syntheticEvent comes from MenuItem\r\n    if (e?.shiftKey || e?.syntheticEvent?.shiftKey) {\r\n      const newWin = openCompose({\r\n        replyToStatus: status,\r\n      });\r\n      if (newWin) return;\r\n    }\r\n    states.showCompose = {\r\n      replyToStatus: status,\r\n    };\r\n  };\r\n\r\n  // Check if media has no descriptions\r\n  const mediaNoDesc = useMemo(() => {\r\n    return mediaAttachments.some(\r\n      (attachment) => !attachment.description?.trim?.(),\r\n    );\r\n  }, [mediaAttachments]);\r\n  const boostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      if (!reblogged) {\r\n        let confirmText = 'Boost this post?';\r\n        if (mediaNoDesc) {\r\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\r\n        }\r\n        const yes = confirm(confirmText);\r\n        if (!yes) {\r\n          return false;\r\n        }\r\n      }\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n  const confirmBoostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const favouriteStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        favourited: !favourited,\r\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\r\n      };\r\n      if (favourited) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const bookmarkStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        bookmarked: !bookmarked,\r\n      };\r\n      if (bookmarked) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const differentLanguage =\r\n    !!language &&\r\n    language !== targetLanguage &&\r\n    !localeMatch([language], [targetLanguage]) &&\r\n    !contentTranslationHideLanguages.find(\r\n      (l) => language === l || localeMatch([language], [l]),\r\n    );\r\n\r\n  const menuInstanceRef = useRef();\r\n  const StatusMenuItems = (\r\n    <>\r\n      {!isSizeLarge && (\r\n        <>\r\n          <MenuHeader>\r\n            <span class=\"ib\">\r\n              <Icon icon={visibilityIconsMap[visibility]} size=\"s\" />{' '}\r\n              <span>{visibilityText[visibility]}</span>\r\n            </span>{' '}\r\n            <span class=\"ib\">\r\n              {repliesCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"comment2\" alt=\"Replies\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(repliesCount)}</span>\r\n                </span>\r\n              )}{' '}\r\n              {reblogsCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"rocket\" alt=\"Boosts\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(reblogsCount)}</span>\r\n                </span>\r\n              )}{' '}\r\n              {favouritesCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"heart\" alt=\"Likes\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(favouritesCount)}</span>\r\n                </span>\r\n              )}\r\n            </span>\r\n            <br />\r\n            {createdDateText}\r\n          </MenuHeader>\r\n          <MenuLink\r\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n            onClick={(e) => {\r\n              onStatusLinkClick(e, status);\r\n            }}\r\n          >\r\n            <Icon icon=\"arrow-right\" />\r\n            <span>View post by @{username || acct}</span>\r\n          </MenuLink>\r\n        </>\r\n      )}\r\n      {!!editedAt && (\r\n        <MenuItem\r\n          onClick={() => {\r\n            setShowEdited(id);\r\n          }}\r\n        >\r\n          <Icon icon=\"history\" />\r\n          <span>\r\n            Show Edit History\r\n            <br />\r\n            <small class=\"more-insignificant\">Edited: {editedDateText}</small>\r\n          </span>\r\n        </MenuItem>\r\n      )}\r\n      {(!isSizeLarge || !!editedAt) && <MenuDivider />}\r\n      {isSizeLarge && (\r\n        <MenuItem onClick={() => setShowReactions(true)}>\r\n          <Icon icon=\"react\" />\r\n          <span>\r\n            Boosted/Liked by<span class=\"more-insignificant\">…</span>\r\n          </span>\r\n        </MenuItem>\r\n      )}\r\n      {!isSizeLarge && sameInstance && (\r\n        <>\r\n          <div class=\"menu-horizontal\">\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"rocket\" />\r\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                </>\r\n              }\r\n              menuFooter={\r\n                mediaNoDesc &&\r\n                !reblogged && (\r\n                  <div class=\"footer\">\r\n                    <Icon icon=\"alert\" />\r\n                    Some media have no descriptions.\r\n                  </div>\r\n                )\r\n              }\r\n              disabled={!canBoost}\r\n              onClick={async () => {\r\n                try {\r\n                  const done = await confirmBoostStatus();\r\n                  if (!isSizeLarge && done) {\r\n                    showToast(\r\n                      reblogged\r\n                        ? `Unboosted @${username || acct}'s post`\r\n                        : `Boosted @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"rocket\"\r\n                style={{\r\n                  color: reblogged && 'var(--reblog-color)',\r\n                }}\r\n              />\r\n              <span>{reblogged ? 'Unboost' : 'Boost…'}</span>\r\n            </MenuConfirm>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  favouriteStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(\r\n                      favourited\r\n                        ? `Unliked @${username || acct}'s post`\r\n                        : `Liked @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"heart\"\r\n                style={{\r\n                  color: favourited && 'var(--favourite-color)',\r\n                }}\r\n              />\r\n              <span>{favourited ? 'Unlike' : 'Like'}</span>\r\n            </MenuItem>\r\n          </div>\r\n          <div class=\"menu-horizontal\">\r\n            <MenuItem onClick={replyStatus}>\r\n              <Icon icon=\"reply\" />\r\n              <span>Reply</span>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  bookmarkStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(\r\n                      bookmarked\r\n                        ? `Unbookmarked @${username || acct}'s post`\r\n                        : `Bookmarked @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"bookmark\"\r\n                style={{\r\n                  color: bookmarked && 'var(--link-color)',\r\n                }}\r\n              />\r\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\r\n            </MenuItem>\r\n          </div>\r\n        </>\r\n      )}\r\n      {enableTranslate ? (\r\n        <MenuItem\r\n          disabled={forceTranslate}\r\n          onClick={() => {\r\n            setForceTranslate(true);\r\n          }}\r\n        >\r\n          <Icon icon=\"translate\" />\r\n          <span>Translate</span>\r\n        </MenuItem>\r\n      ) : (\r\n        (!language || differentLanguage) && (\r\n          <MenuLink\r\n            to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\r\n          >\r\n            <Icon icon=\"translate\" />\r\n            <span>Translate</span>\r\n          </MenuLink>\r\n        )\r\n      )}\r\n      {((!isSizeLarge && sameInstance) || enableTranslate) && <MenuDivider />}\r\n      <MenuItem href={url} target=\"_blank\">\r\n        <Icon icon=\"external\" />\r\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\r\n      </MenuItem>\r\n      <div class=\"menu-horizontal\">\r\n        <MenuItem\r\n          onClick={() => {\r\n            // Copy url to clipboard\r\n            try {\r\n              navigator.clipboard.writeText(url);\r\n              showToast('Link copied');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast('Unable to copy link');\r\n            }\r\n          }}\r\n        >\r\n          <Icon icon=\"link\" />\r\n          <span>Copy</span>\r\n        </MenuItem>\r\n        {navigator?.share &&\r\n          navigator?.canShare?.({\r\n            url,\r\n          }) && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  navigator.share({\r\n                    url,\r\n                  });\r\n                } catch (e) {\r\n                  console.error(e);\r\n                  alert(\"Sharing doesn't seem to work.\");\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon=\"share\" />\r\n              <span>Share…</span>\r\n            </MenuItem>\r\n          )}\r\n      </div>\r\n      {(isSelf || mentionSelf) && <MenuDivider />}\r\n      {(isSelf || mentionSelf) && (\r\n        <MenuItem\r\n          onClick={async () => {\r\n            try {\r\n              const newStatus = await masto.v1.statuses\r\n                .$select(id)\r\n                [muted ? 'unmute' : 'mute']();\r\n              saveStatus(newStatus, instance);\r\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast(\r\n                muted\r\n                  ? 'Unable to unmute conversation'\r\n                  : 'Unable to mute conversation',\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {muted ? (\r\n            <>\r\n              <Icon icon=\"unmute\" />\r\n              <span>Unmute conversation</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon icon=\"mute\" />\r\n              <span>Mute conversation</span>\r\n            </>\r\n          )}\r\n        </MenuItem>\r\n      )}\r\n      {isSelf && (\r\n        <div class=\"menu-horizontal\">\r\n          <MenuItem\r\n            onClick={() => {\r\n              states.showCompose = {\r\n                editStatus: status,\r\n              };\r\n            }}\r\n          >\r\n            <Icon icon=\"pencil\" />\r\n            <span>Edit</span>\r\n          </MenuItem>\r\n          {isSizeLarge && (\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"trash\" />\r\n                  <span>Delete this post?</span>\r\n                </>\r\n              }\r\n              menuItemClassName=\"danger\"\r\n              onClick={() => {\r\n                // const yes = confirm('Delete this post?');\r\n                // if (yes) {\r\n                (async () => {\r\n                  try {\r\n                    await masto.v1.statuses.$select(id).remove();\r\n                    const cachedStatus = getStatus(id, instance);\r\n                    cachedStatus._deleted = true;\r\n                    showToast('Deleted');\r\n                  } catch (e) {\r\n                    console.error(e);\r\n                    showToast('Unable to delete');\r\n                  }\r\n                })();\r\n                // }\r\n              }}\r\n            >\r\n              <Icon icon=\"trash\" />\r\n              <span>Delete…</span>\r\n            </MenuConfirm>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const contextMenuRef = useRef();\r\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\r\n  const [contextMenuProps, setContextMenuProps] = useState({});\r\n\r\n  const showContextMenu = !isSizeLarge && !previewMode && !_deleted && !quoted;\r\n\r\n  // Only iOS/iPadOS browsers don't support contextmenu\r\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\r\n  const bindLongPressContext = useLongPress(\r\n    isIOS && showContextMenu\r\n      ? (e) => {\r\n          if (e.pointerType === 'mouse') return;\r\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\r\n\r\n          const { clientX, clientY } = e.touches?.[0] || e;\r\n          // link detection copied from onContextMenu because here it works\r\n          const link = e.target.closest('a');\r\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n          e.preventDefault();\r\n          setContextMenuProps({\r\n            anchorPoint: {\r\n              x: clientX,\r\n              y: clientY,\r\n            },\r\n            direction: 'right',\r\n          });\r\n          setIsContextMenuOpen(true);\r\n        }\r\n      : null,\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const hotkeysEnabled = !readOnly && !previewMode;\r\n  const rRef = useHotkeys('r, shift+r', replyStatus, {\r\n    enabled: hotkeysEnabled,\r\n  });\r\n  const fRef = useHotkeys(\r\n    'f, l',\r\n    () => {\r\n      try {\r\n        favouriteStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(\r\n            favourited\r\n              ? `Unliked @${username || acct}'s post`\r\n              : `Liked @${username || acct}'s post`,\r\n          );\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const dRef = useHotkeys(\r\n    'd',\r\n    () => {\r\n      try {\r\n        bookmarkStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(\r\n            bookmarked\r\n              ? `Unbookmarked @${username || acct}'s post`\r\n              : `Bookmarked @${username || acct}'s post`,\r\n          );\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const bRef = useHotkeys(\r\n    'shift+b',\r\n    () => {\r\n      (async () => {\r\n        try {\r\n          const done = await confirmBoostStatus();\r\n          if (!isSizeLarge && done) {\r\n            showToast(\r\n              reblogged\r\n                ? `Unboosted @${username || acct}'s post`\r\n                : `Boosted @${username || acct}'s post`,\r\n            );\r\n          }\r\n        } catch (e) {}\r\n      })();\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled && canBoost,\r\n    },\r\n  );\r\n\r\n  const displayedMediaAttachments = mediaAttachments.slice(\r\n    0,\r\n    isSizeLarge ? undefined : 4,\r\n  );\r\n  const showMultipleMediaCaptions =\r\n    mediaAttachments.length > 1 &&\r\n    displayedMediaAttachments.some(\r\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\r\n    );\r\n  const captionChildren = useMemo(() => {\r\n    if (!showMultipleMediaCaptions) return null;\r\n    const attachments = [];\r\n    displayedMediaAttachments.forEach((media, i) => {\r\n      if (!media.description) return;\r\n      const index = attachments.findIndex(\r\n        (attachment) => attachment.media.description === media.description,\r\n      );\r\n      if (index === -1) {\r\n        attachments.push({\r\n          media,\r\n          indices: [i],\r\n        });\r\n      } else {\r\n        attachments[index].indices.push(i);\r\n      }\r\n    });\r\n    return attachments.map(({ media, indices }) => (\r\n      <div\r\n        key={media.id}\r\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          states.showMediaAlt = {\r\n            alt: media.description,\r\n            lang: language,\r\n          };\r\n        }}\r\n        title={media.description}\r\n      >\r\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\r\n      </div>\r\n    ));\r\n\r\n    // return displayedMediaAttachments.map(\r\n    //   (media, i) =>\r\n    //     !!media.description && (\r\n    //       <div\r\n    //         key={media.id}\r\n    //         data-caption-index={i + 1}\r\n    //         onClick={(e) => {\r\n    //           e.preventDefault();\r\n    //           e.stopPropagation();\r\n    //           states.showMediaAlt = {\r\n    //             alt: media.description,\r\n    //             lang: language,\r\n    //           };\r\n    //         }}\r\n    //         title={media.description}\r\n    //       >\r\n    //         <sup>{i + 1}</sup> {media.description}\r\n    //       </div>\r\n    //     ),\r\n    // );\r\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\r\n\r\n  const isThread = useMemo(() => {\r\n    return (\r\n      (!!inReplyToId && inReplyToAccountId === status.account?.id) ||\r\n      !!snapStates.statusThreadNumber[sKey]\r\n    );\r\n  }, [\r\n    inReplyToId,\r\n    inReplyToAccountId,\r\n    status.account?.id,\r\n    snapStates.statusThreadNumber[sKey],\r\n  ]);\r\n\r\n  const showCommentHint = useMemo(() => {\r\n    return (\r\n      enableCommentHint &&\r\n      !isThread &&\r\n      !withinContext &&\r\n      !inReplyToId &&\r\n      visibility === 'public' &&\r\n      repliesCount > 0\r\n    );\r\n  }, [\r\n    enableCommentHint,\r\n    isThread,\r\n    withinContext,\r\n    inReplyToId,\r\n    repliesCount,\r\n    visibility,\r\n  ]);\r\n\r\n  return (\r\n    <article\r\n      data-state-post-id={sKey}\r\n      ref={(node) => {\r\n        statusRef.current = node;\r\n        // Use parent node if it's in focus\r\n        // Use case: <a><status /></a>\r\n        // When navigating (j/k), the <a> is focused instead of <status />\r\n        // Hotkey binding doesn't bubble up thus this hack\r\n        const nodeRef =\r\n          node?.closest?.(\r\n            '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\r\n          ) || node;\r\n        rRef.current = nodeRef;\r\n        fRef.current = nodeRef;\r\n        dRef.current = nodeRef;\r\n        bRef.current = nodeRef;\r\n      }}\r\n      tabindex=\"-1\"\r\n      class={`status ${\r\n        !withinContext && inReplyToId && inReplyToAccount\r\n          ? 'status-reply-to'\r\n          : ''\r\n      } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\r\n        {\r\n          s: 'small',\r\n          m: 'medium',\r\n          l: 'large',\r\n        }[size]\r\n      } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''}`}\r\n      onMouseEnter={debugHover}\r\n      onContextMenu={(e) => {\r\n        // FIXME: this code isn't getting called on Chrome at all?\r\n        if (!showContextMenu) return;\r\n        if (e.metaKey) return;\r\n        // console.log('context menu', e);\r\n        const link = e.target.closest('a');\r\n        if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n        e.preventDefault();\r\n        setContextMenuProps({\r\n          anchorPoint: {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n          },\r\n          direction: 'right',\r\n        });\r\n        setIsContextMenuOpen(true);\r\n      }}\r\n      {...(showContextMenu ? bindLongPressContext() : {})}\r\n    >\r\n      {showContextMenu && (\r\n        <ControlledMenu\r\n          ref={contextMenuRef}\r\n          state={isContextMenuOpen ? 'open' : undefined}\r\n          {...contextMenuProps}\r\n          onClose={(e) => {\r\n            setIsContextMenuOpen(false);\r\n            // statusRef.current?.focus?.();\r\n            if (e?.reason === 'click') {\r\n              statusRef.current?.closest('[tabindex]')?.focus?.();\r\n            }\r\n          }}\r\n          portal={{\r\n            target: document.body,\r\n          }}\r\n          containerProps={{\r\n            style: {\r\n              // Higher than the backdrop\r\n              zIndex: 1001,\r\n            },\r\n            onClick: () => {\r\n              contextMenuRef.current?.closeMenu?.();\r\n            },\r\n          }}\r\n          overflow=\"auto\"\r\n          boundingBoxPadding={safeBoundingBoxPadding()}\r\n          unmountOnClose\r\n        >\r\n          {StatusMenuItems}\r\n        </ControlledMenu>\r\n      )}\r\n      {size !== 'l' && (\r\n        <div class=\"status-badge\">\r\n          {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\r\n          {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\r\n          {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\r\n          {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\r\n        </div>\r\n      )}\r\n      {size !== 's' && (\r\n        <a\r\n          href={accountURL}\r\n          tabindex=\"-1\"\r\n          // target=\"_blank\"\r\n          title={`@${acct}`}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            states.showAccount = {\r\n              account: status.account,\r\n              instance,\r\n            };\r\n          }}\r\n        >\r\n          <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\r\n        </a>\r\n      )}\r\n      <div class=\"container\">\r\n        <div class=\"meta\">\r\n          <span class=\"meta-name\">\r\n            <NameText\r\n              account={status.account}\r\n              instance={instance}\r\n              showAvatar={size === 's'}\r\n              showAcct={isSizeLarge}\r\n            />\r\n          </span>\r\n          {/* {inReplyToAccount && !withinContext && size !== 's' && (\r\n              <>\r\n                {' '}\r\n                <span class=\"ib\">\r\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\r\n                  <NameText account={inReplyToAccount} instance={instance} short />\r\n                </span>\r\n              </>\r\n            )} */}\r\n          {/* </span> */}{' '}\r\n          {size !== 'l' &&\r\n            (_deleted ? (\r\n              <span class=\"status-deleted-tag\">Deleted</span>\r\n            ) : url && !previewMode && !quoted ? (\r\n              <Link\r\n                to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n                onClick={(e) => {\r\n                  if (\r\n                    e.metaKey ||\r\n                    e.ctrlKey ||\r\n                    e.shiftKey ||\r\n                    e.altKey ||\r\n                    e.which === 2\r\n                  ) {\r\n                    return;\r\n                  }\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  onStatusLinkClick?.(e, status);\r\n                  setContextMenuProps({\r\n                    anchorRef: {\r\n                      current: e.currentTarget,\r\n                    },\r\n                    align: 'end',\r\n                    direction: 'bottom',\r\n                    gap: 4,\r\n                  });\r\n                  setIsContextMenuOpen(true);\r\n                }}\r\n                class={`time ${\r\n                  isContextMenuOpen && contextMenuProps?.anchorRef\r\n                    ? 'is-open'\r\n                    : ''\r\n                }`}\r\n              >\r\n                {showCommentHint ? (\r\n                  <Icon\r\n                    icon=\"comment2\"\r\n                    size=\"s\"\r\n                    alt={`${repliesCount} ${\r\n                      repliesCount === 1 ? 'reply' : 'replies'\r\n                    }`}\r\n                  />\r\n                ) : (\r\n                  <Icon\r\n                    icon={visibilityIconsMap[visibility]}\r\n                    alt={visibilityText[visibility]}\r\n                    size=\"s\"\r\n                  />\r\n                )}{' '}\r\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              </Link>\r\n            ) : (\r\n              // <Menu\r\n              //   instanceRef={menuInstanceRef}\r\n              //   portal={{\r\n              //     target: document.body,\r\n              //   }}\r\n              //   containerProps={{\r\n              //     style: {\r\n              //       // Higher than the backdrop\r\n              //       zIndex: 1001,\r\n              //     },\r\n              //     onClick: (e) => {\r\n              //       if (e.target === e.currentTarget)\r\n              //         menuInstanceRef.current?.closeMenu?.();\r\n              //     },\r\n              //   }}\r\n              //   align=\"end\"\r\n              //   gap={4}\r\n              //   overflow=\"auto\"\r\n              //   viewScroll=\"close\"\r\n              //   boundingBoxPadding=\"8 8 8 8\"\r\n              //   unmountOnClose\r\n              //   menuButton={({ open }) => (\r\n              //     <Link\r\n              //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n              //       onClick={(e) => {\r\n              //         e.preventDefault();\r\n              //         e.stopPropagation();\r\n              //         onStatusLinkClick?.(e, status);\r\n              //       }}\r\n              //       class={`time ${open ? 'is-open' : ''}`}\r\n              //     >\r\n              //       <Icon\r\n              //         icon={visibilityIconsMap[visibility]}\r\n              //         alt={visibilityText[visibility]}\r\n              //         size=\"s\"\r\n              //       />{' '}\r\n              //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              //     </Link>\r\n              //   )}\r\n              // >\r\n              //   {StatusMenuItems}\r\n              // </Menu>\r\n              <span class=\"time\">\r\n                <Icon\r\n                  icon={visibilityIconsMap[visibility]}\r\n                  alt={visibilityText[visibility]}\r\n                  size=\"s\"\r\n                />{' '}\r\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              </span>\r\n            ))}\r\n        </div>\r\n        {visibility === 'direct' && (\r\n          <>\r\n            <div class=\"status-direct-badge\">Private mention</div>{' '}\r\n          </>\r\n        )}\r\n        {!withinContext && (\r\n          <>\r\n            {isThread ? (\r\n              <div class=\"status-thread-badge\">\r\n                <Icon icon=\"thread\" size=\"s\" />\r\n                Thread\r\n                {snapStates.statusThreadNumber[sKey]\r\n                  ? ` ${snapStates.statusThreadNumber[sKey]}/X`\r\n                  : ''}\r\n              </div>\r\n            ) : (\r\n              !!inReplyToId &&\r\n              !!inReplyToAccount &&\r\n              (!!spoilerText ||\r\n                !mentions.find((mention) => {\r\n                  return mention.id === inReplyToAccountId;\r\n                })) && (\r\n                <div class=\"status-reply-badge\">\r\n                  <Icon icon=\"reply\" />{' '}\r\n                  <NameText\r\n                    account={inReplyToAccount}\r\n                    instance={instance}\r\n                    short\r\n                  />\r\n                </div>\r\n              )\r\n            )}\r\n          </>\r\n        )}\r\n        <div\r\n          class={`content-container ${\r\n            spoilerText || sensitive ? 'has-spoiler' : ''\r\n          } ${showSpoiler ? 'show-spoiler' : ''}`}\r\n          data-content-text-weight={contentTextWeight ? textWeight() : null}\r\n          style={\r\n            (isSizeLarge || contentTextWeight) && {\r\n              '--content-text-weight': textWeight(),\r\n            }\r\n          }\r\n        >\r\n          {!!spoilerText && (\r\n            <>\r\n              <div\r\n                class=\"content spoiler-content\"\r\n                lang={language}\r\n                dir=\"auto\"\r\n                ref={spoilerContentRef}\r\n                data-read-more={readMoreText}\r\n              >\r\n                <p>\r\n                  <EmojiText text={spoilerText} emojis={emojis} />\r\n                </p>\r\n              </div>\r\n              <button\r\n                class={`light spoiler ${showSpoiler ? 'spoiling' : ''}`}\r\n                type=\"button\"\r\n                disabled={readingExpandSpoilers}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  if (showSpoiler) {\r\n                    delete states.spoilers[id];\r\n                  } else {\r\n                    states.spoilers[id] = true;\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\r\n                {readingExpandSpoilers\r\n                  ? 'Content warning'\r\n                  : showSpoiler\r\n                  ? 'Show less'\r\n                  : 'Show more'}\r\n              </button>\r\n            </>\r\n          )}\r\n          <div class=\"content\" ref={contentRef} data-read-more={readMoreText}>\r\n            <div\r\n              lang={language}\r\n              dir=\"auto\"\r\n              class=\"inner-content\"\r\n              onClick={handleContentLinks({\r\n                mentions,\r\n                instance,\r\n                previewMode,\r\n                statusURL: url,\r\n              })}\r\n              dangerouslySetInnerHTML={{\r\n                __html: enhanceContent(content, {\r\n                  emojis,\r\n                  postEnhanceDOM: (dom) => {\r\n                    // Remove target=\"_blank\" from links\r\n                    dom\r\n                      .querySelectorAll('a.u-url[target=\"_blank\"]')\r\n                      .forEach((a) => {\r\n                        if (!/http/i.test(a.innerText.trim())) {\r\n                          a.removeAttribute('target');\r\n                        }\r\n                      });\r\n                    if (previewMode) return;\r\n                    // Unfurl Mastodon links\r\n                    Array.from(\r\n                      dom.querySelectorAll(\r\n                        'a[href]:not(.u-url):not(.mention):not(.hashtag)',\r\n                      ),\r\n                    )\r\n                      .filter((a) => {\r\n                        const url = a.href;\r\n                        const isPostItself =\r\n                          url === status.url || url === status.uri;\r\n                        return !isPostItself && isMastodonLinkMaybe(url);\r\n                      })\r\n                      .forEach((a, i) => {\r\n                        unfurlMastodonLink(currentInstance, a.href).then(\r\n                          (result) => {\r\n                            if (!result) return;\r\n                            a.removeAttribute('target');\r\n                            if (!sKey) return;\r\n                            if (!Array.isArray(states.statusQuotes[sKey])) {\r\n                              states.statusQuotes[sKey] = [];\r\n                            }\r\n                            if (!states.statusQuotes[sKey][i]) {\r\n                              states.statusQuotes[sKey].splice(i, 0, result);\r\n                            }\r\n                          },\r\n                        );\r\n                      });\r\n                  },\r\n                }),\r\n              }}\r\n            />\r\n            <QuoteStatuses id={id} instance={instance} level={quoted} />\r\n          </div>\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              poll={poll}\r\n              readOnly={readOnly || !sameInstance || !authenticated}\r\n              onUpdate={(newPoll) => {\r\n                states.statuses[sKey].poll = newPoll;\r\n              }}\r\n              refresh={() => {\r\n                return masto.v1.polls\r\n                  .$select(poll.id)\r\n                  .fetch()\r\n                  .then((pollResponse) => {\r\n                    states.statuses[sKey].poll = pollResponse;\r\n                  })\r\n                  .catch((e) => {}); // Silently fail\r\n              }}\r\n              votePoll={(choices) => {\r\n                return masto.v1.polls\r\n                  .$select(poll.id)\r\n                  .votes.create({\r\n                    choices,\r\n                  })\r\n                  .then((pollResponse) => {\r\n                    states.statuses[sKey].poll = pollResponse;\r\n                  })\r\n                  .catch((e) => {}); // Silently fail\r\n              }}\r\n            />\r\n          )}\r\n          {(((enableTranslate || inlineTranslate) &&\r\n            !!content.trim() &&\r\n            !!getHTMLText(emojifyText(content, emojis)) &&\r\n            differentLanguage) ||\r\n            forceTranslate) && (\r\n            <TranslationBlock\r\n              forceTranslate={forceTranslate || inlineTranslate}\r\n              mini={!isSizeLarge && !withinContext}\r\n              sourceLanguage={language}\r\n              text={\r\n                (spoilerText ? `${spoilerText}\\n\\n` : '') +\r\n                getHTMLText(content) +\r\n                (poll?.options?.length\r\n                  ? `\\n\\nPoll:\\n${poll.options\r\n                      .map(\r\n                        (option) =>\r\n                          `- ${option.title}${\r\n                            option.votesCount >= 0\r\n                              ? ` (${option.votesCount})`\r\n                              : ''\r\n                          }`,\r\n                      )\r\n                      .join('\\n')}`\r\n                  : '')\r\n              }\r\n            />\r\n          )}\r\n          {!spoilerText && sensitive && !!mediaAttachments.length && (\r\n            <button\r\n              class={`plain spoiler ${showSpoiler ? 'spoiling' : ''}`}\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (showSpoiler) {\r\n                  delete states.spoilers[id];\r\n                } else {\r\n                  states.spoilers[id] = true;\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} /> Sensitive\r\n              content\r\n            </button>\r\n          )}\r\n          {!!mediaAttachments.length && (\r\n            <MultipleMediaFigure\r\n              lang={language}\r\n              enabled={showMultipleMediaCaptions}\r\n              captionChildren={captionChildren}\r\n            >\r\n              <div\r\n                ref={mediaContainerRef}\r\n                class={`media-container media-eq${mediaAttachments.length} ${\r\n                  mediaAttachments.length > 2 ? 'media-gt2' : ''\r\n                } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\r\n              >\r\n                {displayedMediaAttachments.map((media, i) => (\r\n                  <Media\r\n                    key={media.id}\r\n                    media={media}\r\n                    autoAnimate={isSizeLarge}\r\n                    showCaption={mediaAttachments.length === 1}\r\n                    lang={language}\r\n                    altIndex={\r\n                      showMultipleMediaCaptions && !!media.description && i + 1\r\n                    }\r\n                    to={`/${instance}/s/${id}?${\r\n                      withinContext ? 'media' : 'media-only'\r\n                    }=${i + 1}`}\r\n                    onClick={\r\n                      onMediaClick\r\n                        ? (e) => {\r\n                            onMediaClick(e, i, media, status);\r\n                          }\r\n                        : undefined\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n            </MultipleMediaFigure>\r\n          )}\r\n          {!!card &&\r\n            card?.url !== status.url &&\r\n            card?.url !== status.uri &&\r\n            /^https/i.test(card?.url) &&\r\n            !sensitive &&\r\n            !spoilerText &&\r\n            !poll &&\r\n            !mediaAttachments.length &&\r\n            !snapStates.statusQuotes[sKey] && (\r\n              <Card card={card} instance={currentInstance} />\r\n            )}\r\n        </div>\r\n        {isSizeLarge && (\r\n          <>\r\n            <div class=\"extra-meta\">\r\n              {_deleted ? (\r\n                <span class=\"status-deleted-tag\">Deleted</span>\r\n              ) : (\r\n                <>\r\n                  <Icon\r\n                    icon={visibilityIconsMap[visibility]}\r\n                    alt={visibilityText[visibility]}\r\n                  />{' '}\r\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <time\r\n                      class=\"created\"\r\n                      datetime={createdAtDate.toISOString()}\r\n                    >\r\n                      {createdDateText}\r\n                    </time>\r\n                  </a>\r\n                  {editedAt && (\r\n                    <>\r\n                      {' '}\r\n                      &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\r\n                      <time\r\n                        tabIndex=\"0\"\r\n                        class=\"edited\"\r\n                        datetime={editedAtDate.toISOString()}\r\n                        onClick={() => {\r\n                          setShowEdited(id);\r\n                        }}\r\n                      >\r\n                        {editedDateText}\r\n                      </time>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div class={`actions ${_deleted ? 'disabled' : ''}`}>\r\n              <div class=\"action has-count\">\r\n                <StatusButton\r\n                  title=\"Reply\"\r\n                  alt=\"Comments\"\r\n                  class=\"reply-button\"\r\n                  icon=\"comment\"\r\n                  count={repliesCount}\r\n                  onClick={replyStatus}\r\n                />\r\n              </div>\r\n              {/* <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={reblogged}\r\n                  title={['Boost', 'Unboost']}\r\n                  alt={['Boost', 'Boosted']}\r\n                  class=\"reblog-button\"\r\n                  icon=\"rocket\"\r\n                  count={reblogsCount}\r\n                  onClick={boostStatus}\r\n                  disabled={!canBoost}\r\n                />\r\n              </div> */}\r\n              <MenuConfirm\r\n                disabled={!canBoost}\r\n                onClick={confirmBoostStatus}\r\n                confirmLabel={\r\n                  <>\r\n                    <Icon icon=\"rocket\" />\r\n                    <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                  </>\r\n                }\r\n                menuFooter={\r\n                  mediaNoDesc &&\r\n                  !reblogged && (\r\n                    <div class=\"footer\">\r\n                      <Icon icon=\"alert\" />\r\n                      Some media have no descriptions.\r\n                    </div>\r\n                  )\r\n                }\r\n              >\r\n                <div class=\"action has-count\">\r\n                  <StatusButton\r\n                    checked={reblogged}\r\n                    title={['Boost', 'Unboost']}\r\n                    alt={['Boost', 'Boosted']}\r\n                    class=\"reblog-button\"\r\n                    icon=\"rocket\"\r\n                    count={reblogsCount}\r\n                    // onClick={boostStatus}\r\n                    disabled={!canBoost}\r\n                  />\r\n                </div>\r\n              </MenuConfirm>\r\n              <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={favourited}\r\n                  title={['Like', 'Unlike']}\r\n                  alt={['Like', 'Liked']}\r\n                  class=\"favourite-button\"\r\n                  icon=\"heart\"\r\n                  count={favouritesCount}\r\n                  onClick={favouriteStatus}\r\n                />\r\n              </div>\r\n              <div class=\"action\">\r\n                <StatusButton\r\n                  checked={bookmarked}\r\n                  title={['Bookmark', 'Unbookmark']}\r\n                  alt={['Bookmark', 'Bookmarked']}\r\n                  class=\"bookmark-button\"\r\n                  icon=\"bookmark\"\r\n                  onClick={bookmarkStatus}\r\n                />\r\n              </div>\r\n              <Menu2\r\n                portal={{\r\n                  target:\r\n                    document.querySelector('.status-deck') || document.body,\r\n                }}\r\n                align=\"end\"\r\n                gap={4}\r\n                overflow=\"auto\"\r\n                viewScroll=\"close\"\r\n                menuButton={\r\n                  <div class=\"action\">\r\n                    <button\r\n                      type=\"button\"\r\n                      title=\"More\"\r\n                      class=\"plain more-button\"\r\n                    >\r\n                      <Icon icon=\"more\" size=\"l\" alt=\"More\" />\r\n                    </button>\r\n                  </div>\r\n                }\r\n              >\r\n                {StatusMenuItems}\r\n              </Menu2>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {!!showEdited && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEdited(false);\r\n              // statusRef.current?.focus();\r\n            }\r\n          }}\r\n        >\r\n          <EditedAtModal\r\n            statusID={showEdited}\r\n            instance={instance}\r\n            fetchStatusHistory={() => {\r\n              return masto.v1.statuses.$select(showEdited).history.list();\r\n            }}\r\n            onClose={() => {\r\n              setShowEdited(false);\r\n              statusRef.current?.focus();\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {showReactions && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowReactions(false);\r\n            }\r\n          }}\r\n        >\r\n          <ReactionsModal\r\n            statusID={id}\r\n            instance={instance}\r\n            onClose={() => setShowReactions(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nfunction MultipleMediaFigure(props) {\r\n  const { enabled, children, lang, captionChildren } = props;\r\n  if (!enabled || !captionChildren) return children;\r\n  return (\r\n    <figure class=\"media-figure-multiple\">\r\n      {children}\r\n      <figcaption lang={lang} dir=\"auto\">\r\n        {captionChildren}\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nfunction Card({ card, instance }) {\r\n  const snapStates = useSnapshot(states);\r\n  const {\r\n    blurhash,\r\n    title,\r\n    description,\r\n    html,\r\n    providerName,\r\n    providerUrl,\r\n    authorName,\r\n    authorUrl,\r\n    width,\r\n    height,\r\n    image,\r\n    imageDescription,\r\n    url,\r\n    type,\r\n    embedUrl,\r\n    language,\r\n    publishedAt,\r\n  } = card;\r\n\r\n  /* type\r\n  link = Link OEmbed\r\n  photo = Photo OEmbed\r\n  video = Video OEmbed\r\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\r\n  */\r\n\r\n  const hasText = title || providerName || authorName;\r\n  const isLandscape = width / height >= 1.2;\r\n  const size = isLandscape ? 'large' : '';\r\n\r\n  const [cardStatusURL, setCardStatusURL] = useState(null);\r\n  // const [cardStatusID, setCardStatusID] = useState(null);\r\n  useEffect(() => {\r\n    if (hasText && image && isMastodonLinkMaybe(url)) {\r\n      unfurlMastodonLink(instance, url).then((result) => {\r\n        if (!result) return;\r\n        const { id, url } = result;\r\n        setCardStatusURL('#' + url);\r\n\r\n        // NOTE: This is for quote post\r\n        // (async () => {\r\n        //   const { masto } = api({ instance });\r\n        //   const status = await masto.v1.statuses.$select(id).fetch();\r\n        //   saveStatus(status, instance);\r\n        //   setCardStatusID(id);\r\n        // })();\r\n      });\r\n    }\r\n  }, [hasText, image]);\r\n\r\n  // if (cardStatusID) {\r\n  //   return (\r\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\r\n  //   );\r\n  // }\r\n\r\n  if (snapStates.unfurledLinks[url]) return null;\r\n\r\n  if (hasText && (image || (type === 'photo' && blurhash))) {\r\n    const domain = new URL(url).hostname\r\n      .replace(/^www\\./, '')\r\n      .replace(/\\/$/, '');\r\n    let blurhashImage;\r\n    if (!image) {\r\n      const w = 44;\r\n      const h = 44;\r\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = w;\r\n      canvas.height = h;\r\n      const ctx = canvas.getContext('2d');\r\n      const imageData = ctx.createImageData(w, h);\r\n      imageData.data.set(blurhashPixels);\r\n      ctx.putImageData(imageData, 0, 0);\r\n      blurhashImage = canvas.toDataURL();\r\n    }\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link ${blurhashImage ? '' : size}`}\r\n        lang={language}\r\n        dir=\"auto\"\r\n      >\r\n        <div class=\"card-image\">\r\n          <img\r\n            src={image || blurhashImage}\r\n            width={width}\r\n            height={height}\r\n            loading=\"lazy\"\r\n            alt={imageDescription || ''}\r\n            onError={(e) => {\r\n              try {\r\n                e.target.style.display = 'none';\r\n              } catch (e) {}\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\" dir=\"auto\">\r\n            {domain}\r\n          </p>\r\n          <p class=\"title\" dir=\"auto\">\r\n            {title}\r\n          </p>\r\n          <p class=\"meta\" dir=\"auto\">\r\n            {description ||\r\n              (!!publishedAt && (\r\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\r\n              ))}\r\n          </p>\r\n        </div>\r\n      </a>\r\n    );\r\n  } else if (type === 'photo') {\r\n    return (\r\n      <a\r\n        href={url}\r\n        target=\"_blank\"\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class=\"card photo\"\r\n      >\r\n        <img\r\n          src={embedUrl}\r\n          width={width}\r\n          height={height}\r\n          alt={title || description}\r\n          loading=\"lazy\"\r\n          style={{\r\n            height: 'auto',\r\n            aspectRatio: `${width}/${height}`,\r\n          }}\r\n        />\r\n      </a>\r\n    );\r\n  } else if (type === 'video') {\r\n    if (/youtube/i.test(providerName)) {\r\n      // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\r\n      const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\r\n      if (videoID) {\r\n        return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        class=\"card video\"\r\n        style={{\r\n          aspectRatio: `${width}/${height}`,\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    );\r\n  } else if (hasText && !image) {\r\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link no-image`}\r\n        lang={language}\r\n      >\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\">\r\n            <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\r\n          </p>\r\n          <p class=\"title\">{title}</p>\r\n          <p class=\"meta\">{description || providerName || authorName}</p>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nfunction EditedAtModal({\r\n  statusID,\r\n  instance,\r\n  fetchStatusHistory = () => {},\r\n  onClose,\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const [editHistory, setEditHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const editHistory = await fetchStatusHistory();\r\n        console.log(editHistory);\r\n        setEditHistory(editHistory);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"edit-history\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Edit History</h2>\r\n        {uiState === 'error' && <p>Failed to load history</p>}\r\n        {uiState === 'loading' && (\r\n          <p>\r\n            <Loader abrupt /> Loading&hellip;\r\n          </p>\r\n        )}\r\n      </header>\r\n      <main tabIndex=\"-1\">\r\n        {editHistory.length > 0 && (\r\n          <ol>\r\n            {editHistory.map((status) => {\r\n              const { createdAt } = status;\r\n              const createdAtDate = new Date(createdAt);\r\n              return (\r\n                <li key={createdAt} class=\"history-item\">\r\n                  <h3>\r\n                    <time>\r\n                      {niceDateTime(createdAtDate, {\r\n                        formatOpts: {\r\n                          weekday: 'short',\r\n                          second: 'numeric',\r\n                        },\r\n                      })}\r\n                    </time>\r\n                  </h3>\r\n                  <Status\r\n                    status={status}\r\n                    instance={instance}\r\n                    size=\"s\"\r\n                    withinContext\r\n                    readOnly\r\n                    previewMode\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REACTIONS_LIMIT = 80;\r\nfunction ReactionsModal({ statusID, instance, onClose }) {\r\n  const { masto } = api({ instance });\r\n  const [uiState, setUIState] = useState('default');\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const reblogIterator = useRef();\r\n  const favouriteIterator = useRef();\r\n\r\n  async function fetchAccounts(firstLoad) {\r\n    setShowMore(false);\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        if (firstLoad) {\r\n          reblogIterator.current = masto.v1.statuses\r\n            .$select(statusID)\r\n            .rebloggedBy.list({\r\n              limit: REACTIONS_LIMIT,\r\n            });\r\n          favouriteIterator.current = masto.v1.statuses\r\n            .$select(statusID)\r\n            .favouritedBy.list({\r\n              limit: REACTIONS_LIMIT,\r\n            });\r\n        }\r\n        const [{ value: reblogResults }, { value: favouriteResults }] =\r\n          await Promise.allSettled([\r\n            reblogIterator.current.next(),\r\n            favouriteIterator.current.next(),\r\n          ]);\r\n        if (reblogResults.value?.length || favouriteResults.value?.length) {\r\n          if (reblogResults.value?.length) {\r\n            for (const account of reblogResults.value) {\r\n              const theAccount = accounts.find((a) => a.id === account.id);\r\n              if (!theAccount) {\r\n                accounts.push({\r\n                  ...account,\r\n                  _types: ['reblog'],\r\n                });\r\n              } else {\r\n                theAccount._types.push('reblog');\r\n              }\r\n            }\r\n          }\r\n          if (favouriteResults.value?.length) {\r\n            for (const account of favouriteResults.value) {\r\n              const theAccount = accounts.find((a) => a.id === account.id);\r\n              if (!theAccount) {\r\n                accounts.push({\r\n                  ...account,\r\n                  _types: ['favourite'],\r\n                });\r\n              } else {\r\n                theAccount._types.push('favourite');\r\n              }\r\n            }\r\n          }\r\n          setAccounts(accounts);\r\n          setShowMore(!reblogResults.done || !favouriteResults.done);\r\n        } else {\r\n          setShowMore(false);\r\n        }\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAccounts(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"reactions-container\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Boosted/Liked by…</h2>\r\n      </header>\r\n      <main>\r\n        {accounts.length > 0 ? (\r\n          <>\r\n            <ul class=\"reactions-list\">\r\n              {accounts.map((account) => {\r\n                const { _types } = account;\r\n                return (\r\n                  <li key={account.id + _types}>\r\n                    <div class=\"reactions-block\">\r\n                      {_types.map((type) => (\r\n                        <Icon\r\n                          icon={\r\n                            {\r\n                              reblog: 'rocket',\r\n                              favourite: 'heart',\r\n                            }[type]\r\n                          }\r\n                          class={`${type}-icon`}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <AccountBlock account={account} instance={instance} />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            {uiState === 'default' ? (\r\n              showMore ? (\r\n                <InView\r\n                  onChange={(inView) => {\r\n                    if (inView) {\r\n                      fetchAccounts();\r\n                    }\r\n                  }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"plain block\"\r\n                    onClick={() => fetchAccounts()}\r\n                  >\r\n                    Show more&hellip;\r\n                  </button>\r\n                </InView>\r\n              ) : (\r\n                <p class=\"ui-state insignificant\">The end.</p>\r\n              )\r\n            ) : (\r\n              uiState === 'loading' && (\r\n                <p class=\"ui-state\">\r\n                  <Loader abrupt />\r\n                </p>\r\n              )\r\n            )}\r\n          </>\r\n        ) : uiState === 'loading' ? (\r\n          <p class=\"ui-state\">\r\n            <Loader abrupt />\r\n          </p>\r\n        ) : uiState === 'error' ? (\r\n          <p class=\"ui-state\">Unable to load accounts</p>\r\n        ) : (\r\n          <p class=\"ui-state insignificant\">No one yet.</p>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StatusButton({\r\n  checked,\r\n  count,\r\n  class: className,\r\n  title,\r\n  alt,\r\n  icon,\r\n  onClick,\r\n  ...props\r\n}) {\r\n  if (typeof title === 'string') {\r\n    title = [title, title];\r\n  }\r\n  if (typeof alt === 'string') {\r\n    alt = [alt, alt];\r\n  }\r\n\r\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\r\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\r\n\r\n  useEffect(() => {\r\n    if (checked) {\r\n      setButtonTitle(title[1] || '');\r\n      setIconAlt(alt[1] || '');\r\n    } else {\r\n      setButtonTitle(title[0] || '');\r\n      setIconAlt(alt[0] || '');\r\n    }\r\n  }, [checked, title, alt]);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      title={buttonTitle}\r\n      class={`plain ${className} ${checked ? 'checked' : ''}`}\r\n      onClick={(e) => {\r\n        if (!onClick) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onClick(e);\r\n      }}\r\n      {...props}\r\n    >\r\n      <Icon icon={icon} size=\"l\" alt={iconAlt} />\r\n      {!!count && (\r\n        <>\r\n          {' '}\r\n          <small title={count}>{shortenNumber(count)}</small>\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function formatDuration(time) {\r\n  if (!time) return;\r\n  let hours = Math.floor(time / 3600);\r\n  let minutes = Math.floor((time % 3600) / 60);\r\n  let seconds = Math.round(time % 60);\r\n\r\n  if (hours === 0) {\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  } else {\r\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\r\n      .toString()\r\n      .padStart(2, '0')}`;\r\n  }\r\n}\r\n\r\nconst denylistDomains = /(twitter|github)\\.com/i;\r\nconst failedUnfurls = {};\r\n\r\nfunction _unfurlMastodonLink(instance, url) {\r\n  const snapStates = snapshot(states);\r\n  if (denylistDomains.test(url)) {\r\n    return;\r\n  }\r\n  if (failedUnfurls[url]) {\r\n    return;\r\n  }\r\n  const instanceRegex = new RegExp(instance + '/');\r\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\r\n    return Promise.resolve(snapStates.unfurledLinks[url]);\r\n  }\r\n  console.debug('🦦 Unfurling URL', url);\r\n\r\n  let remoteInstanceFetch;\r\n  let theURL = url;\r\n\r\n  // https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n  if (/\\/\\/elk\\.[^\\/]+\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\r\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\r\n  }\r\n\r\n  // https://trunks.social/status/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n  if (/\\/\\/trunks\\.[^\\/]+\\/status\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\r\n    theURL = theURL.replace(/trunks\\.[^\\/]+\\/status\\//i, '');\r\n  }\r\n\r\n  // https://phanpy.social/#/domain.com/s/123 -> https://domain.com/statuses/123\r\n  if (/\\/#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(theURL)) {\r\n    const urlAfterHash = theURL.split('/#/')[1];\r\n    const finalURL = urlAfterHash.replace(/\\/s\\//i, '/@fakeUsername/');\r\n    theURL = `https://${finalURL}`;\r\n  }\r\n\r\n  const urlObj = new URL(theURL);\r\n  const domain = urlObj.hostname;\r\n  const path = urlObj.pathname;\r\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\r\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\r\n  const statusMatch = statusRegex.exec(path);\r\n  if (statusMatch) {\r\n    const id = statusMatch[3];\r\n    const { masto } = api({ instance: domain });\r\n    remoteInstanceFetch = masto.v1.statuses\r\n      .$select(id)\r\n      .fetch()\r\n      .then((status) => {\r\n        if (status?.id) {\r\n          return {\r\n            status,\r\n            instance: domain,\r\n          };\r\n        } else {\r\n          throw new Error('No results');\r\n        }\r\n      });\r\n  }\r\n\r\n  const { masto } = api({ instance });\r\n  const mastoSearchFetch = masto.v2.search\r\n    .fetch({\r\n      q: theURL,\r\n      type: 'statuses',\r\n      resolve: true,\r\n      limit: 1,\r\n    })\r\n    .then((results) => {\r\n      if (results.statuses.length > 0) {\r\n        const status = results.statuses[0];\r\n        return {\r\n          status,\r\n          instance,\r\n        };\r\n      } else {\r\n        throw new Error('No results');\r\n      }\r\n    });\r\n\r\n  function handleFulfill(result) {\r\n    const { status, instance } = result;\r\n    const { id } = status;\r\n    const selfURL = `/${instance}/s/${id}`;\r\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\r\n    const data = {\r\n      id,\r\n      instance,\r\n      url: selfURL,\r\n    };\r\n    states.unfurledLinks[url] = data;\r\n    saveStatus(status, instance, {\r\n      skipThreading: true,\r\n    });\r\n    return data;\r\n  }\r\n  function handleCatch(e) {\r\n    failedUnfurls[url] = true;\r\n  }\r\n\r\n  if (remoteInstanceFetch) {\r\n    return Promise.any([remoteInstanceFetch, mastoSearchFetch])\r\n      .then(handleFulfill)\r\n      .catch(handleCatch);\r\n  } else {\r\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\r\n  }\r\n}\r\n\r\nfunction nicePostURL(url) {\r\n  if (!url) return;\r\n  const urlObj = new URL(url);\r\n  const { host, pathname } = urlObj;\r\n  const path = pathname.replace(/\\/$/, '');\r\n  // split only first slash\r\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\r\n  return (\r\n    <>\r\n      {host}\r\n      {username ? (\r\n        <>\r\n          /{username}\r\n          <wbr />\r\n          <span class=\"more-insignificant\">/{restPath}</span>\r\n        </>\r\n      ) : (\r\n        <span class=\"more-insignificant\">{path}</span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst unfurlMastodonLink = throttle(_unfurlMastodonLink);\r\n\r\nfunction FilteredStatus({ status, filterInfo, instance, containerProps = {} }) {\r\n  const {\r\n    id: statusID,\r\n    account: { avatar, avatarStatic, bot, group },\r\n    createdAt,\r\n    visibility,\r\n    reblog,\r\n  } = status;\r\n  const isReblog = !!reblog;\r\n  const filterTitleStr = filterInfo?.titlesStr || '';\r\n  const createdAtDate = new Date(createdAt);\r\n  const statusPeekText = statusPeek(status.reblog || status);\r\n\r\n  const [showPeek, setShowPeek] = useState(false);\r\n  const bindLongPressPeek = useLongPress(\r\n    () => {\r\n      setShowPeek(true);\r\n    },\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const statusPeekRef = useTruncated();\r\n  const sKey =\r\n    statusKey(status.id, instance) +\r\n    ' ' +\r\n    (statusKey(reblog?.id, instance) || '');\r\n\r\n  const actualStatusID = reblog?.id || statusID;\r\n  const url = instance\r\n    ? `/${instance}/s/${actualStatusID}`\r\n    : `/s/${actualStatusID}`;\r\n\r\n  return (\r\n    <div\r\n      class={isReblog ? (group ? 'status-group' : 'status-reblog') : ''}\r\n      {...containerProps}\r\n      title={statusPeekText}\r\n      onContextMenu={(e) => {\r\n        e.preventDefault();\r\n        setShowPeek(true);\r\n      }}\r\n      {...bindLongPressPeek()}\r\n    >\r\n      <article data-state-post-id={sKey} class=\"status filtered\" tabindex=\"-1\">\r\n        <b\r\n          class=\"status-filtered-badge clickable badge-meta\"\r\n          title={filterTitleStr}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setShowPeek(true);\r\n          }}\r\n        >\r\n          <span>Filtered</span>\r\n          <span>{filterTitleStr}</span>\r\n        </b>{' '}\r\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\r\n        <span class=\"status-filtered-info\">\r\n          <span class=\"status-filtered-info-1\">\r\n            <NameText account={status.account} instance={instance} />{' '}\r\n            <Icon\r\n              icon={visibilityIconsMap[visibility]}\r\n              alt={visibilityText[visibility]}\r\n              size=\"s\"\r\n            />{' '}\r\n            {isReblog ? (\r\n              'boosted'\r\n            ) : (\r\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n            )}\r\n          </span>\r\n          <span class=\"status-filtered-info-2\">\r\n            {isReblog && (\r\n              <>\r\n                <Avatar\r\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\r\n                  squircle={bot}\r\n                />{' '}\r\n              </>\r\n            )}\r\n            {statusPeekText}\r\n          </span>\r\n        </span>\r\n      </article>\r\n      {!!showPeek && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowPeek(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"filtered-status-peek\" class=\"sheet\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => setShowPeek(false)}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <Link\r\n                ref={statusPeekRef}\r\n                class=\"status-link\"\r\n                to={url}\r\n                onClick={() => {\r\n                  setShowPeek(false);\r\n                }}\r\n                data-read-more=\"Read more →\"\r\n              >\r\n                <Status status={status} instance={instance} size=\"s\" readOnly />\r\n              </Link>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\r\n  if (!id || !instance) return;\r\n  const snapStates = useSnapshot(states);\r\n  const sKey = statusKey(id, instance);\r\n  const quotes = snapStates.statusQuotes[sKey];\r\n  const uniqueQuotes = quotes?.filter(\r\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\r\n  );\r\n\r\n  if (!uniqueQuotes?.length) return;\r\n  if (level > 2) return;\r\n\r\n  return uniqueQuotes.map((q) => {\r\n    return (\r\n      <Link\r\n        key={q.instance + q.id}\r\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\r\n        class=\"status-card-link\"\r\n        data-read-more=\"Read more →\"\r\n      >\r\n        <Status\r\n          statusID={q.id}\r\n          instance={q.instance}\r\n          size=\"s\"\r\n          quoted={level + 1}\r\n          enableCommentHint\r\n        />\r\n      </Link>\r\n    );\r\n  });\r\n});\r\n\r\nexport default memo(Status);\r\n","import './compose.css';\r\n\r\nimport '@github/text-expander-element';\r\nimport equal from 'fast-deep-equal';\r\nimport { forwardRef } from 'preact/compat';\r\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport stringLength from 'string-length';\r\nimport { uid } from 'uid/single';\r\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport supportedLanguages from '../data/status-supported-languages';\r\nimport urlRegex from '../data/url-regex';\r\nimport { api } from '../utils/api';\r\nimport db from '../utils/db';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport localeMatch from '../utils/locale-match';\r\nimport openCompose from '../utils/open-compose';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport states, { saveStatus } from '../utils/states';\r\nimport store from '../utils/store';\r\nimport {\r\n  getCurrentAccount,\r\n  getCurrentAccountNS,\r\n  getCurrentInstance,\r\n  getCurrentInstanceConfiguration,\r\n} from '../utils/store-utils';\r\nimport supports from '../utils/supports';\r\nimport useInterval from '../utils/useInterval';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport AccountBlock from './account-block';\r\n// import Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\nimport Modal from './modal';\r\nimport Status from './status';\r\n\r\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\r\n  const [code, common, native] = l;\r\n  acc[code] = {\r\n    common,\r\n    native,\r\n  };\r\n  return acc;\r\n}, {});\r\n\r\n/* NOTES:\r\n  - Max character limit includes BOTH status text and Content Warning text\r\n*/\r\n\r\nconst expiryOptions = {\r\n  '5 minutes': 5 * 60,\r\n  '30 minutes': 30 * 60,\r\n  '1 hour': 60 * 60,\r\n  '6 hours': 6 * 60 * 60,\r\n  '12 hours': 12 * 60 * 60,\r\n  '1 day': 24 * 60 * 60,\r\n  '3 days': 3 * 24 * 60 * 60,\r\n  '7 days': 7 * 24 * 60 * 60,\r\n};\r\nconst expirySeconds = Object.values(expiryOptions);\r\nconst oneDay = 24 * 60 * 60;\r\n\r\nconst expiresInFromExpiresAt = (expiresAt) => {\r\n  if (!expiresAt) return oneDay;\r\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\r\n  return expirySeconds.find((s) => s >= delta) || oneDay;\r\n};\r\n\r\nconst menu = document.createElement('ul');\r\nmenu.role = 'listbox';\r\nmenu.className = 'text-expander-menu';\r\n\r\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\r\nconst windowMargin = 16;\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      const { left, width } = entry.boundingClientRect;\r\n      const { innerWidth } = window;\r\n      if (left + width > innerWidth) {\r\n        menu.style.left = innerWidth - width - windowMargin + 'px';\r\n      }\r\n    }\r\n  });\r\n});\r\nobserver.observe(menu);\r\n\r\nconst DEFAULT_LANG = localeMatch(\r\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\r\n  supportedLanguages.map((l) => l[0]),\r\n  'en',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\r\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\r\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\r\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\r\nfunction countableText(inputText) {\r\n  return inputText\r\n    .replace(urlRegexObj, urlPlaceholder)\r\n    .replace(usernameRegex, '$1@$3');\r\n}\r\n\r\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\r\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\r\nconst MENTION_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\w.-]+[\\\\w]+)?)`,\r\n  'ig',\r\n);\r\n\r\n// AI-generated, all other regexes are too complicated\r\nconst HASHTAG_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(#[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?)(?![\\\\/\\\\w])`,\r\n  'ig',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\r\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\r\nconst SCAN_RE = new RegExp(\r\n  `([^A-Za-z0-9_:\\\\n]|^)(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\r\n  'g',\r\n);\r\n\r\nfunction highlightText(text, { maxCharacters = Infinity }) {\r\n  // Accept text string, return formatted HTML string\r\n  let html = text;\r\n  // Exceeded characters limit\r\n  const { composerCharacterCount } = states;\r\n  let leftoverHTML = '';\r\n  if (composerCharacterCount > maxCharacters) {\r\n    const leftoverCount = composerCharacterCount - maxCharacters;\r\n    // Highlight exceeded characters\r\n    leftoverHTML =\r\n      '<mark class=\"compose-highlight-exceeded\">' +\r\n      html.slice(-leftoverCount) +\r\n      '</mark>';\r\n    html = html.slice(0, -leftoverCount);\r\n  }\r\n\r\n  html = html\r\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\r\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\r\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\r\n    .replace(\r\n      SCAN_RE,\r\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\r\n    ); // Emoji shortcodes\r\n\r\n  return html + leftoverHTML;\r\n}\r\n\r\nfunction Compose({\r\n  onClose,\r\n  replyToStatus,\r\n  editStatus,\r\n  draftStatus,\r\n  standalone,\r\n  hasOpener,\r\n}) {\r\n  console.warn('RENDER COMPOSER');\r\n  const { masto, instance } = api();\r\n  const [uiState, setUIState] = useState('default');\r\n  const UID = useRef(draftStatus?.uid || uid());\r\n  console.log('Compose UID', UID.current);\r\n\r\n  const currentAccount = getCurrentAccount();\r\n  const currentAccountInfo = currentAccount.info;\r\n\r\n  const configuration = getCurrentInstanceConfiguration();\r\n  console.log('⚙️ Configuration', configuration);\r\n\r\n  const {\r\n    statuses: {\r\n      maxCharacters,\r\n      maxMediaAttachments,\r\n      charactersReservedPerUrl,\r\n    } = {},\r\n    mediaAttachments: {\r\n      supportedMimeTypes = [],\r\n      imageSizeLimit,\r\n      imageMatrixLimit,\r\n      videoSizeLimit,\r\n      videoMatrixLimit,\r\n      videoFrameRateLimit,\r\n    } = {},\r\n    polls: {\r\n      maxOptions,\r\n      maxCharactersPerOption,\r\n      maxExpiration,\r\n      minExpiration,\r\n    } = {},\r\n  } = configuration || {};\r\n\r\n  const textareaRef = useRef();\r\n  const spoilerTextRef = useRef();\r\n  const [visibility, setVisibility] = useState('public');\r\n  const [sensitive, setSensitive] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    store.session.get('currentLanguage') || DEFAULT_LANG,\r\n  );\r\n  const prevLanguage = useRef(language);\r\n  const [mediaAttachments, setMediaAttachments] = useState([]);\r\n  const [poll, setPoll] = useState(null);\r\n\r\n  const prefs = store.account.get('preferences') || {};\r\n\r\n  const oninputTextarea = () => {\r\n    if (!textareaRef.current) return;\r\n    textareaRef.current.dispatchEvent(new Event('input'));\r\n  };\r\n  const focusTextarea = () => {\r\n    setTimeout(() => {\r\n      console.debug('FOCUS textarea');\r\n      textareaRef.current?.focus();\r\n    }, 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (replyToStatus) {\r\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\r\n      if (spoilerText && spoilerTextRef.current) {\r\n        spoilerTextRef.current.value = spoilerText;\r\n      }\r\n      const mentions = new Set([\r\n        replyToStatus.account.acct,\r\n        ...replyToStatus.mentions.map((m) => m.acct),\r\n      ]);\r\n      const allMentions = [...mentions].filter(\r\n        (m) => m !== currentAccountInfo.acct,\r\n      );\r\n      if (allMentions.length > 0) {\r\n        textareaRef.current.value = `${allMentions\r\n          .map((m) => `@${m}`)\r\n          .join(' ')} `;\r\n        oninputTextarea();\r\n      }\r\n      focusTextarea();\r\n      setVisibility(\r\n        visibility === 'public' && prefs['posting:default:visibility']\r\n          ? prefs['posting:default:visibility']\r\n          : visibility,\r\n      );\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      setSensitive(sensitive && !!spoilerText);\r\n    } else if (editStatus) {\r\n      const { visibility, language, sensitive, poll, mediaAttachments } =\r\n        editStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      setUIState('loading');\r\n      (async () => {\r\n        try {\r\n          const statusSource = await masto.v1.statuses\r\n            .$select(editStatus.id)\r\n            .source.fetch();\r\n          console.log({ statusSource });\r\n          const { text, spoilerText } = statusSource;\r\n          textareaRef.current.value = text;\r\n          textareaRef.current.dataset.source = text;\r\n          oninputTextarea();\r\n          focusTextarea();\r\n          spoilerTextRef.current.value = spoilerText;\r\n          setVisibility(visibility);\r\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\r\n          setSensitive(sensitive);\r\n          setPoll(composablePoll);\r\n          setMediaAttachments(mediaAttachments);\r\n          setUIState('default');\r\n        } catch (e) {\r\n          console.error(e);\r\n          alert(e?.reason || e);\r\n          setUIState('error');\r\n        }\r\n      })();\r\n    } else {\r\n      focusTextarea();\r\n      console.log('Apply prefs', prefs);\r\n      if (prefs['posting:default:visibility']) {\r\n        setVisibility(prefs['posting:default:visibility']);\r\n      }\r\n      if (prefs['posting:default:language']) {\r\n        setLanguage(prefs['posting:default:language']);\r\n      }\r\n      if (prefs['posting:default:sensitive']) {\r\n        setSensitive(prefs['posting:default:sensitive']);\r\n      }\r\n    }\r\n    if (draftStatus) {\r\n      const {\r\n        status,\r\n        spoilerText,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      } = draftStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      textareaRef.current.value = status;\r\n      oninputTextarea();\r\n      focusTextarea();\r\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\r\n      if (visibility) setVisibility(visibility);\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      if (sensitive !== null) setSensitive(sensitive);\r\n      if (composablePoll) setPoll(composablePoll);\r\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\r\n    }\r\n  }, [draftStatus, editStatus, replyToStatus]);\r\n\r\n  const formRef = useRef();\r\n\r\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\r\n  const canClose = () => {\r\n    const { value, dataset } = textareaRef.current;\r\n\r\n    // check if loading\r\n    if (uiState === 'loading') {\r\n      console.log('canClose', { uiState });\r\n      return false;\r\n    }\r\n\r\n    // check for status and media attachments\r\n    const hasMediaAttachments = mediaAttachments.length > 0;\r\n    if (!value && !hasMediaAttachments) {\r\n      console.log('canClose', { value, mediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if all media attachments have IDs\r\n    const hasIDMediaAttachments =\r\n      mediaAttachments.length > 0 &&\r\n      mediaAttachments.every((media) => media.id);\r\n    if (hasIDMediaAttachments) {\r\n      console.log('canClose', { hasIDMediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if status contains only \"@acct\", if replying\r\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\r\n    const hasOnlyAcct =\r\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\r\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\r\n    if (!isSelf && hasOnlyAcct) {\r\n      console.log('canClose', { isSelf, hasOnlyAcct });\r\n      return true;\r\n    }\r\n\r\n    // check if status is same with source\r\n    const sameWithSource = value === dataset?.source;\r\n    if (sameWithSource) {\r\n      console.log('canClose', { sameWithSource });\r\n      return true;\r\n    }\r\n\r\n    console.log('canClose', {\r\n      value,\r\n      hasMediaAttachments,\r\n      hasIDMediaAttachments,\r\n      poll,\r\n      isSelf,\r\n      hasOnlyAcct,\r\n      sameWithSource,\r\n      uiState,\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  const confirmClose = () => {\r\n    if (!canClose()) {\r\n      const yes = confirm(beforeUnloadCopy);\r\n      return yes;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Show warning if user tries to close window with unsaved changes\r\n    const handleBeforeUnload = (e) => {\r\n      if (!canClose()) {\r\n        e.preventDefault();\r\n        e.returnValue = beforeUnloadCopy;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload, {\r\n      capture: true,\r\n    });\r\n    return () =>\r\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\r\n        capture: true,\r\n      });\r\n  }, []);\r\n\r\n  const getCharCount = () => {\r\n    const { value } = textareaRef.current;\r\n    const { value: spoilerText } = spoilerTextRef.current;\r\n    return stringLength(countableText(value)) + stringLength(spoilerText);\r\n  };\r\n  const updateCharCount = () => {\r\n    const count = getCharCount();\r\n    states.composerCharacterCount = count;\r\n  };\r\n  useEffect(updateCharCount, []);\r\n\r\n  const escDownRef = useRef(false);\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      escDownRef.current = true;\r\n      // This won't be true if this event is already handled and not propagated 🤞\r\n    },\r\n    {\r\n      enableOnFormTags: true,\r\n    },\r\n  );\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      if (!standalone && escDownRef.current && confirmClose()) {\r\n        onClose();\r\n      }\r\n      escDownRef.current = false;\r\n    },\r\n    {\r\n      enableOnFormTags: true,\r\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\r\n      keyup: true,\r\n      ignoreEventWhen: (e) => {\r\n        const modals = document.querySelectorAll('#modal-container > *');\r\n        const hasModal = !!modals;\r\n        const hasOnlyComposer =\r\n          modals.length === 1 && modals[0].querySelector('#compose-container');\r\n        return hasModal && !hasOnlyComposer;\r\n      },\r\n    },\r\n  );\r\n\r\n  const prevBackgroundDraft = useRef({});\r\n  const draftKey = () => {\r\n    const ns = getCurrentAccountNS();\r\n    return `${ns}#${UID.current}`;\r\n  };\r\n  const saveUnsavedDraft = () => {\r\n    // Not enabling this for editing status\r\n    // I don't think this warrant a draft mode for a status that's already posted\r\n    // Maybe it could be a big edit change but it should be rare\r\n    if (editStatus) return;\r\n    const key = draftKey();\r\n    const backgroundDraft = {\r\n      key,\r\n      replyTo: replyToStatus\r\n        ? {\r\n            /* Smaller payload of replyToStatus. Reasons:\r\n              - No point storing whole thing\r\n              - Could have media attachments\r\n              - Could be deleted/edited later\r\n            */\r\n            id: replyToStatus.id,\r\n            account: {\r\n              id: replyToStatus.account.id,\r\n              username: replyToStatus.account.username,\r\n              acct: replyToStatus.account.acct,\r\n            },\r\n          }\r\n        : null,\r\n      draftStatus: {\r\n        uid: UID.current,\r\n        status: textareaRef.current.value,\r\n        spoilerText: spoilerTextRef.current.value,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      },\r\n    };\r\n    if (!equal(backgroundDraft, prevBackgroundDraft.current) && !canClose()) {\r\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\r\n      db.drafts\r\n        .set(key, {\r\n          ...backgroundDraft,\r\n          state: 'unsaved',\r\n          updatedAt: Date.now(),\r\n        })\r\n        .then(() => {\r\n          console.debug('DRAFT saved', key, backgroundDraft);\r\n        })\r\n        .catch((e) => {\r\n          console.error('DRAFT failed', key, e);\r\n        });\r\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\r\n    }\r\n  };\r\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\r\n  useEffect(() => {\r\n    saveUnsavedDraft();\r\n    // If unmounted, means user discarded the draft\r\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\r\n    return () => {\r\n      db.drafts.del(draftKey());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleItems = (e) => {\r\n      const { items } = e.clipboardData || e.dataTransfer;\r\n      const files = [];\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        if (item.kind === 'file') {\r\n          const file = item.getAsFile();\r\n          if (file && supportedMimeTypes.includes(file.type)) {\r\n            files.push(file);\r\n          }\r\n        }\r\n      }\r\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\r\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n        return;\r\n      }\r\n      console.log({ files });\r\n      if (files.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\r\n        const max = maxMediaAttachments - mediaAttachments.length;\r\n        const allowedFiles = files.slice(0, max);\r\n        if (allowedFiles.length <= 0) {\r\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n          return;\r\n        }\r\n        const mediaFiles = allowedFiles.map((file) => ({\r\n          file,\r\n          type: file.type,\r\n          size: file.size,\r\n          url: URL.createObjectURL(file),\r\n          id: null,\r\n          description: null,\r\n        }));\r\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\r\n      }\r\n    };\r\n    window.addEventListener('paste', handleItems);\r\n    const handleDragover = (e) => {\r\n      // Prevent default if there's files\r\n      if (e.dataTransfer.items.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n    window.addEventListener('dragover', handleDragover);\r\n    window.addEventListener('drop', handleItems);\r\n    return () => {\r\n      window.removeEventListener('paste', handleItems);\r\n      window.removeEventListener('dragover', handleDragover);\r\n      window.removeEventListener('drop', handleItems);\r\n    };\r\n  }, [mediaAttachments]);\r\n\r\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\r\n\r\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\r\n    const topLanguages = [];\r\n    const restLanguages = [];\r\n    const { contentTranslationHideLanguages = [] } = states.settings;\r\n    supportedLanguages.forEach((l) => {\r\n      const [code] = l;\r\n      if (\r\n        code === language ||\r\n        code === prevLanguage.current ||\r\n        code === DEFAULT_LANG ||\r\n        contentTranslationHideLanguages.includes(code)\r\n      ) {\r\n        topLanguages.push(l);\r\n      } else {\r\n        restLanguages.push(l);\r\n      }\r\n    });\r\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\r\n      if (codeA === language) return -1;\r\n      if (codeB === language) return 1;\r\n      return commonA.localeCompare(commonB);\r\n    });\r\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\r\n      commonA.localeCompare(commonB),\r\n    );\r\n    return [topLanguages, restLanguages];\r\n  }, [language]);\r\n\r\n  return (\r\n    <div id=\"compose-container-outer\">\r\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\r\n        <div class=\"compose-top\">\r\n          {currentAccountInfo?.avatarStatic && (\r\n            // <Avatar\r\n            //   url={currentAccountInfo.avatarStatic}\r\n            //   size=\"xl\"\r\n            //   alt={currentAccountInfo.username}\r\n            //   squircle={currentAccountInfo?.bot}\r\n            // />\r\n            <AccountBlock\r\n              account={currentAccountInfo}\r\n              accountInstance={currentAccount.instanceURL}\r\n              hideDisplayName\r\n              useAvatarStatic\r\n            />\r\n          )}\r\n          {!standalone ? (\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  const newWin = openCompose({\r\n                    editStatus,\r\n                    replyToStatus,\r\n                    draftStatus: {\r\n                      uid: UID.current,\r\n                      status: textareaRef.current.value,\r\n                      spoilerText: spoilerTextRef.current.value,\r\n                      visibility,\r\n                      language,\r\n                      sensitive,\r\n                      poll,\r\n                      mediaAttachments,\r\n                    },\r\n                  });\r\n\r\n                  if (!newWin) {\r\n                    return;\r\n                  }\r\n\r\n                  onClose();\r\n                }}\r\n              >\r\n                <Icon icon=\"popout\" alt=\"Pop out\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"light close-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  if (confirmClose()) {\r\n                    onClose();\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon=\"x\" />\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            hasOpener && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  if (!window.opener) {\r\n                    alert('Looks like you closed the parent window.');\r\n                    return;\r\n                  }\r\n\r\n                  if (window.opener.__STATES__.showCompose) {\r\n                    const yes = confirm(\r\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\r\n                    );\r\n                    if (!yes) return;\r\n                  }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  onClose({\r\n                    fn: () => {\r\n                      const passData = {\r\n                        editStatus,\r\n                        replyToStatus,\r\n                        draftStatus: {\r\n                          uid: UID.current,\r\n                          status: textareaRef.current.value,\r\n                          spoilerText: spoilerTextRef.current.value,\r\n                          visibility,\r\n                          language,\r\n                          sensitive,\r\n                          poll,\r\n                          mediaAttachments,\r\n                        },\r\n                      };\r\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\r\n                      window.opener.__STATES__.showCompose = true;\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"popin\" alt=\"Pop in\" />\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n        {!!replyToStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={replyToStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend reply-to\">\r\n              Replying to @\r\n              {replyToStatus.account.acct || replyToStatus.account.username}\r\n              &rsquo;s post\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!!editStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={editStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend\">Editing source post</div>\r\n          </div>\r\n        )}\r\n        <form\r\n          ref={formRef}\r\n          class={`form-visibility-${visibility}`}\r\n          style={{\r\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\r\n            opacity: uiState === 'loading' ? 0.5 : 1,\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n              formRef.current.dispatchEvent(\r\n                new Event('submit', { cancelable: true }),\r\n              );\r\n            }\r\n          }}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(e.target);\r\n            const entries = Object.fromEntries(formData.entries());\r\n            console.log('ENTRIES', entries);\r\n            let { status, visibility, sensitive, spoilerText } = entries;\r\n\r\n            // Pre-cleanup\r\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\r\n\r\n            // Validation\r\n            /* Let the backend validate this\r\n          if (stringLength(status) > maxCharacters) {\r\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\r\n            return;\r\n          }\r\n          if (\r\n            sensitive &&\r\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\r\n          ) {\r\n            alert(\r\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\r\n            );\r\n            return;\r\n          }\r\n          */\r\n            if (poll) {\r\n              if (poll.options.length < 2) {\r\n                alert('Poll must have at least 2 options');\r\n                return;\r\n              }\r\n              if (poll.options.some((option) => option === '')) {\r\n                alert('Some poll choices are empty');\r\n                return;\r\n              }\r\n            }\r\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\r\n\r\n            if (mediaAttachments.length > 0) {\r\n              // If there are media attachments, check if they have no descriptions\r\n              const hasNoDescriptions = mediaAttachments.some(\r\n                (media) => !media.description?.trim?.(),\r\n              );\r\n              if (hasNoDescriptions) {\r\n                const yes = confirm(\r\n                  'Some media have no descriptions. Continue?',\r\n                );\r\n                if (!yes) return;\r\n              }\r\n            }\r\n\r\n            // Post-cleanup\r\n            spoilerText = (sensitive && spoilerText) || undefined;\r\n            status = status === '' ? undefined : status;\r\n\r\n            setUIState('loading');\r\n            (async () => {\r\n              try {\r\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\r\n                if (mediaAttachments.length > 0) {\r\n                  // Upload media attachments first\r\n                  const mediaPromises = mediaAttachments.map((attachment) => {\r\n                    const { file, description, id } = attachment;\r\n                    console.log('UPLOADING', attachment);\r\n                    if (id) {\r\n                      // If already uploaded\r\n                      return attachment;\r\n                    } else {\r\n                      const params = removeNullUndefined({\r\n                        file,\r\n                        description,\r\n                      });\r\n                      return masto.v2.media.create(params).then((res) => {\r\n                        if (res.id) {\r\n                          attachment.id = res.id;\r\n                        }\r\n                        return res;\r\n                      });\r\n                    }\r\n                  });\r\n                  const results = await Promise.allSettled(mediaPromises);\r\n\r\n                  // If any failed, return\r\n                  if (\r\n                    results.some((result) => {\r\n                      return result.status === 'rejected' || !result.value?.id;\r\n                    })\r\n                  ) {\r\n                    setUIState('error');\r\n                    // Alert all the reasons\r\n                    results.forEach((result) => {\r\n                      if (result.status === 'rejected') {\r\n                        console.error(result);\r\n                        alert(result.reason || `Attachment #${i} failed`);\r\n                      }\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  console.log({ results, mediaAttachments });\r\n                }\r\n\r\n                /* NOTE:\r\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\r\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\r\n\r\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\r\n              */\r\n                let params = {\r\n                  status,\r\n                  // spoilerText,\r\n                  spoiler_text: spoilerText,\r\n                  language,\r\n                  sensitive,\r\n                  poll,\r\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\r\n                  media_ids: mediaAttachments.map(\r\n                    (attachment) => attachment.id,\r\n                  ),\r\n                };\r\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\r\n                  params.media_attributes = mediaAttachments.map(\r\n                    (attachment) => {\r\n                      return {\r\n                        id: attachment.id,\r\n                        description: attachment.description,\r\n                        // focus\r\n                        // thumbnail\r\n                      };\r\n                    },\r\n                  );\r\n                } else if (!editStatus) {\r\n                  params.visibility = visibility;\r\n                  // params.inReplyToId = replyToStatus?.id || undefined;\r\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\r\n                }\r\n                params = removeNullUndefined(params);\r\n                console.log('POST', params);\r\n\r\n                let newStatus;\r\n                if (editStatus) {\r\n                  newStatus = await masto.v1.statuses\r\n                    .$select(editStatus.id)\r\n                    .update(params);\r\n                  saveStatus(newStatus, instance, {\r\n                    skipThreading: true,\r\n                  });\r\n                } else {\r\n                  try {\r\n                    newStatus = await masto.v1.statuses.create(params, {\r\n                      idempotencyKey: UID.current,\r\n                    });\r\n                  } catch (_) {\r\n                    // If idempotency key fails, try again without it\r\n                    newStatus = await masto.v1.statuses.create(params);\r\n                  }\r\n                }\r\n                setUIState('default');\r\n\r\n                // Close\r\n                onClose({\r\n                  // type: post, reply, edit\r\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\r\n                  newStatus,\r\n                  instance,\r\n                });\r\n              } catch (e) {\r\n                console.error(e);\r\n                alert(e?.reason || e);\r\n                setUIState('error');\r\n              }\r\n            })();\r\n          }}\r\n        >\r\n          <div class=\"toolbar stretch\">\r\n            <input\r\n              ref={spoilerTextRef}\r\n              type=\"text\"\r\n              name=\"spoilerText\"\r\n              placeholder=\"Content warning\"\r\n              disabled={uiState === 'loading'}\r\n              class=\"spoiler-text-field\"\r\n              lang={language}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              style={{\r\n                opacity: sensitive ? 1 : 0,\r\n                pointerEvents: sensitive ? 'auto' : 'none',\r\n              }}\r\n              onInput={() => {\r\n                updateCharCount();\r\n              }}\r\n            />\r\n            <label\r\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\r\n              title=\"Content warning or sensitive media\"\r\n            >\r\n              <input\r\n                name=\"sensitive\"\r\n                type=\"checkbox\"\r\n                checked={sensitive}\r\n                disabled={uiState === 'loading'}\r\n                onChange={(e) => {\r\n                  const sensitive = e.target.checked;\r\n                  setSensitive(sensitive);\r\n                  if (sensitive) {\r\n                    spoilerTextRef.current?.focus();\r\n                  } else {\r\n                    textareaRef.current?.focus();\r\n                  }\r\n                }}\r\n              />\r\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n            </label>{' '}\r\n            <label\r\n              class={`toolbar-button ${\r\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\r\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\r\n              title={`Visibility: ${visibility}`}\r\n            >\r\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\r\n              <select\r\n                name=\"visibility\"\r\n                value={visibility}\r\n                onChange={(e) => {\r\n                  setVisibility(e.target.value);\r\n                }}\r\n                disabled={uiState === 'loading' || !!editStatus}\r\n              >\r\n                <option value=\"public\">\r\n                  Public <Icon icon=\"earth\" />\r\n                </option>\r\n                <option value=\"unlisted\">Unlisted</option>\r\n                <option value=\"private\">Followers only</option>\r\n                <option value=\"direct\">Private mention</option>\r\n              </select>\r\n            </label>{' '}\r\n          </div>\r\n          <Textarea\r\n            ref={textareaRef}\r\n            placeholder={\r\n              replyToStatus\r\n                ? 'Post your reply'\r\n                : editStatus\r\n                ? 'Edit your post'\r\n                : 'What are you doing?'\r\n            }\r\n            required={mediaAttachments?.length === 0}\r\n            disabled={uiState === 'loading'}\r\n            lang={language}\r\n            onInput={() => {\r\n              updateCharCount();\r\n            }}\r\n            maxCharacters={maxCharacters}\r\n            performSearch={(params) => {\r\n              const { type, q, limit } = params;\r\n              if (type === 'accounts') {\r\n                return masto.v1.accounts.search.list({\r\n                  q,\r\n                  limit,\r\n                  resolve: false,\r\n                });\r\n              }\r\n              return masto.v2.search.fetch(params);\r\n            }}\r\n          />\r\n          {mediaAttachments?.length > 0 && (\r\n            <div class=\"media-attachments\">\r\n              {mediaAttachments.map((attachment, i) => {\r\n                const { id, file } = attachment;\r\n                const fileID = file?.size + file?.type + file?.name;\r\n                return (\r\n                  <MediaAttachment\r\n                    key={id || fileID || i}\r\n                    attachment={attachment}\r\n                    disabled={uiState === 'loading'}\r\n                    lang={language}\r\n                    onDescriptionChange={(value) => {\r\n                      setMediaAttachments((attachments) => {\r\n                        const newAttachments = [...attachments];\r\n                        newAttachments[i].description = value;\r\n                        return newAttachments;\r\n                      });\r\n                    }}\r\n                    onRemove={() => {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.filter((_, j) => j !== i);\r\n                      });\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n              <label class=\"media-sensitive\">\r\n                <input\r\n                  name=\"sensitive\"\r\n                  type=\"checkbox\"\r\n                  checked={sensitive}\r\n                  disabled={uiState === 'loading'}\r\n                  onChange={(e) => {\r\n                    const sensitive = e.target.checked;\r\n                    setSensitive(sensitive);\r\n                  }}\r\n                />{' '}\r\n                <span>Mark media as sensitive</span>{' '}\r\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n              </label>\r\n            </div>\r\n          )}\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              maxOptions={maxOptions}\r\n              maxExpiration={maxExpiration}\r\n              minExpiration={minExpiration}\r\n              maxCharactersPerOption={maxCharactersPerOption}\r\n              poll={poll}\r\n              disabled={uiState === 'loading'}\r\n              onInput={(poll) => {\r\n                if (poll) {\r\n                  const newPoll = { ...poll };\r\n                  setPoll(newPoll);\r\n                } else {\r\n                  setPoll(null);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          <div\r\n            class=\"toolbar wrap\"\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span>\r\n              <label class=\"toolbar-button\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept={supportedMimeTypes.join(',')}\r\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\r\n                  disabled={\r\n                    uiState === 'loading' ||\r\n                    mediaAttachments.length >= maxMediaAttachments ||\r\n                    !!poll\r\n                  }\r\n                  onChange={(e) => {\r\n                    const files = e.target.files;\r\n                    if (!files) return;\r\n\r\n                    const mediaFiles = Array.from(files).map((file) => ({\r\n                      file,\r\n                      type: file.type,\r\n                      size: file.size,\r\n                      url: URL.createObjectURL(file),\r\n                      id: null, // indicate uploaded state\r\n                      description: null,\r\n                    }));\r\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\r\n\r\n                    // Validate max media attachments\r\n                    if (\r\n                      mediaAttachments.length + mediaFiles.length >\r\n                      maxMediaAttachments\r\n                    ) {\r\n                      alert(\r\n                        `You can only attach up to ${maxMediaAttachments} files.`,\r\n                      );\r\n                    } else {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.concat(mediaFiles);\r\n                      });\r\n                    }\r\n                    // Reset\r\n                    e.target.value = '';\r\n                  }}\r\n                />\r\n                <Icon icon=\"attachment\" />\r\n              </label>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={\r\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\r\n                }\r\n                onClick={() => {\r\n                  setPoll({\r\n                    options: ['', ''],\r\n                    expiresIn: 24 * 60 * 60, // 1 day\r\n                    multiple: false,\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"poll\" alt=\"Add poll\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  setShowEmoji2Picker(true);\r\n                }}\r\n              >\r\n                <Icon icon=\"emoji2\" />\r\n              </button>\r\n            </span>\r\n            <div class=\"spacer\" />\r\n            {uiState === 'loading' ? (\r\n              <Loader abrupt />\r\n            ) : (\r\n              <CharCountMeter\r\n                maxCharacters={maxCharacters}\r\n                hidden={uiState === 'loading'}\r\n              />\r\n            )}\r\n            <label\r\n              class={`toolbar-button ${\r\n                language !== prevLanguage.current ? 'highlight' : ''\r\n              }`}\r\n            >\r\n              <span class=\"icon-text\">\r\n                {supportedLanguagesMap[language]?.native}\r\n              </span>\r\n              <select\r\n                name=\"language\"\r\n                value={language}\r\n                onChange={(e) => {\r\n                  const { value } = e.target;\r\n                  setLanguage(value || DEFAULT_LANG);\r\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\r\n                }}\r\n                disabled={uiState === 'loading'}\r\n              >\r\n                {topSupportedLanguages.map(([code, common, native]) => (\r\n                  <option value={code} key={code}>\r\n                    {common} ({native})\r\n                  </option>\r\n                ))}\r\n                <hr />\r\n                {restSupportedLanguages.map(([code, common, native]) => (\r\n                  <option value={code} key={code}>\r\n                    {common} ({native})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>{' '}\r\n            <button\r\n              type=\"submit\"\r\n              class=\"large\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showEmoji2Picker && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEmoji2Picker(false);\r\n            }\r\n          }}\r\n        >\r\n          <CustomEmojisModal\r\n            masto={masto}\r\n            instance={instance}\r\n            onClose={() => {\r\n              setShowEmoji2Picker(false);\r\n            }}\r\n            onSelect={(emoji) => {\r\n              const emojiWithSpace = ` ${emoji} `;\r\n              const textarea = textareaRef.current;\r\n              if (!textarea) return;\r\n              const { selectionStart, selectionEnd } = textarea;\r\n              const text = textarea.value;\r\n              const newText =\r\n                text.slice(0, selectionStart) +\r\n                emojiWithSpace +\r\n                text.slice(selectionEnd);\r\n              textarea.value = newText;\r\n              textarea.selectionStart = textarea.selectionEnd =\r\n                selectionEnd + emojiWithSpace.length;\r\n              textarea.focus();\r\n              textarea.dispatchEvent(new Event('input'));\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction autoResizeTextarea(textarea) {\r\n  if (!textarea) return;\r\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\r\n  if (offsetHeight < window.innerHeight) {\r\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\r\n    // No idea why it does that, will re-investigate in far future\r\n    const offset = offsetHeight - clientHeight;\r\n    const height = value ? scrollHeight + offset + 'px' : null;\r\n    textarea.style.height = height;\r\n  }\r\n}\r\n\r\nconst Textarea = forwardRef((props, ref) => {\r\n  const { masto } = api();\r\n  const [text, setText] = useState(ref.current?.value || '');\r\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\r\n  const snapStates = useSnapshot(states);\r\n  // const charCount = snapStates.composerCharacterCount;\r\n\r\n  const customEmojis = useRef();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        console.log({ emojis });\r\n        customEmojis.current = emojis;\r\n      } catch (e) {\r\n        // silent fail\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const textExpanderRef = useRef();\r\n  const textExpanderTextRef = useRef('');\r\n  useEffect(() => {\r\n    let handleChange, handleValue, handleCommited;\r\n    if (textExpanderRef.current) {\r\n      handleChange = (e) => {\r\n        // console.log('text-expander-change', e);\r\n        const { key, provide, text } = e.detail;\r\n        textExpanderTextRef.current = text;\r\n\r\n        if (text === '') {\r\n          provide(\r\n            Promise.resolve({\r\n              matched: false,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (key === ':') {\r\n          // const emojis = customEmojis.current.filter((emoji) =>\r\n          //   emoji.shortcode.startsWith(text),\r\n          // );\r\n          const emojis = filterShortcodes(customEmojis.current, text);\r\n          let html = '';\r\n          emojis.forEach((emoji) => {\r\n            const { shortcode, url } = emoji;\r\n            html += `\r\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\r\n                <img src=\"${encodeHTML(\r\n                  url,\r\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \r\n                :${encodeHTML(shortcode)}:\r\n              </li>`;\r\n          });\r\n          // console.log({ emojis, html });\r\n          menu.innerHTML = html;\r\n          provide(\r\n            Promise.resolve({\r\n              matched: emojis.length > 0,\r\n              fragment: menu,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        const type = {\r\n          '@': 'accounts',\r\n          '#': 'hashtags',\r\n        }[key];\r\n        provide(\r\n          new Promise((resolve) => {\r\n            const searchResults = performSearch({\r\n              type,\r\n              q: text,\r\n              limit: 5,\r\n            });\r\n            searchResults.then((value) => {\r\n              if (text !== textExpanderTextRef.current) {\r\n                return;\r\n              }\r\n              console.log({ value, type, v: value[type] });\r\n              const results = value[type] || value;\r\n              console.log('RESULTS', value, results);\r\n              let html = '';\r\n              results.forEach((result) => {\r\n                const {\r\n                  name,\r\n                  avatarStatic,\r\n                  displayName,\r\n                  username,\r\n                  acct,\r\n                  emojis,\r\n                  history,\r\n                } = result;\r\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\r\n                // const item = menuItem.cloneNode();\r\n                if (acct) {\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\r\n                      <span class=\"avatar\">\r\n                        <img src=\"${encodeHTML(\r\n                          avatarStatic,\r\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\r\n                      </span>\r\n                      <span>\r\n                        <b>${displayNameWithEmoji || username}</b>\r\n                        <br>@${encodeHTML(acct)}\r\n                      </span>\r\n                    </li>\r\n                  `;\r\n                } else {\r\n                  const total = history?.reduce?.(\r\n                    (acc, cur) => acc + +cur.uses,\r\n                    0,\r\n                  );\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\r\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\r\n                      ${\r\n                        total\r\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\r\n                          : ''\r\n                      }\r\n                    </li>\r\n                  `;\r\n                }\r\n                menu.innerHTML = html;\r\n              });\r\n              console.log('MENU', results, menu);\r\n              resolve({\r\n                matched: results.length > 0,\r\n                fragment: menu,\r\n              });\r\n            });\r\n          }),\r\n        );\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-change',\r\n        handleChange,\r\n      );\r\n\r\n      handleValue = (e) => {\r\n        const { key, item } = e.detail;\r\n        if (key === ':') {\r\n          e.detail.value = `:${item.dataset.value}:`;\r\n        } else {\r\n          e.detail.value = `${key}${item.dataset.value}`;\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-value',\r\n        handleValue,\r\n      );\r\n\r\n      handleCommited = (e) => {\r\n        const { input } = e.detail;\r\n        setText(input.value);\r\n        // fire input event\r\n        if (ref.current) {\r\n          const event = new Event('input', { bubbles: true });\r\n          ref.current.dispatchEvent(event);\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-committed',\r\n        handleCommited,\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (textExpanderRef.current) {\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-change',\r\n          handleChange,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-value',\r\n          handleValue,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-committed',\r\n          handleCommited,\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Resize observer for textarea\r\n    const textarea = ref.current;\r\n    if (!textarea) return;\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      // Get height of textarea, set height to textExpander\r\n      if (textExpanderRef.current) {\r\n        const { height } = textarea.getBoundingClientRect();\r\n        textExpanderRef.current.style.height = height + 'px';\r\n      }\r\n    });\r\n    resizeObserver.observe(textarea);\r\n  }, []);\r\n\r\n  const composeHighlightRef = useRef();\r\n  const throttleHighlightText = useThrottledCallback((text) => {\r\n    composeHighlightRef.current.innerHTML =\r\n      highlightText(text, {\r\n        maxCharacters,\r\n      }) + '\\n';\r\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\r\n  }, 500);\r\n\r\n  return (\r\n    <text-expander\r\n      ref={textExpanderRef}\r\n      keys=\"@ # :\"\r\n      class=\"compose-field-container\"\r\n    >\r\n      <textarea\r\n        class=\"compose-field\"\r\n        autoCapitalize=\"sentences\"\r\n        autoComplete=\"on\"\r\n        autoCorrect=\"on\"\r\n        spellCheck=\"true\"\r\n        dir=\"auto\"\r\n        rows=\"6\"\r\n        cols=\"50\"\r\n        {...textareaProps}\r\n        ref={ref}\r\n        name=\"status\"\r\n        value={text}\r\n        onKeyDown={(e) => {\r\n          // Get line before cursor position after pressing 'Enter'\r\n          const { key, target } = e;\r\n          if (key === 'Enter') {\r\n            try {\r\n              const { value, selectionStart } = target;\r\n              const textBeforeCursor = value.slice(0, selectionStart);\r\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\r\n              if (lastLine) {\r\n                // If line starts with \"- \" or \"12. \"\r\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\r\n                  // insert \"- \" at cursor position\r\n                  const [_, preSpaces, bullet, postSpaces, anything] =\r\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\r\n                  if (anything) {\r\n                    e.preventDefault();\r\n                    const [number] = bullet.match(/\\d+/) || [];\r\n                    const newBullet = number ? `${+number + 1}.` : '-';\r\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\r\n                    target.setRangeText(text, selectionStart, selectionStart);\r\n                    const pos = selectionStart + text.length;\r\n                    target.setSelectionRange(pos, pos);\r\n                  } else {\r\n                    // trim the line before the cursor, then insert new line\r\n                    const pos = selectionStart - lastLine.length;\r\n                    target.setRangeText('', pos, selectionStart);\r\n                  }\r\n                  autoResizeTextarea(target);\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // silent fail\r\n              console.error(e);\r\n            }\r\n          }\r\n        }}\r\n        onInput={(e) => {\r\n          const { target } = e;\r\n          const text = target.value;\r\n          setText(text);\r\n          autoResizeTextarea(target);\r\n          props.onInput?.(e);\r\n          throttleHighlightText(text);\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          height: '4em',\r\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\r\n        }}\r\n        onScroll={(e) => {\r\n          const { scrollTop } = e.target;\r\n          composeHighlightRef.current.scrollTop = scrollTop;\r\n        }}\r\n      />\r\n      <div\r\n        ref={composeHighlightRef}\r\n        class=\"compose-highlight\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </text-expander>\r\n  );\r\n});\r\n\r\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\r\n  const snapStates = useSnapshot(states);\r\n  const charCount = snapStates.composerCharacterCount;\r\n  const leftChars = maxCharacters - charCount;\r\n  if (hidden) {\r\n    return <meter class=\"donut\" hidden />;\r\n  }\r\n  return (\r\n    <meter\r\n      class={`donut ${\r\n        leftChars <= -10\r\n          ? 'explode'\r\n          : leftChars <= 0\r\n          ? 'danger'\r\n          : leftChars <= 20\r\n          ? 'warning'\r\n          : ''\r\n      }`}\r\n      value={charCount}\r\n      max={maxCharacters}\r\n      data-left={leftChars}\r\n      title={`${leftChars}/${maxCharacters}`}\r\n      style={{\r\n        '--percentage': (charCount / maxCharacters) * 100,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction MediaAttachment({\r\n  attachment,\r\n  disabled,\r\n  lang,\r\n  onDescriptionChange = () => {},\r\n  onRemove = () => {},\r\n}) {\r\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\r\n  const { type, id, file } = attachment;\r\n  const url = useMemo(\r\n    () => (file ? URL.createObjectURL(file) : attachment.url),\r\n    [file, attachment.url],\r\n  );\r\n  console.log({ attachment });\r\n  const [description, setDescription] = useState(attachment.description);\r\n  const suffixType = type.split('/')[0];\r\n  const debouncedOnDescriptionChange = useDebouncedCallback(\r\n    onDescriptionChange,\r\n    250,\r\n  );\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const textareaRef = useRef(null);\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showModal && textareaRef.current) {\r\n      timer = setTimeout(() => {\r\n        textareaRef.current.focus();\r\n      }, 100);\r\n    }\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [showModal]);\r\n\r\n  const descTextarea = (\r\n    <>\r\n      {!!id && !supportsEdit ? (\r\n        <div class=\"media-desc\">\r\n          <span class=\"tag\">Uploaded</span>\r\n          <p title={description}>\r\n            {attachment.description || <i>No description</i>}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={description || ''}\r\n          lang={lang}\r\n          placeholder={\r\n            {\r\n              image: 'Image description',\r\n              video: 'Video description',\r\n              audio: 'Audio description',\r\n            }[suffixType]\r\n          }\r\n          autoCapitalize=\"sentences\"\r\n          autoComplete=\"on\"\r\n          autoCorrect=\"on\"\r\n          spellCheck=\"true\"\r\n          dir=\"auto\"\r\n          disabled={disabled}\r\n          maxlength=\"1500\" // Not unicode-aware :(\r\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\r\n          onInput={(e) => {\r\n            const { value } = e.target;\r\n            setDescription(value);\r\n            debouncedOnDescriptionChange(value);\r\n          }}\r\n        ></textarea>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div class=\"media-attachment\">\r\n        <div\r\n          class=\"media-preview\"\r\n          tabIndex=\"0\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          {suffixType === 'image' ? (\r\n            <img src={url} alt=\"\" />\r\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n            <video src={url} playsinline muted />\r\n          ) : suffixType === 'audio' ? (\r\n            <audio src={url} controls />\r\n          ) : null}\r\n        </div>\r\n        {descTextarea}\r\n        <div class=\"media-aside\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain close-button\"\r\n            disabled={disabled}\r\n            onClick={onRemove}\r\n          >\r\n            <Icon icon=\"x\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowModal(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <h2>\r\n                {\r\n                  {\r\n                    image: 'Edit image description',\r\n                    video: 'Edit video description',\r\n                    audio: 'Edit audio description',\r\n                  }[suffixType]\r\n                }\r\n              </h2>\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <div class=\"media-preview\">\r\n                {suffixType === 'image' ? (\r\n                  <img src={url} alt=\"\" />\r\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n                  <video src={url} playsinline controls />\r\n                ) : suffixType === 'audio' ? (\r\n                  <audio src={url} controls />\r\n                ) : null}\r\n              </div>\r\n              <div class=\"media-form\">\r\n                {descTextarea}\r\n                <footer>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"light block\"\r\n                    onClick={() => {\r\n                      setShowModal(false);\r\n                    }}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Poll({\r\n  lang,\r\n  poll,\r\n  disabled,\r\n  onInput = () => {},\r\n  maxOptions,\r\n  maxExpiration,\r\n  minExpiration,\r\n  maxCharactersPerOption,\r\n}) {\r\n  const { options, expiresIn, multiple } = poll;\r\n\r\n  return (\r\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\r\n      <div class=\"poll-choices\">\r\n        {options.map((option, i) => (\r\n          <div class=\"poll-choice\" key={i}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={option}\r\n              disabled={disabled}\r\n              maxlength={maxCharactersPerOption}\r\n              placeholder={`Choice ${i + 1}`}\r\n              lang={lang}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              onInput={(e) => {\r\n                const { value } = e.target;\r\n                options[i] = value;\r\n                onInput(poll);\r\n              }}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"plain2 poll-button\"\r\n              disabled={disabled || options.length <= 1}\r\n              onClick={() => {\r\n                options.splice(i, 1);\r\n                onInput(poll);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" size=\"s\" />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain2 poll-button\"\r\n          disabled={disabled || options.length >= maxOptions}\r\n          onClick={() => {\r\n            options.push('');\r\n            onInput(poll);\r\n          }}\r\n        >\r\n          +\r\n        </button>{' '}\r\n        <label class=\"multiple-choices\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={multiple}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { checked } = e.target;\r\n              poll.multiple = checked;\r\n              onInput(poll);\r\n            }}\r\n          />{' '}\r\n          Multiple choices\r\n        </label>\r\n        <label class=\"expires-in\">\r\n          Duration{' '}\r\n          <select\r\n            value={expiresIn}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n              poll.expiresIn = value;\r\n              onInput(poll);\r\n            }}\r\n          >\r\n            {Object.entries(expiryOptions)\r\n              .filter(([label, value]) => {\r\n                return value >= minExpiration && value <= maxExpiration;\r\n              })\r\n              .map(([label, value]) => (\r\n                <option value={value} key={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain remove-poll-button\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            onInput(null);\r\n          }}\r\n        >\r\n          Remove poll\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction filterShortcodes(emojis, searchTerm) {\r\n  searchTerm = searchTerm.toLowerCase();\r\n\r\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\r\n  return emojis\r\n    .sort((a, b) => {\r\n      let aLower = a.shortcode.toLowerCase();\r\n      let bLower = b.shortcode.toLowerCase();\r\n\r\n      let aStartsWith = aLower.startsWith(searchTerm);\r\n      let bStartsWith = bLower.startsWith(searchTerm);\r\n      let aContains = aLower.includes(searchTerm);\r\n      let bContains = bLower.includes(searchTerm);\r\n      let bothStartWith = aStartsWith && bStartsWith;\r\n      let bothContain = aContains && bContains;\r\n\r\n      return bothStartWith\r\n        ? a.length - b.length\r\n        : aStartsWith\r\n        ? -1\r\n        : bStartsWith\r\n        ? 1\r\n        : bothContain\r\n        ? a.length - b.length\r\n        : aContains\r\n        ? -1\r\n        : bContains\r\n        ? 1\r\n        : 0;\r\n    })\r\n    .slice(0, 5);\r\n}\r\n\r\nfunction encodeHTML(str) {\r\n  return str.replace(/[&<>\"']/g, function (char) {\r\n    return '&#' + char.charCodeAt(0) + ';';\r\n  });\r\n}\r\n\r\nfunction removeNullUndefined(obj) {\r\n  for (let key in obj) {\r\n    if (obj[key] === null || obj[key] === undefined) {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction CustomEmojisModal({\r\n  masto,\r\n  instance,\r\n  onClose = () => {},\r\n  onSelect = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const customEmojisList = useRef([]);\r\n  const [customEmojis, setCustomEmojis] = useState({});\r\n  const recentlyUsedCustomEmojis = useMemo(\r\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\r\n  );\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        // Group emojis by category\r\n        const emojisCat = {\r\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\r\n            emojis.find((e) => e.shortcode === emoji.shortcode),\r\n          ),\r\n        };\r\n        const othersCat = [];\r\n        emojis.forEach((emoji) => {\r\n          if (!emoji.visibleInPicker) return;\r\n          customEmojisList.current?.push?.(emoji);\r\n          if (!emoji.category) {\r\n            othersCat.push(emoji);\r\n            return;\r\n          }\r\n          if (!emojisCat[emoji.category]) {\r\n            emojisCat[emoji.category] = [];\r\n          }\r\n          emojisCat[emoji.category].push(emoji);\r\n        });\r\n        if (othersCat.length) {\r\n          emojisCat['--others--'] = othersCat;\r\n        }\r\n        setCustomEmojis(emojisCat);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <b>Custom emojis</b>{' '}\r\n        {uiState === 'loading' ? (\r\n          <Loader />\r\n        ) : (\r\n          <small class=\"insignificant\"> • {instance}</small>\r\n        )}\r\n      </header>\r\n      <main>\r\n        <div class=\"custom-emojis-list\">\r\n          {uiState === 'error' && (\r\n            <div class=\"ui-state\">\r\n              <p>Error loading custom emojis</p>\r\n            </div>\r\n          )}\r\n          {uiState === 'default' &&\r\n            Object.entries(customEmojis).map(\r\n              ([category, emojis]) =>\r\n                !!emojis?.length && (\r\n                  <>\r\n                    <div class=\"section-header\">\r\n                      {{\r\n                        '--recent--': 'Recently used',\r\n                        '--others--': 'Others',\r\n                      }[category] || category}\r\n                    </div>\r\n                    <section>\r\n                      {emojis.map((emoji) => (\r\n                        <button\r\n                          key={emoji}\r\n                          type=\"button\"\r\n                          class=\"plain4\"\r\n                          onClick={() => {\r\n                            onClose();\r\n                            requestAnimationFrame(() => {\r\n                              onSelect(`:${emoji.shortcode}:`);\r\n                            });\r\n                            let recentlyUsedCustomEmojis =\r\n                              store.account.get('recentlyUsedCustomEmojis') ||\r\n                              [];\r\n                            const recentlyUsedEmojiIndex =\r\n                              recentlyUsedCustomEmojis.findIndex(\r\n                                (e) => e.shortcode === emoji.shortcode,\r\n                              );\r\n                            if (recentlyUsedEmojiIndex !== -1) {\r\n                              // Move emoji to index 0\r\n                              recentlyUsedCustomEmojis.splice(\r\n                                recentlyUsedEmojiIndex,\r\n                                1,\r\n                              );\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                            } else {\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                              // Remove unavailable ones\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.filter((e) =>\r\n                                  customEmojisList.current?.find?.(\r\n                                    (emoji) => emoji.shortcode === e.shortcode,\r\n                                  ),\r\n                                );\r\n                              // Limit to 10\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.slice(0, 10);\r\n                            }\r\n\r\n                            // Store back\r\n                            store.account.set(\r\n                              'recentlyUsedCustomEmojis',\r\n                              recentlyUsedCustomEmojis,\r\n                            );\r\n                          }}\r\n                          title={`:${emoji.shortcode}:`}\r\n                        >\r\n                          <picture>\r\n                            {!!emoji.staticUrl && (\r\n                              <source\r\n                                srcset={emoji.staticUrl}\r\n                                media=\"(prefers-reduced-motion: reduce)\"\r\n                              />\r\n                            )}\r\n                            <img\r\n                              class=\"shortcode-emoji\"\r\n                              src={emoji.url || emoji.staticUrl}\r\n                              alt={emoji.shortcode}\r\n                              width=\"16\"\r\n                              height=\"16\"\r\n                              loading=\"lazy\"\r\n                              decoding=\"async\"\r\n                            />\r\n                          </picture>\r\n                        </button>\r\n                      ))}\r\n                    </section>\r\n                  </>\r\n                ),\r\n            )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compose;\r\n","import { useLayoutEffect } from 'preact/hooks';\r\nimport { matchPath } from 'react-router-dom';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport states from './states';\r\n\r\nconst { VITE_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\r\n\r\nexport default function useTitle(title, path) {\r\n  function setTitle() {\r\n    const { currentLocation } = states;\r\n    const hasPaths = Array.isArray(path);\r\n    let paths = hasPaths ? path : [];\r\n    // Workaround for matchPath not working for optional path segments\r\n    // https://github.com/remix-run/react-router/discussions/9862\r\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\r\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\r\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\r\n    }\r\n    let matched = false;\r\n    if (paths.length) {\r\n      matched = paths.some((p) => matchPath(p, currentLocation));\r\n    } else if (path) {\r\n      matched = matchPath(path, currentLocation);\r\n    }\r\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\r\n    if (matched) {\r\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const unsub = subscribeKey(states, 'currentLocation', setTitle);\r\n    setTitle();\r\n    return unsub;\r\n  }, [title, path]);\r\n}\r\n"],"file":"assets/useTitle-e0387582.js"}