{"version":3,"mappings":"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","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getCurrentAccount","window","__IGNORE_GET_ACCOUNT_ERROR__","import","currentAccount","getCurrentAccountNS","account","instanceURL","saveAccount","acc","vapidKey","set","accountInfo","updateAccount","currentInstance","getCurrentInstance","instances","instance","e","console","alert","configuration","maxMediaAttachments","maxTootChars","pleroma","pollLimits","statuses","polls","maxCharactersPerOption","getInstanceConfiguration","get","key","localStorage","getItem","JSON","value","setJSON","warn","session","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","toLowerCase","url","client","masto","createRestAPIClient","timeout","initInstance","uri","streamingApi","urls","domain","streaming","streamClient","createStreamingAPIClient","implementation","initAccount","mastoAccount","initPreferences","preferences","accountID","authenticated","_b","_c","_d","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","_moize","moize","mem","fn","opts","maxSize","isDeepEqual","pmem","isPromise","states","proxy","appVersion","prevLocation","currentLocation","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","reloadGenericAccounts","counter","spoilers","scrollPositions","unfurledLinks","statusQuotes","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","showKeyboardShortcutsHelp","showGenericAccounts","showMediaAlt","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","cloakMode","initStates","subscribeKey","v","subscribe","changes","prevValue","path","statusKey","getStatus","statusID","saveStatus","status","skipThreading","override","Object","oldStatus","_pinned","threadifyStatus","requestAnimationFrame","propInstance","api","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","Promise","useInterval","deps","immediate","savedCallback","useRef","useEffect","current","setInterval","tick","clearInterval","openCompose","URL","location","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","SIZES","s","m","l","xl","xxl","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","bus","link","history","share","sparkles","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","Icon","icon","size","alt","title","class","style","iconSize","iconBlock","rotate","flip","Array","isArray","iconData","setIconData","useState","default","_jsx","children","viewBox","dangerouslySetInnerHTML","__html","body","transform","memo","$modalContainer","document","getElementById","Modal","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","escRef","useHotkeys","enabled","keydown","keyup","ref","node","target","currentTarget","tabIndex","onFocus","createPortal","Loader","abrupt","hidden","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","Avatar","squircle","avatarRef","isMissing","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","drawImage","allPixels","getImageData","hasAlpha","pixel","i","length","classList","add","clearRect","Link","forwardRef","routerLocation","useLocation","hash","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","encodeURIComponent","join","pathname","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","Menu","menuRef","_jsxs","instanceRef","openTrigger","direction","overflow","gap","shift","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","EmojiText","emojis","indexOf","regex","RegExp","shortcode","elements","split","word","emoji","staticUrl","srcset","NameText","showAvatar","showAcct","short","acct","avatar","avatarStatic","displayName","username","_","acct1","acct2","match","trimmedUsername","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","localeCompare","sensitivity","preventDefault","_Fragment","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","Intl","DateTimeFormat","RelativeTime","datetime","format","date","dateStr","setDateStr","raf","update","str","now","diff","year","twitter","toDate","fromNow","cancelAnimationFrame","toISOString","_localeMatch","args","localeMatch","locales","resolvedOptions","locale","navigator","languages","getTranslateTargetLanguage","fromSettings","translationTargetLanguages","code","localeCode2Text","DisplayNames","type","of","emojifyText","forEach","fauxDiv","whitelistLinkClasses","_enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","links","usernames","innerText","hasChildren","u","d","push","slice","textNodes","extractTextNodes","html","nodeValue","nodes","childNodes","replaceWith","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","niceDateTime","hideTime","formatOpts","Date","currentYear","getFullYear","day","hour","minute","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","internal","showActivity","showStats","accountInstance","hideDisplayName","statusesCount","lastStatusAt","fields","note","verifiedField","f","verifiedAt","supportsCache","supports","feature","version","range","features","satisfies","includePrerelease","loose","throttle","pThrottle","limit","interval","LINGVA_INSTANCES","currentLingvaInstance","_lingvaTranslate","source","pRetry","fetchCall","res","fetch","ok","then","provider","translation","detectedSourceLanguage","detectedSource","retries","log","TRANSLATED_MAX_AGE","lingvaTranslate","forceTranslate","sourceLanguage","onTranslate","mini","uiState","setUIState","targetLang","setTranslatedContent","pronunciationContent","detailsRef","translatedContent","sourceLangText","targetLangText","apiSourceLang","error","detectedLangText","setDetectedLang","pronunciation","_a","query","setPronunciationContent","detectedLang","lang","dir","sourceLanguages","name","draftsStore","createStore","drafts","val","getMany","keys","delMany","clear","db","visibilityIconsMap","public","unlisted","private","direct","Poll","readOnly","votePoll","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","marginLeft","FilterContext","createContext","_isFiltered","filtered","filterContext","appliedFilters","hasContext","context","isHidden","some","filterAction","action","filterTitles","titles","titlesStr","isFiltered","filteredItem","item","currentAccountID","isSelf","filterState","filteredItems","items","htmlContentLength","isMastodonLinkMaybe","root","documentElement","getComputedStyle","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","safeBoundingBoxPadding","paddings","CSS","addEventListener","passive","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","isSafari","userAgent","dataAltLabel","AltBadge","MEDIA_CAPTION_LIMIT","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalBackgroundPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","containerProps","useMemo","isVideoMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","mode","backgroundImage","backgroundSize","QuickPinchZoom","backgroundColor","backgroundPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","controls","autoplay","MenuLink","FocusableItem","closeMenu","detail","INLINE_TRANSLATE_LIMIT","fetchAccount","v1","$select","memFetchAccount","visibilityText","isIOS","ontouchstart","Status","withinContext","contentTextWeight","enableTranslate","_forceTranslate","onMediaClick","quoted","onStatusLinkClick","sameInstance","sKey","snapStates","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","language","editedAt","card","createdAt","reblog","_deleted","useContext","filterInfo","debugHover","FilteredStatus","createdAtDate","inReplyToAccountRef","editedAtDate","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","prefs","showSpoiler","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showReactions","setShowReactions","readMoreText","statusRef","spoilerContentRef","contentRef","mediaContainerRef","textWeight","editedDateText","mediaNoDesc","replyToStatus","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","favouriteStatus","differentLanguage","MenuHeader","StatusMenuItems","createdDateText","MenuDivider","done","replyStatus","setForceTranslate","nicePostURL","editStatus","cachedStatus","setIsContextMenuOpen","contextMenuProps","setContextMenuProps","showContextMenu","bindLongPressContext","useLongPress","clientX","clientY","isContextMenuOpen","hotkeysEnabled","fRef","rRef","dRef","confirmBoostStatus","bRef","showMultipleMediaCaptions","displayedMediaAttachments","captionChildren","attachments","canBoost","indices","nodeRef","contextMenuRef","portal","url2","result","removeAttribute","unfurlMastodonLink","QuoteStatuses","newPoll","pollResponse","TranslationBlock","MultipleMediaFigure","Card","StatusButton","checked","bookmarkStatus","count","EditedAtModal","ReactionsModal","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","blurhashImage","setCardStatusURL","imageData","blurhashPixels","w","putImageData","videoID","fetchStatusHistory","editHistory","setEditHistory","editHistory2","REACTIONS_LIMIT","setAccounts","showMore","setShowMore","reblogIterator","favouriteIterator","fetchAccounts","firstLoad","favouriteResults","reblogResults","rebloggedBy","theAccount","_types","InView","favourite","onChange","inView","setButtonTitle","buttonTitle","iconAlt","hours","seconds","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapshot","padStart","remoteInstanceFetch","theURL","resolve","urlObj","statusMatch","masto2","urlAfterHash","mastoSearchFetch","results","handleFulfill","instance2","selfURL","handleCatch","host","restPath","isReblog","setShowPeek","bindLongPressPeek","filterTitleStr","threshold","captureEvent","statusPeekRef","actualStatusID","statusPeekText","showPeek","uniqueQuotes","quotes","q","arr","q2","level","supportedLanguagesMap","supportedLanguages","reduce","common","native","expiryOptions","expirySeconds","values","oneDay","expiresInFromExpiresAt","delta","getTime","role","windowMargin","observer","IntersectionObserver","entry","isIntersecting","boundingClientRect","innerWidth","observe","DEFAULT_LANG","urlRegexObj","urlRegex","flags","usernameRegex","urlPlaceholder","countableText","inputText","Compose","draftStatus","standalone","hasOpener","UID","currentAccountInfo","charactersReservedPerUrl","maxCharacters","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxExpiration","maxOptions","minExpiration","spoilerTextRef","textareaRef","prevLanguage","setMediaAttachments","setLanguage","oninputTextarea","focusTextarea","dispatchEvent","visibility2","language2","sensitive2","allMentions","setSensitive","poll2","expiresIn","statusSource","mediaAttachments2","setVisibility","setPoll","composablePoll","beforeUnloadCopy","hasMediaAttachments","canClose","hasOnlyAcct","confirmClose","hasIDMediaAttachments","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","escDownRef","capture","modals","hasModal","hasOnlyComposer","draftKey","equal","backgroundDraft","prevBackgroundDraft","handleItems","i2","file","files","state","allowedFiles","updatedAt","debug","mediaFiles","handleDragover","showEmoji2Picker","setShowEmoji2Picker","topSupportedLanguages","restSupportedLanguages","restLanguages","topLanguages","codeA","commonA","codeB","createObjectURL","commonB","dataTransfer","removeEventListener","passData","sort","opener","formRef","pointerEvents","opacity","mediaPromises","params2","removeNullUndefined","hasNoDescriptions","params","reason","e2","media_attributes","in_reply_to_id","Textarea","newAttachments","j","fileID","required","v2","onInput","accept","CharCountMeter","CustomEmojisModal","emojiWithSpace","textarea","selectionStart","selectionEnd","clientHeight","offset","performSearch","textareaProps","onSelect","handleChange","textExpanderRef","provide","newText","filterShortcodes","customEmojis","text2","textExpanderTextRef","displayNameWithEmoji","encodeHTML","cur","matched","handleValue","searchResults","input","handleCommited","total","lastLine","preSpaces","bullet","postSpaces","anything","number","newBullet","pos","setText","autoResizeTextarea","charCount","leftChars","autoCorrect","rows","onRemove","setRangeText","setSelectionRange","suffixType","showModal","descTextarea","setDescription","debouncedOnDescriptionChange","MediaAttachment","setShowModal","supportsEdit","placeholder","searchTerm","aLower","splice","bStartsWith","bLower","bContains","aStartsWith","b","aContains","char","obj","customEmojisList","setCustomEmojis","emojisCat","othersCat","bothStartWith","category","recentlyUsedCustomEmojis","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","VITE_CLIENT_NAME","CLIENT_NAME","useTitle","setTitle","hasPaths","paths","matchPath"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/show-toast.js","../../src/utils/mem.js","../../src/utils/pmem.js","../../src/utils/states.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/icon.jsx","../../src/components/modal.jsx","../../src/components/loader.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/components/menu-confirm.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/utils/visibility-icons-map.js","../../src/components/poll.jsx","../../src/utils/filter-context.js","../../src/utils/filters.jsx","../../src/utils/html-content-length.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\r\n\r\nexport function getAccount(id) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.info.id === id) || accounts[0];\r\n}\r\n\r\nexport function getAccountByAccessToken(accessToken) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  return accounts.find((a) => a.accessToken === accessToken);\r\n}\r\n\r\nexport function getCurrentAccount() {\r\n  if (!window.__IGNORE_GET_ACCOUNT_ERROR__) {\r\n    // Track down getCurrentAccount() calls before account-based states are initialized\r\n    console.error('getCurrentAccount() called before states are initialized');\r\n    if (import.meta.env.DEV) console.trace();\r\n  }\r\n  const currentAccount = store.session.get('currentAccount');\r\n  const account = getAccount(currentAccount);\r\n  return account;\r\n}\r\n\r\nexport function getCurrentAccountNS() {\r\n  const account = getCurrentAccount();\r\n  const {\r\n    instanceURL,\r\n    info: { id },\r\n  } = account;\r\n  return `${id}@${instanceURL}`;\r\n}\r\n\r\nexport function saveAccount(account) {\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === account.info.id);\r\n  if (acc) {\r\n    acc.info = account.info;\r\n    acc.instanceURL = account.instanceURL;\r\n    acc.accessToken = account.accessToken;\r\n    acc.vapidKey = account.vapidKey;\r\n  } else {\r\n    accounts.push(account);\r\n  }\r\n  store.local.setJSON('accounts', accounts);\r\n  store.session.set('currentAccount', account.info.id);\r\n}\r\n\r\nexport function updateAccount(accountInfo) {\r\n  // Only update if displayName or avatar or avatar_static is different\r\n  const accounts = store.local.getJSON('accounts') || [];\r\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\r\n  if (acc) {\r\n    if (\r\n      acc.info.displayName !== accountInfo.displayName ||\r\n      acc.info.avatar !== accountInfo.avatar ||\r\n      acc.info.avatar_static !== accountInfo.avatar_static\r\n    ) {\r\n      acc.info = {\r\n        ...acc.info,\r\n        ...accountInfo,\r\n      };\r\n      store.local.setJSON('accounts', accounts);\r\n    }\r\n  }\r\n}\r\n\r\nlet currentInstance = null;\r\nexport function getCurrentInstance() {\r\n  if (currentInstance) return currentInstance;\r\n  try {\r\n    const account = getCurrentAccount();\r\n    const instances = store.local.getJSON('instances');\r\n    const instance = account.instanceURL.toLowerCase();\r\n    return (currentInstance = instances[instance]);\r\n  } catch (e) {\r\n    console.error(e);\r\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\r\n    // Temporary fix for corrupted data\r\n    store.local.del('instances');\r\n    location.reload();\r\n    return {};\r\n  }\r\n}\r\n\r\n// Massage these instance configurations to match the Mastodon API\r\n// - Pleroma\r\nfunction getInstanceConfiguration(instance) {\r\n  const {\r\n    configuration,\r\n    maxMediaAttachments,\r\n    maxTootChars,\r\n    pleroma,\r\n    pollLimits,\r\n  } = instance;\r\n\r\n  const statuses = configuration?.statuses || {};\r\n  if (maxMediaAttachments) {\r\n    statuses.maxMediaAttachments ??= maxMediaAttachments;\r\n  }\r\n  if (maxTootChars) {\r\n    statuses.maxCharacters ??= maxTootChars;\r\n  }\r\n\r\n  const polls = configuration?.polls || {};\r\n  if (pollLimits) {\r\n    polls.maxCharactersPerOption ??= pollLimits.maxOptionChars;\r\n    polls.maxExpiration ??= pollLimits.maxExpiration;\r\n    polls.maxOptions ??= pollLimits.maxOptions;\r\n    polls.minExpiration ??= pollLimits.minExpiration;\r\n  }\r\n\r\n  return {\r\n    ...configuration,\r\n    statuses,\r\n    polls,\r\n  };\r\n}\r\n\r\nexport function getCurrentInstanceConfiguration() {\r\n  const instance = getCurrentInstance();\r\n  return getInstanceConfiguration(instance);\r\n}\r\n","import { getCurrentAccountNS } from './store-utils';\r\n\r\nconst local = {\r\n  get: (key) => {\r\n    try {\r\n      return localStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(local.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return localStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return local.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return localStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nconst session = {\r\n  get: (key) => {\r\n    try {\r\n      return sessionStorage.getItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  getJSON: (key) => {\r\n    try {\r\n      return JSON.parse(session.get(key));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      return sessionStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  setJSON: (key, value) => {\r\n    try {\r\n      return session.set(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      return sessionStorage.removeItem(key);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\n// Store with account namespace (id@domain.tld) <- uses id, not username\r\nconst account = {\r\n  get: (key) => {\r\n    try {\r\n      return local.getJSON(key)[getCurrentAccountNS()];\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      data[getCurrentAccountNS()] = value;\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n  del: (key) => {\r\n    try {\r\n      const data = local.getJSON(key) || {};\r\n      delete data[getCurrentAccountNS()];\r\n      return local.setJSON(key, data);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default { local, session, account };\r\n","import { createRestAPIClient, createStreamingAPIClient } from 'masto';\r\n\r\nimport store from './store';\r\nimport {\r\n  getAccount,\r\n  getAccountByAccessToken,\r\n  getCurrentAccount,\r\n  saveAccount,\r\n} from './store-utils';\r\n\r\n// Default *fallback* instance\r\nconst DEFAULT_INSTANCE = 'mastodon.social';\r\n\r\n// Per-instance masto instance\r\n// Useful when only one account is logged in\r\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\r\n// E.g. apis['mastodon.social']\r\nconst apis = {};\r\n\r\n// Per-account masto instance\r\n// Note: There can be many accounts per instance\r\n// Useful when multiple accounts are logged in or when certain actions require a specific account\r\n// Just in case if I need this one day.\r\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\r\nconst accountApis = {};\r\nwindow.__ACCOUNT_APIS__ = accountApis;\r\n\r\n// Current account masto instance\r\nlet currentAccountApi;\r\n\r\nexport function initClient({ instance, accessToken }) {\r\n  if (/^https?:\\/\\//.test(instance)) {\r\n    instance = instance\r\n      .replace(/^https?:\\/\\//, '')\r\n      .replace(/\\/+$/, '')\r\n      .toLowerCase();\r\n  }\r\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\r\n\r\n  const masto = createRestAPIClient({\r\n    url,\r\n    accessToken, // Can be null\r\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\r\n  });\r\n\r\n  const client = {\r\n    masto,\r\n    instance,\r\n    accessToken,\r\n  };\r\n  apis[instance] = client;\r\n  if (!accountApis[instance]) accountApis[instance] = {};\r\n  if (accessToken) accountApis[instance][accessToken] = client;\r\n\r\n  return client;\r\n}\r\n\r\n// Get the instance information\r\n// The config is needed for composing\r\nexport async function initInstance(client, instance) {\r\n  console.log('INIT INSTANCE', client, instance);\r\n  const { masto, accessToken } = client;\r\n  // Request v2, fallback to v1 if fail\r\n  let info;\r\n  try {\r\n    info = await masto.v2.instance.fetch();\r\n  } catch (e) {}\r\n  if (!info) {\r\n    try {\r\n      info = await masto.v1.instance.fetch();\r\n    } catch (e) {}\r\n  }\r\n  if (!info) return;\r\n  console.log(info);\r\n  const {\r\n    // v1\r\n    uri,\r\n    urls: { streamingApi } = {},\r\n    // v2\r\n    domain,\r\n    configuration: { urls: { streaming } = {} } = {},\r\n  } = info;\r\n  const instances = store.local.getJSON('instances') || {};\r\n  if (uri || domain) {\r\n    instances[\r\n      (domain || uri)\r\n        .replace(/^https?:\\/\\//, '')\r\n        .replace(/\\/+$/, '')\r\n        .toLowerCase()\r\n    ] = info;\r\n  }\r\n  if (instance) {\r\n    instances[instance.toLowerCase()] = info;\r\n  }\r\n  store.local.setJSON('instances', instances);\r\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\r\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\r\n  const supportsWebSocket = 'WebSocket' in window;\r\n  if (supportsWebSocket && (streamingApi || streaming)) {\r\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\r\n    // masto.config.props.streamingApiUrl = streaming || streamingApi;\r\n    // Legacy masto.ws\r\n    const streamClient = createStreamingAPIClient({\r\n      streamingApiUrl: streaming || streamingApi,\r\n      accessToken,\r\n      implementation: WebSocket,\r\n    });\r\n    client.streaming = streamClient;\r\n    // masto.ws = streamClient;\r\n    console.log('🎏 Streaming API client:', client);\r\n  }\r\n}\r\n\r\n// Get the account information and store it\r\nexport async function initAccount(client, instance, accessToken, vapidKey) {\r\n  const { masto } = client;\r\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\r\n\r\n  console.log('CURRENTACCOUNT SET', mastoAccount.id);\r\n  store.session.set('currentAccount', mastoAccount.id);\r\n\r\n  saveAccount({\r\n    info: mastoAccount,\r\n    instanceURL: instance.toLowerCase(),\r\n    accessToken,\r\n    vapidKey,\r\n  });\r\n}\r\n\r\n// Get preferences\r\nexport async function initPreferences(client) {\r\n  try {\r\n    const { masto } = client;\r\n    const preferences = await masto.v1.preferences.fetch();\r\n    store.account.set('preferences', preferences);\r\n  } catch (e) {\r\n    // silently fail\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n// Get the masto instance\r\n// If accountID is provided, get the masto instance for that account\r\nexport function api({ instance, accessToken, accountID, account } = {}) {\r\n  // Always lowercase and trim the instance\r\n  if (instance) {\r\n    instance = instance.toLowerCase().trim();\r\n  }\r\n\r\n  // If instance and accessToken are provided, get the masto instance for that account\r\n  if (instance && accessToken) {\r\n    const client =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    const { masto, streaming } = client;\r\n    return {\r\n      masto,\r\n      streaming,\r\n      client,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  if (accessToken) {\r\n    // If only accessToken is provided, get the masto instance for that accessToken\r\n    console.log('X 1', accountApis);\r\n    for (const instance in accountApis) {\r\n      if (accountApis[instance][accessToken]) {\r\n        console.log('X 2', accountApis, instance, accessToken);\r\n        const client = accountApis[instance][accessToken];\r\n        const { masto, streaming } = client;\r\n        return {\r\n          masto,\r\n          streaming,\r\n          client,\r\n          authenticated: true,\r\n          instance,\r\n        };\r\n      } else {\r\n        console.log('X 3', accountApis, instance, accessToken);\r\n        const account = getAccountByAccessToken(accessToken);\r\n        if (account) {\r\n          const accessToken = account.accessToken;\r\n          const instance = account.instanceURL.toLowerCase().trim();\r\n          const client = initClient({ instance, accessToken });\r\n          const { masto, streaming } = client;\r\n          return {\r\n            masto,\r\n            streaming,\r\n            client,\r\n            authenticated: true,\r\n            instance,\r\n          };\r\n        } else {\r\n          throw new Error(`Access token not found`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If account is provided, get the masto instance for that account\r\n  if (account || accountID) {\r\n    account = account || getAccount(accountID);\r\n    if (account) {\r\n      const accessToken = account.accessToken;\r\n      const instance = account.instanceURL.toLowerCase().trim();\r\n      const client =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      const { masto, streaming } = client;\r\n      return {\r\n        masto,\r\n        streaming,\r\n        client,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    } else {\r\n      throw new Error(`Account ${accountID} not found`);\r\n    }\r\n  }\r\n\r\n  const currentAccount = getCurrentAccount();\r\n\r\n  // If only instance is provided, get the masto instance for that instance\r\n  if (instance) {\r\n    if (currentAccountApi?.instance === instance) {\r\n      return {\r\n        masto: currentAccountApi.masto,\r\n        streaming: currentAccountApi.streaming,\r\n        client: currentAccountApi,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    if (currentAccount?.instanceURL === instance) {\r\n      const { accessToken } = currentAccount;\r\n      currentAccountApi =\r\n        accountApis[instance]?.[accessToken] ||\r\n        initClient({ instance, accessToken });\r\n      return {\r\n        masto: currentAccountApi.masto,\r\n        streaming: currentAccountApi.streaming,\r\n        client: currentAccountApi,\r\n        authenticated: true,\r\n        instance,\r\n      };\r\n    }\r\n\r\n    const client = apis[instance] || initClient({ instance });\r\n    const { masto, streaming, accessToken } = client;\r\n    return {\r\n      masto,\r\n      streaming,\r\n      client,\r\n      authenticated: !!accessToken,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided, get the masto instance for the current account\r\n  if (currentAccountApi) {\r\n    return {\r\n      masto: currentAccountApi.masto,\r\n      streaming: currentAccountApi.streaming,\r\n      client: currentAccountApi,\r\n      authenticated: true,\r\n      instance: currentAccountApi.instance,\r\n    };\r\n  }\r\n  if (currentAccount) {\r\n    const { accessToken, instanceURL: instance } = currentAccount;\r\n    currentAccountApi =\r\n      accountApis[instance]?.[accessToken] ||\r\n      initClient({ instance, accessToken });\r\n    return {\r\n      masto: currentAccountApi.masto,\r\n      streaming: currentAccountApi.streaming,\r\n      client: currentAccountApi,\r\n      authenticated: true,\r\n      instance,\r\n    };\r\n  }\r\n\r\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\r\n  const client =\r\n    apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE });\r\n  const { masto, streaming } = client;\r\n  return {\r\n    masto,\r\n    streaming,\r\n    client,\r\n    authenticated: false,\r\n    instance: DEFAULT_INSTANCE,\r\n  };\r\n}\r\n\r\nwindow.__API__ = {\r\n  currentAccountApi,\r\n  apis,\r\n  accountApis,\r\n};\r\n","import Toastify from 'toastify-js';\r\n\r\nwindow._showToast = showToast;\r\n\r\nfunction showToast(props) {\r\n  if (typeof props === 'string') {\r\n    props = { text: props };\r\n  }\r\n  const { onClick, delay, ...rest } = props;\r\n  const toast = Toastify({\r\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\r\n    gravity: 'bottom',\r\n    position: 'center',\r\n    ...rest,\r\n    onClick: () => {\r\n      onClick?.(toast); // Pass in the object itself!\r\n    },\r\n  });\r\n  if (delay) {\r\n    setTimeout(() => {\r\n      toast.showToast();\r\n    }, delay);\r\n  } else {\r\n    toast.showToast();\r\n  }\r\n}\r\n\r\nexport default showToast;\r\n","import moize from 'moize';\r\n\r\nwindow._moize = moize;\r\n\r\nexport default function mem(fn, opts = {}) {\r\n  return moize(fn, { ...opts, maxSize: 50, isDeepEqual: true });\r\n}\r\n","import mem from './mem';\r\n\r\nexport default function pmem(fn, opts = {}) {\r\n  return mem(fn, { isPromise: true, ...opts });\r\n}\r\n","import { proxy, subscribe } from 'valtio';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport { api } from './api';\r\nimport pmem from './pmem';\r\nimport store from './store';\r\n\r\nconst states = proxy({\r\n  appVersion: {},\r\n  // history: [],\r\n  prevLocation: null,\r\n  currentLocation: null,\r\n  statuses: {},\r\n  statusThreadNumber: {},\r\n  home: [],\r\n  // specialHome: [],\r\n  homeNew: [],\r\n  homeLast: null, // Last item in 'home' list\r\n  homeLastFetchTime: null,\r\n  notifications: [],\r\n  notificationsLast: null, // Last read notification\r\n  notificationsNew: [],\r\n  notificationsShowNew: false,\r\n  notificationsLastFetchTime: null,\r\n  reloadStatusPage: 0,\r\n  reloadGenericAccounts: {\r\n    id: null,\r\n    counter: 0,\r\n  },\r\n  spoilers: {},\r\n  scrollPositions: {},\r\n  unfurledLinks: {},\r\n  statusQuotes: {},\r\n  accounts: {},\r\n  routeNotification: null,\r\n  // Modals\r\n  showCompose: false,\r\n  showSettings: false,\r\n  showAccount: false,\r\n  showAccounts: false,\r\n  showDrafts: false,\r\n  showMediaModal: false,\r\n  showShortcutsSettings: false,\r\n  showKeyboardShortcutsHelp: false,\r\n  showGenericAccounts: false,\r\n  showMediaAlt: false,\r\n  // Shortcuts\r\n  shortcuts: [],\r\n  // Settings\r\n  settings: {\r\n    autoRefresh: false,\r\n    shortcutsViewMode: null,\r\n    shortcutsColumnsMode: false,\r\n    boostsCarousel: true,\r\n    contentTranslation: true,\r\n    contentTranslationTargetLanguage: null,\r\n    contentTranslationHideLanguages: [],\r\n    contentTranslationAutoInline: false,\r\n    cloakMode: false,\r\n  },\r\n});\r\n\r\nexport default states;\r\n\r\nexport function initStates() {\r\n  // init all account based states\r\n  // all keys that uses store.account.get() should be initialized here\r\n  states.notificationsLast = store.account.get('notificationsLast') || null;\r\n  states.shortcuts = store.account.get('shortcuts') ?? [];\r\n  states.settings.autoRefresh =\r\n    store.account.get('settings-autoRefresh') ?? false;\r\n  states.settings.shortcutsViewMode =\r\n    store.account.get('settings-shortcutsViewMode') ?? null;\r\n  if (store.account.get('settings-shortcutsColumnsMode')) {\r\n    states.settings.shortcutsColumnsMode = true;\r\n  }\r\n  states.settings.boostsCarousel =\r\n    store.account.get('settings-boostsCarousel') ?? true;\r\n  states.settings.contentTranslation =\r\n    store.account.get('settings-contentTranslation') ?? true;\r\n  states.settings.contentTranslationTargetLanguage =\r\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\r\n  states.settings.contentTranslationHideLanguages =\r\n    store.account.get('settings-contentTranslationHideLanguages') || [];\r\n  states.settings.contentTranslationAutoInline =\r\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\r\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\r\n}\r\n\r\nsubscribeKey(states, 'notificationsLast', (v) => {\r\n  console.log('CHANGE', v);\r\n  store.account.set('notificationsLast', states.notificationsLast);\r\n});\r\nsubscribe(states, (changes) => {\r\n  console.debug('STATES change', changes);\r\n  for (const [action, path, value, prevValue] of changes) {\r\n    if (path.join('.') === 'settings.autoRefresh') {\r\n      store.account.set('settings-autoRefresh', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.boostsCarousel') {\r\n      store.account.set('settings-boostsCarousel', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.shortcutsViewMode') {\r\n      store.account.set('settings-shortcutsViewMode', value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslation') {\r\n      store.account.set('settings-contentTranslation', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\r\n      store.account.set('settings-contentTranslationAutoInline', !!value);\r\n    }\r\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\r\n      console.log('SET', value);\r\n      store.account.set('settings-contentTranslationTargetLanguage', value);\r\n    }\r\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\r\n      store.account.set(\r\n        'settings-contentTranslationHideLanguages',\r\n        states.settings.contentTranslationHideLanguages,\r\n      );\r\n    }\r\n    if (path?.[0] === 'shortcuts') {\r\n      store.account.set('shortcuts', states.shortcuts);\r\n    }\r\n    if (path.join('.') === 'settings.cloakMode') {\r\n      store.account.set('settings-cloakMode', !!value);\r\n    }\r\n  }\r\n});\r\n\r\nexport function hideAllModals() {\r\n  states.showCompose = false;\r\n  states.showSettings = false;\r\n  states.showAccount = false;\r\n  states.showAccounts = false;\r\n  states.showDrafts = false;\r\n  states.showMediaModal = false;\r\n  states.showShortcutsSettings = false;\r\n  states.showKeyboardShortcutsHelp = false;\r\n  states.showGenericAccounts = false;\r\n  states.showMediaAlt = false;\r\n}\r\n\r\nexport function statusKey(id, instance) {\r\n  if (!id) return;\r\n  return instance ? `${instance}/${id}` : id;\r\n}\r\n\r\nexport function getStatus(statusID, instance) {\r\n  if (instance) {\r\n    const key = statusKey(statusID, instance);\r\n    return states.statuses[key];\r\n  }\r\n  return states.statuses[statusID];\r\n}\r\n\r\nexport function saveStatus(status, instance, opts) {\r\n  if (typeof instance === 'object') {\r\n    opts = instance;\r\n    instance = null;\r\n  }\r\n  const { override, skipThreading } = Object.assign(\r\n    { override: true, skipThreading: false },\r\n    opts,\r\n  );\r\n  if (!status) return;\r\n  const oldStatus = getStatus(status.id, instance);\r\n  if (!override && oldStatus) return;\r\n  const key = statusKey(status.id, instance);\r\n  if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\r\n  // if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\r\n  states.statuses[key] = status;\r\n  if (status.reblog) {\r\n    const key = statusKey(status.reblog.id, instance);\r\n    states.statuses[key] = status.reblog;\r\n  }\r\n\r\n  // THREAD TRAVERSER\r\n  if (!skipThreading) {\r\n    requestAnimationFrame(() => {\r\n      threadifyStatus(status, instance);\r\n      if (status.reblog) {\r\n        threadifyStatus(status.reblog, instance);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function threadifyStatus(status, propInstance) {\r\n  const { masto, instance } = api({ instance: propInstance });\r\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\r\n  let fetchIndex = 0;\r\n  async function traverse(status, index = 0) {\r\n    const { inReplyToId, inReplyToAccountId } = status;\r\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\r\n      return [status];\r\n    }\r\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\r\n      throw 'Not a thread';\r\n      // Possibly thread of replies by multiple people?\r\n    }\r\n    const key = statusKey(inReplyToId, instance);\r\n    let prevStatus = states.statuses[key];\r\n    if (!prevStatus) {\r\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\r\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\r\n      // prevStatus = await masto.v1.statuses.$.select(inReplyToId).fetch();\r\n      prevStatus = await fetchStatus(inReplyToId, masto);\r\n      saveStatus(prevStatus, instance, { skipThreading: true });\r\n    }\r\n    // Prepend so that first status in thread will be index 0\r\n    return [...(await traverse(prevStatus, ++index)), status];\r\n  }\r\n  return traverse(status)\r\n    .then((statuses) => {\r\n      if (statuses.length > 1) {\r\n        console.debug('THREAD', statuses);\r\n        statuses.forEach((status, index) => {\r\n          const key = statusKey(status.id, instance);\r\n          states.statusThreadNumber[key] = index + 1;\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e, status);\r\n    });\r\n}\r\n\r\nconst fetchStatus = pmem((statusID, masto) => {\r\n  return masto.v1.statuses.$select(statusID).fetch();\r\n});\r\n","import { useEffect, useRef } from 'preact/hooks';\r\n\r\nfunction useInterval(fn, delay, deps, immediate) {\r\n  const savedCallback = useRef(fn);\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn, deps]);\r\n\r\n  useEffect(() => {\r\n    if (!immediate || delay === null || delay === false) return;\r\n    savedCallback.current();\r\n  }, [immediate]);\r\n\r\n  useEffect(() => {\r\n    if (delay === null || delay === false) return;\r\n    const tick = () => savedCallback.current();\r\n    const id = setInterval(tick, delay);\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default function openCompose(opts) {\r\n  const url = new URL('/compose/', window.location);\r\n  const { width: screenWidth, height: screenHeight } = window.screen;\r\n  const left = Math.max(0, (screenWidth - 600) / 2);\r\n  const top = Math.max(0, (screenHeight - 450) / 2);\r\n  const width = Math.min(screenWidth, 600);\r\n  const height = Math.min(screenHeight, 450);\r\n  const winUID = opts?.uid || Math.random();\r\n  const newWin = window.open(\r\n    url,\r\n    'compose' + winUID,\r\n    `width=${width},height=${height},left=${left},top=${top}`,\r\n  );\r\n\r\n  if (newWin) {\r\n    // if (masto) {\r\n    //   newWin.masto = masto;\r\n    // }\r\n\r\n    newWin.__COMPOSE__ = opts;\r\n  } else {\r\n    alert('Looks like your browser is blocking popups.');\r\n  }\r\n\r\n  return newWin;\r\n}\r\n","import { memo } from 'preact/compat';\r\nimport { useEffect, useState } from 'preact/hooks';\r\n\r\nconst SIZES = {\r\n  s: 12,\r\n  m: 16,\r\n  l: 20,\r\n  xl: 24,\r\n  xxl: 32,\r\n};\r\n\r\nexport const ICONS = {\r\n  x: () => import('@iconify-icons/mingcute/close-line'),\r\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\r\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\r\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\r\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\r\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\r\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\r\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\r\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\r\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\r\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\r\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\r\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\r\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\r\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\r\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\r\n  message: () => import('@iconify-icons/mingcute/mail-line'),\r\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\r\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\r\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\r\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\r\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\r\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\r\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\r\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\r\n  at: () => import('@iconify-icons/mingcute/at-line'),\r\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\r\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\r\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\r\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\r\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\r\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\r\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\r\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\r\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\r\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\r\n  reply: [\r\n    () => import('@iconify-icons/mingcute/share-forward-line'),\r\n    '180deg',\r\n    'horizontal',\r\n  ],\r\n  thread: () => import('@iconify-icons/mingcute/route-line'),\r\n  group: () => import('@iconify-icons/mingcute/group-line'),\r\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\r\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\r\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\r\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\r\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\r\n  info: () => import('@iconify-icons/mingcute/information-line'),\r\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\r\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\r\n  following: () => import('@iconify-icons/mingcute/walk-line'),\r\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\r\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\r\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\r\n  history: () => import('@iconify-icons/mingcute/history-line'),\r\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\r\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\r\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\r\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\r\n  play: () => import('@iconify-icons/mingcute/play-fill'),\r\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\r\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\r\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\r\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n  unblock: [\r\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\r\n    '180deg',\r\n  ],\r\n  flag: () => import('@iconify-icons/mingcute/flag-4-line'),\r\n  time: () => import('@iconify-icons/mingcute/time-line'),\r\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\r\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\r\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\r\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\r\n  react: () => import('@iconify-icons/mingcute/react-line'),\r\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\r\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\r\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\r\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\r\n  round: () => import('@iconify-icons/mingcute/round-fill'),\r\n  'arrow-up-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\r\n  'arrow-down-circle': () =>\r\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\r\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\r\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\r\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\r\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\r\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\r\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\r\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\r\n};\r\n\r\nfunction Icon({\r\n  icon,\r\n  size = 'm',\r\n  alt,\r\n  title,\r\n  class: className = '',\r\n  style = {},\r\n}) {\r\n  if (!icon) return null;\r\n\r\n  const iconSize = SIZES[size];\r\n  let iconBlock = ICONS[icon];\r\n  let rotate, flip;\r\n  if (Array.isArray(iconBlock)) {\r\n    [iconBlock, rotate, flip] = iconBlock;\r\n  }\r\n\r\n  const [iconData, setIconData] = useState(null);\r\n  useEffect(async () => {\r\n    const icon = await iconBlock();\r\n    setIconData(icon.default);\r\n  }, [iconBlock]);\r\n\r\n  return (\r\n    <span\r\n      class={`icon ${className}`}\r\n      title={title || alt}\r\n      style={{\r\n        width: `${iconSize}px`,\r\n        height: `${iconSize}px`,\r\n        ...style,\r\n      }}\r\n    >\r\n      {iconData && (\r\n        <svg\r\n          width={iconSize}\r\n          height={iconSize}\r\n          viewBox={`0 0 ${iconData.width} ${iconData.height}`}\r\n          dangerouslySetInnerHTML={{ __html: iconData.body }}\r\n          style={{\r\n            transform: `${rotate ? `rotate(${rotate})` : ''} ${\r\n              flip ? `scaleX(-1)` : ''\r\n            }`,\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default memo(Icon);\r\n","import './modal.css';\r\n\r\nimport { createPortal } from 'preact/compat';\r\nimport { useEffect, useRef } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\nconst $modalContainer = document.getElementById('modal-container');\r\n\r\nfunction Modal({ children, onClose, onClick, class: className }) {\r\n  if (!children) return null;\r\n\r\n  const modalRef = useRef();\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\r\n      if (focusElement) {\r\n        focusElement.focus();\r\n      }\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const escRef = useHotkeys(\r\n    'esc',\r\n    () => {\r\n      setTimeout(() => {\r\n        onClose?.();\r\n      }, 0);\r\n    },\r\n    {\r\n      enabled: !!onClose,\r\n      // Using keyup and setTimeout above\r\n      // This will run \"later\" to prevent clash with esc handlers from other components\r\n      keydown: false,\r\n      keyup: true,\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  const Modal = (\r\n    <div\r\n      ref={(node) => {\r\n        modalRef.current = node;\r\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\r\n      }}\r\n      className={className}\r\n      onClick={(e) => {\r\n        onClick?.(e);\r\n        if (e.target === e.currentTarget) {\r\n          onClose?.(e);\r\n        }\r\n      }}\r\n      tabIndex=\"-1\"\r\n      onFocus={(e) => {\r\n        if (e.target === e.currentTarget) {\r\n          modalRef.current?.querySelector?.('[tabindex=\"-1\"]')?.focus?.();\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return createPortal(Modal, $modalContainer);\r\n\r\n  // return createPortal(children, $modalContainer);\r\n}\r\n\r\nexport default Modal;\r\n","import './loader.css';\r\n\r\nfunction Loader({ abrupt, hidden, ...props }) {\r\n  return (\r\n    <span\r\n      {...props}\r\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\r\n        hidden ? 'hidden' : ''\r\n      }`}\r\n    >\r\n      <span class=\"loader\" />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import './avatar.css';\r\n\r\nimport { useRef } from 'preact/hooks';\r\n\r\nimport mem from '../utils/mem';\r\n\r\nconst SIZES = {\r\n  s: 16,\r\n  m: 20,\r\n  l: 24,\r\n  xl: 32,\r\n  xxl: 50,\r\n  xxxl: 64,\r\n};\r\n\r\nconst alphaCache = {};\r\n\r\nconst canvas = window.OffscreenCanvas\r\n  ? new OffscreenCanvas(1, 1)\r\n  : document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d', {\r\n  willReadFrequently: true,\r\n});\r\n\r\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\r\n  size = SIZES[size] || size || SIZES.m;\r\n  const avatarRef = useRef();\r\n  const isMissing = /missing\\.png$/.test(url);\r\n  return (\r\n    <span\r\n      ref={avatarRef}\r\n      class={`avatar ${squircle ? 'squircle' : ''} ${\r\n        alphaCache[url] ? 'has-alpha' : ''\r\n      }`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n      }}\r\n      title={alt}\r\n      {...props}\r\n    >\r\n      {!!url && (\r\n        <img\r\n          src={url}\r\n          width={size}\r\n          height={size}\r\n          alt={alt}\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n          crossOrigin={\r\n            alphaCache[url] === undefined && !isMissing\r\n              ? 'anonymous'\r\n              : undefined\r\n          }\r\n          onError={(e) => {\r\n            if (e.target.crossOrigin) {\r\n              e.target.crossOrigin = null;\r\n              e.target.src = url;\r\n            }\r\n          }}\r\n          onLoad={(e) => {\r\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\r\n            if (alphaCache[url] !== undefined) return;\r\n            if (isMissing) return;\r\n            try {\r\n              // Check if image has alpha channel\r\n              const { width, height } = e.target;\r\n              if (canvas.width !== width) canvas.width = width;\r\n              if (canvas.height !== height) canvas.height = height;\r\n              ctx.drawImage(e.target, 0, 0);\r\n              const allPixels = ctx.getImageData(0, 0, width, height);\r\n              // At least 10% of pixels have alpha <= 128\r\n              const hasAlpha =\r\n                allPixels.data.filter((pixel, i) => i % 4 === 3 && pixel <= 128)\r\n                  .length /\r\n                  (allPixels.data.length / 4) >\r\n                0.1;\r\n              if (hasAlpha) {\r\n                // console.log('hasAlpha', hasAlpha, allPixels.data);\r\n                avatarRef.current.classList.add('has-alpha');\r\n              }\r\n              alphaCache[url] = hasAlpha;\r\n              ctx.clearRect(0, 0, width, height);\r\n            } catch (e) {\r\n              // Silent fail\r\n              alphaCache[url] = false;\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default mem(Avatar);\r\n","import { forwardRef } from 'preact/compat';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport states from '../utils/states';\r\n\r\n/* NOTES\r\n   =====\r\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\r\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\r\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\r\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\r\n*/\r\n\r\nconst Link = forwardRef((props, ref) => {\r\n  let routerLocation;\r\n  try {\r\n    routerLocation = useLocation();\r\n  } catch (e) {}\r\n  let hash = (location.hash || '').replace(/^#/, '').trim();\r\n  if (hash === '') hash = '/';\r\n  const { to, ...restProps } = props;\r\n\r\n  // Handle encodeURIComponent of searchParams values\r\n  if (!!hash && hash !== '/' && hash.includes('?')) {\r\n    const parsedHash = new URL(hash, location.origin); // Fake base URL\r\n    if (parsedHash.searchParams.size) {\r\n      const searchParamsStr = Array.from(parsedHash.searchParams.entries())\r\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n        .join('&');\r\n      hash = parsedHash.pathname + '?' + searchParamsStr;\r\n    }\r\n  }\r\n\r\n  const isActive = hash === to || decodeURIComponent(hash) === to;\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      href={`#${to}`}\r\n      {...restProps}\r\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\r\n      onClick={(e) => {\r\n        if (e.currentTarget?.parentNode?.closest('a')) {\r\n          // If this <a> is nested inside another <a>\r\n          e.stopPropagation();\r\n        }\r\n        if (routerLocation) states.prevLocation = routerLocation;\r\n        props.onClick?.(e);\r\n      }}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Link;\r\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\r\nimport { cloneElement } from 'preact';\r\nimport { useRef } from 'preact/hooks';\r\n\r\nfunction MenuConfirm({\r\n  subMenu = false,\r\n  confirm = true,\r\n  confirmLabel,\r\n  menuItemClassName,\r\n  menuFooter,\r\n  ...props\r\n}) {\r\n  const { children, onClick, ...restProps } = props;\r\n  if (!confirm) {\r\n    if (subMenu) return <MenuItem {...props} />;\r\n    if (onClick) {\r\n      return cloneElement(children, {\r\n        onClick,\r\n      });\r\n    }\r\n    return children;\r\n  }\r\n  const Parent = subMenu ? SubMenu : Menu;\r\n  const menuRef = useRef();\r\n  return (\r\n    <Parent\r\n      instanceRef={menuRef}\r\n      openTrigger=\"clickOnly\"\r\n      direction=\"bottom\"\r\n      overflow=\"auto\"\r\n      gap={-8}\r\n      shift={8}\r\n      menuClassName=\"menu-emphasized\"\r\n      {...restProps}\r\n      menuButton={subMenu ? undefined : children}\r\n      label={subMenu ? children : undefined}\r\n      // Test fix for bug; submenus not opening on Android\r\n      itemProps={{\r\n        onPointerMove: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n        onPointerLeave: (e) => {\r\n          if (e.pointerType === 'touch') {\r\n            menuRef.current?.openMenu?.();\r\n          }\r\n        },\r\n      }}\r\n    >\r\n      <MenuItem className={menuItemClassName} onClick={onClick}>\r\n        {confirmLabel}\r\n      </MenuItem>\r\n      {menuFooter}\r\n    </Parent>\r\n  );\r\n}\r\n\r\nexport default MenuConfirm;\r\n","function EmojiText({ text, emojis }) {\r\n  if (!text) return '';\r\n  if (!emojis?.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  const regex = new RegExp(\r\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\r\n    'g',\r\n  );\r\n  const elements = text.split(regex).map((word) => {\r\n    const emoji = emojis.find((e) => e.shortcode === word);\r\n    if (emoji) {\r\n      const { url, staticUrl } = emoji;\r\n      return (\r\n        <picture>\r\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\r\n          <img\r\n            key={word}\r\n            src={url}\r\n            alt={word}\r\n            class=\"shortcode-emoji emoji\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n          />\r\n        </picture>\r\n      );\r\n    }\r\n    return word;\r\n  });\r\n  return elements;\r\n}\r\n\r\nexport default EmojiText;\r\n","import './name-text.css';\r\n\r\nimport { memo } from 'preact/compat';\r\n\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\n\r\nfunction NameText({\r\n  account,\r\n  instance,\r\n  showAvatar,\r\n  showAcct,\r\n  short,\r\n  external,\r\n  onClick,\r\n}) {\r\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\r\n    account;\r\n  let { username } = account;\r\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n\r\n  const trimmedUsername = username.toLowerCase().trim();\r\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\r\n  const shortenedDisplayName = trimmedDisplayName\r\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\r\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\r\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\r\n    /[^a-z0-9]/gi,\r\n    '',\r\n  ); // Remove non-alphanumeric characters\r\n\r\n  if (\r\n    !short &&\r\n    (trimmedUsername === trimmedDisplayName ||\r\n      trimmedUsername === shortenedDisplayName ||\r\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\r\n      trimmedUsername.localeCompare?.(shortenedDisplayName, 'en', {\r\n        sensitivity: 'base',\r\n      }) === 0)\r\n  ) {\r\n    username = null;\r\n  }\r\n\r\n  return (\r\n    <a\r\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (onClick) return onClick(e);\r\n        states.showAccount = {\r\n          account,\r\n          instance,\r\n        };\r\n      }}\r\n    >\r\n      {showAvatar && (\r\n        <>\r\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\r\n        </>\r\n      )}\r\n      {displayName && !short ? (\r\n        <>\r\n          <b>\r\n            <EmojiText text={displayName} emojis={emojis} />\r\n          </b>\r\n          {!showAcct && username && (\r\n            <>\r\n              {' '}\r\n              <i>@{username}</i>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : short ? (\r\n        <i>{username}</i>\r\n      ) : (\r\n        <b>{username}</b>\r\n      )}\r\n      {showAcct && (\r\n        <>\r\n          <br />\r\n          <i>\r\n            @{acct1}\r\n            <span class=\"ib\">{acct2}</span>\r\n          </i>\r\n        </>\r\n      )}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default memo(NameText);\r\n","// Twitter-style relative time component\r\n// Seconds = 1s\r\n// Minutes = 1m\r\n// Hours = 1h\r\n// Days = 1d\r\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\r\nimport dayjs from 'dayjs';\r\nimport dayjsTwitter from 'dayjs-twitter';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useEffect, useState } from 'preact/hooks';\r\n\r\ndayjs.extend(dayjsTwitter);\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(relativeTime);\r\n\r\nconst dtf = new Intl.DateTimeFormat();\r\n\r\nexport default function RelativeTime({ datetime, format }) {\r\n  if (!datetime) return null;\r\n  const date = dayjs(datetime);\r\n  const [dateStr, setDateStr] = useState('');\r\n\r\n  useEffect(() => {\r\n    let timer, raf;\r\n    const update = () => {\r\n      raf = requestAnimationFrame(() => {\r\n        let str;\r\n        if (format === 'micro') {\r\n          // If date <= 1 day ago or day is within this year\r\n          const now = dayjs();\r\n          const dayDiff = now.diff(date, 'day');\r\n          if (dayDiff <= 1 || now.year() === date.year()) {\r\n            str = date.twitter();\r\n          } else {\r\n            str = dtf.format(date.toDate());\r\n          }\r\n        } else {\r\n          str = date.fromNow();\r\n        }\r\n        setDateStr(str);\r\n\r\n        timer = setTimeout(update, 30_000);\r\n      });\r\n    };\r\n    raf = requestAnimationFrame(update);\r\n    return () => {\r\n      clearTimeout(timer);\r\n      cancelAnimationFrame(raf);\r\n    };\r\n  }, [date]);\r\n\r\n  return (\r\n    <time datetime={date.toISOString()} title={date.format('LLLL')}>\r\n      {dateStr}\r\n    </time>\r\n  );\r\n}\r\n","import { match } from '@formatjs/intl-localematcher';\r\n\r\nimport mem from './mem';\r\n\r\nfunction _localeMatch(...args) {\r\n  // Wrap in try/catch because localeMatcher throws on invalid locales\r\n  try {\r\n    return match(...args);\r\n  } catch (e) {\r\n    const defaultLocale = args[2];\r\n    return defaultLocale || false;\r\n  }\r\n}\r\nconst localeMatch = mem(_localeMatch);\r\n\r\nexport default localeMatch;\r\n","import translationTargetLanguages from '../data/lingva-target-languages';\r\n\r\nimport localeMatch from './locale-match';\r\nimport states from './states';\r\n\r\nconst locales = [\r\n  new Intl.DateTimeFormat().resolvedOptions().locale,\r\n  ...navigator.languages,\r\n];\r\n\r\nfunction getTranslateTargetLanguage(fromSettings = false) {\r\n  if (fromSettings) {\r\n    const { contentTranslationTargetLanguage } = states.settings;\r\n    if (contentTranslationTargetLanguage) {\r\n      return contentTranslationTargetLanguage;\r\n    }\r\n  }\r\n  return localeMatch(\r\n    locales,\r\n    translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\r\n    'en',\r\n  );\r\n}\r\n\r\nexport default getTranslateTargetLanguage;\r\n","export default function localeCode2Text(code) {\r\n  try {\r\n    return new Intl.DisplayNames(navigator.languages, {\r\n      type: 'language',\r\n    }).of(code);\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n","function emojifyText(text, emojis = []) {\r\n  if (!text) return '';\r\n  if (!emojis.length) return text;\r\n  if (text.indexOf(':') === -1) return text;\r\n  // Replace shortcodes in text with emoji\r\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\r\n  emojis.forEach((emoji) => {\r\n    const { shortcode, staticUrl, url } = emoji;\r\n    text = text.replace(\r\n      new RegExp(`:${shortcode}:`, 'g'),\r\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\r\n    );\r\n  });\r\n  // console.log(text, emojis);\r\n  return text;\r\n}\r\n\r\nexport default emojifyText;\r\n","import emojifyText from './emojify-text';\r\nimport mem from './mem';\r\n\r\nconst fauxDiv = document.createElement('div');\r\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\r\n\r\nfunction _enhanceContent(content, opts = {}) {\r\n  const { emojis, postEnhanceDOM = () => {} } = opts;\r\n  let enhancedContent = content;\r\n  const dom = document.createElement('div');\r\n  dom.innerHTML = enhancedContent;\r\n  const hasLink = /<a/i.test(enhancedContent);\r\n  const hasCodeBlock = enhancedContent.indexOf('```') !== -1;\r\n\r\n  if (hasLink) {\r\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\r\n    // E.g. `note` in `account`\r\n    const noTargetBlankLinks = Array.from(\r\n      dom.querySelectorAll('a:not([target=\"_blank\"])'),\r\n    );\r\n    noTargetBlankLinks.forEach((link) => {\r\n      link.setAttribute('target', '_blank');\r\n    });\r\n\r\n    // Remove all classes except `u-url`, `mention`, `hashtag`\r\n    const links = Array.from(dom.querySelectorAll('a[class]'));\r\n    links.forEach((link) => {\r\n      Array.from(link.classList).forEach((c) => {\r\n        if (!whitelistLinkClasses.includes(c)) {\r\n          link.classList.remove(c);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Add 'has-url-text' to all links that contains a url\r\n  if (hasLink) {\r\n    const links = Array.from(dom.querySelectorAll('a[href]'));\r\n    links.forEach((link) => {\r\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\r\n        link.classList.add('has-url-text');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Spanify un-spanned mentions\r\n  if (hasLink) {\r\n    const links = Array.from(dom.querySelectorAll('a[href]'));\r\n    const usernames = [];\r\n    links.forEach((link) => {\r\n      const text = link.innerText.trim();\r\n      const hasChildren = link.querySelector('*');\r\n      // If text looks like @username@domain, then it's a mention\r\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\r\n        // Only show @username\r\n        const [_, username, domain] = text.split('@');\r\n        if (!hasChildren) {\r\n          if (\r\n            !usernames.find(([u]) => u === username) ||\r\n            usernames.find(([u, d]) => u === username && d === domain)\r\n          ) {\r\n            link.innerHTML = `@<span>${username}</span>`;\r\n            usernames.push([username, domain]);\r\n          } else {\r\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\r\n          }\r\n        }\r\n        link.classList.add('mention');\r\n      }\r\n      // If text looks like #hashtag, then it's a hashtag\r\n      if (/^#[^#]+$/g.test(text)) {\r\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\r\n        link.classList.add('mention', 'hashtag');\r\n      }\r\n    });\r\n  }\r\n\r\n  // EMOJIS\r\n  // ======\r\n  // Convert :shortcode: to <img />\r\n  let textNodes;\r\n  if (enhancedContent.indexOf(':') !== -1) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (emojis) {\r\n        html = emojifyText(html, emojis);\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // CODE BLOCKS\r\n  // ===========\r\n  // Convert ```code``` to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const blocks = Array.from(dom.querySelectorAll('p')).filter((p) =>\r\n      /^```[^]+```$/g.test(p.innerText.trim()),\r\n    );\r\n    blocks.forEach((block) => {\r\n      const pre = document.createElement('pre');\r\n      // Replace <br /> with newlines\r\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\r\n      block.replaceWith(pre);\r\n    });\r\n  }\r\n\r\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\r\n  if (hasCodeBlock) {\r\n    const paragraphs = Array.from(dom.querySelectorAll('p'));\r\n    // Filter out paragraphs with ``` in beginning only\r\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\r\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\r\n    codeBlocks.forEach((block) => {\r\n      const nextParagraphs = [block];\r\n      let hasCodeBlock = false;\r\n      let currentBlock = block;\r\n      while (currentBlock.nextElementSibling) {\r\n        const next = currentBlock.nextElementSibling;\r\n        if (next && next.tagName === 'P') {\r\n          if (/```$/g.test(next.innerText)) {\r\n            nextParagraphs.push(next);\r\n            hasCodeBlock = true;\r\n            break;\r\n          } else {\r\n            nextParagraphs.push(next);\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n        currentBlock = next;\r\n      }\r\n      if (hasCodeBlock) {\r\n        const pre = document.createElement('pre');\r\n        nextParagraphs.forEach((p) => {\r\n          // Replace <br /> with newlines\r\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\r\n        });\r\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\r\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\r\n        block.replaceWith(pre);\r\n        nextParagraphs.forEach((p) => p.remove());\r\n      }\r\n    });\r\n  }\r\n\r\n  // INLINE CODE\r\n  // ===========\r\n  // Convert `code` to <code>code</code>\r\n  if (enhancedContent.indexOf('`') !== -1) {\r\n    textNodes = extractTextNodes(dom);\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/`[^`]+`/g.test(html)) {\r\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // TWITTER USERNAMES\r\n  // =================\r\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\r\n  if (/twitter\\.com/i.test(enhancedContent)) {\r\n    textNodes = extractTextNodes(dom, {\r\n      rejectFilter: ['A'],\r\n    });\r\n    textNodes.forEach((node) => {\r\n      let html = node.nodeValue\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\r\n        html = html.replaceAll(\r\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\r\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\r\n        );\r\n      }\r\n      fauxDiv.innerHTML = html;\r\n      const nodes = Array.from(fauxDiv.childNodes);\r\n      node.replaceWith(...nodes);\r\n    });\r\n  }\r\n\r\n  // HASHTAG STUFFING\r\n  // ================\r\n  // Get the <p> that contains a lot of hashtags, add a class to it\r\n  if (enhancedContent.indexOf('#') !== -1) {\r\n    let prevIndex = null;\r\n    const hashtagStuffedParagraphs = Array.from(\r\n      dom.querySelectorAll('p'),\r\n    ).filter((p, index) => {\r\n      let hashtagCount = 0;\r\n      for (let i = 0; i < p.childNodes.length; i++) {\r\n        const node = p.childNodes[i];\r\n\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n          const text = node.textContent.trim();\r\n          if (text !== '') {\r\n            return false;\r\n          }\r\n        } else if (node.tagName === 'BR') {\r\n          // Ignore <br />\r\n        } else if (node.tagName === 'A') {\r\n          const linkText = node.textContent.trim();\r\n          if (!linkText || !linkText.startsWith('#')) {\r\n            return false;\r\n          } else {\r\n            hashtagCount++;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      // Only consider \"stuffing\" if:\r\n      // - there are more than 3 hashtags\r\n      // - there are more than 1 hashtag in adjacent paragraphs\r\n      if (hashtagCount > 3) {\r\n        prevIndex = index;\r\n        return true;\r\n      }\r\n      if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\r\n        prevIndex = index;\r\n        return true;\r\n      }\r\n    });\r\n    if (hashtagStuffedParagraphs?.length) {\r\n      hashtagStuffedParagraphs.forEach((p) => {\r\n        p.classList.add('hashtag-stuffing');\r\n        p.title = p.innerText;\r\n      });\r\n    }\r\n  }\r\n\r\n  if (postEnhanceDOM) {\r\n    postEnhanceDOM(dom); // mutate dom\r\n  }\r\n\r\n  enhancedContent = dom.innerHTML;\r\n\r\n  return enhancedContent;\r\n}\r\nconst enhanceContent = mem(_enhanceContent);\r\n\r\nconst defaultRejectFilter = [\r\n  // Document metadata\r\n  'STYLE',\r\n  // Image and multimedia\r\n  'IMG',\r\n  'VIDEO',\r\n  'AUDIO',\r\n  'AREA',\r\n  'MAP',\r\n  'TRACK',\r\n  // Embedded content\r\n  'EMBED',\r\n  'IFRAME',\r\n  'OBJECT',\r\n  'PICTURE',\r\n  'PORTAL',\r\n  'SOURCE',\r\n  // SVG and MathML\r\n  'SVG',\r\n  'MATH',\r\n  // Scripting\r\n  'CANVAS',\r\n  'NOSCRIPT',\r\n  'SCRIPT',\r\n  // Forms\r\n  'INPUT',\r\n  'OPTION',\r\n  'TEXTAREA',\r\n  // Web Components\r\n  'SLOT',\r\n  'TEMPLATE',\r\n];\r\nconst defaultRejectFilterMap = Object.fromEntries(\r\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\r\n);\r\nfunction extractTextNodes(dom, opts = {}) {\r\n  const textNodes = [];\r\n  const walk = document.createTreeWalker(\r\n    dom,\r\n    NodeFilter.SHOW_TEXT,\r\n    {\r\n      acceptNode(node) {\r\n        if (defaultRejectFilterMap[node.parentNode.nodeName]) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        if (\r\n          opts.rejectFilter &&\r\n          opts.rejectFilter.includes(node.parentNode.nodeName)\r\n        ) {\r\n          return NodeFilter.FILTER_REJECT;\r\n        }\r\n        return NodeFilter.FILTER_ACCEPT;\r\n      },\r\n    },\r\n    false,\r\n  );\r\n  let node;\r\n  while ((node = walk.nextNode())) {\r\n    textNodes.push(node);\r\n  }\r\n  return textNodes;\r\n}\r\n\r\nexport default enhanceContent;\r\n","import mem from './mem';\r\n\r\nconst div = document.createElement('div');\r\nfunction getHTMLText(html) {\r\n  if (!html) return '';\r\n  div.innerHTML = html\r\n    .replace(/<\\/p>/g, '</p>\\n\\n')\r\n    .replace(/<\\/li>/g, '</li>\\n');\r\n  div.querySelectorAll('br').forEach((br) => {\r\n    br.replaceWith('\\n');\r\n  });\r\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\r\n}\r\n\r\nexport default mem(getHTMLText);\r\n","import states from './states';\r\n\r\nfunction handleContentLinks(opts) {\r\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\r\n  return (e) => {\r\n    let { target } = e;\r\n    target = target.closest('a');\r\n    if (!target) return;\r\n\r\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\r\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\r\n      return;\r\n    }\r\n\r\n    const prevText = target.previousSibling?.textContent;\r\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\r\n    const textStartsWithAt = target.innerText.startsWith('@');\r\n    if (\r\n      (target.classList.contains('u-url') && textStartsWithAt) ||\r\n      (textBeforeLinkIsAt && !textStartsWithAt)\r\n    ) {\r\n      const targetText = (\r\n        target.querySelector('span') || target\r\n      ).innerText.trim();\r\n      const username = targetText.replace(/^@/, '');\r\n      const url = target.getAttribute('href');\r\n      const mention = mentions.find(\r\n        (mention) =>\r\n          mention.username === username ||\r\n          mention.acct === username ||\r\n          mention.url === url,\r\n      );\r\n      if (mention) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.showAccount = {\r\n          account: mention.acct,\r\n          instance,\r\n        };\r\n      } else if (!/^http/i.test(targetText)) {\r\n        console.log('mention not found', targetText);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const href = target.getAttribute('href');\r\n        states.showAccount = {\r\n          account: href,\r\n          instance,\r\n        };\r\n      }\r\n    } else if (!previewMode) {\r\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\r\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const tag = target.innerText.replace(/^#/, '').trim();\r\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\r\n        console.log({ hashURL });\r\n        location.hash = hashURL;\r\n      } else if (\r\n        states.unfurledLinks[target.href]?.url &&\r\n        statusURL !== target.href\r\n      ) {\r\n        // If unfurled AND not self-referential\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        states.prevLocation = {\r\n          pathname: location.hash.replace(/^#/, ''),\r\n        };\r\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default handleContentLinks;\r\n","const { locale } = new Intl.DateTimeFormat().resolvedOptions();\r\n\r\nfunction niceDateTime(date, { hideTime, formatOpts } = {}) {\r\n  if (!(date instanceof Date)) {\r\n    date = new Date(date);\r\n  }\r\n  const currentYear = new Date().getFullYear();\r\n  const dateText = Intl.DateTimeFormat(locale, {\r\n    // Show year if not current year\r\n    year: date.getFullYear() === currentYear ? undefined : 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    // Hide time if requested\r\n    hour: hideTime ? undefined : 'numeric',\r\n    minute: hideTime ? undefined : 'numeric',\r\n    ...formatOpts,\r\n  }).format(date);\r\n  return dateText;\r\n}\r\n\r\nexport default niceDateTime;\r\n","const { locale } = Intl.NumberFormat().resolvedOptions();\r\nconst shortenNumber = Intl.NumberFormat(locale, {\r\n  notation: 'compact',\r\n}).format;\r\nexport default shortenNumber;\r\n","import './account-block.css';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport states from '../utils/states';\r\n\r\nimport Avatar from './avatar';\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\n\r\nfunction AccountBlock({\r\n  skeleton,\r\n  account,\r\n  avatarSize = 'xl',\r\n  instance,\r\n  external,\r\n  internal,\r\n  onClick,\r\n  showActivity = false,\r\n  showStats = false,\r\n  accountInstance,\r\n  hideDisplayName = false,\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"account-block skeleton\">\r\n        <Avatar size={avatarSize} />\r\n        <span>\r\n          <b>████████</b>\r\n          <br />\r\n          <span class=\"account-block-acct\">@██████</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const {\r\n    id,\r\n    acct,\r\n    avatar,\r\n    avatarStatic,\r\n    displayName,\r\n    username,\r\n    emojis,\r\n    url,\r\n    statusesCount,\r\n    lastStatusAt,\r\n    bot,\r\n    fields,\r\n    note,\r\n    group,\r\n  } = account;\r\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\r\n  if (accountInstance) {\r\n    acct2 = `@${accountInstance}`;\r\n  }\r\n\r\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\r\n\r\n  return (\r\n    <a\r\n      class=\"account-block\"\r\n      href={url}\r\n      target={external ? '_blank' : null}\r\n      title={`@${acct}`}\r\n      onClick={(e) => {\r\n        if (external) return;\r\n        e.preventDefault();\r\n        if (onClick) return onClick(e);\r\n        if (internal) {\r\n          // navigate(`/${instance}/a/${id}`);\r\n          location.hash = `/${instance}/a/${id}`;\r\n        } else {\r\n          states.showAccount = {\r\n            account,\r\n            instance,\r\n          };\r\n        }\r\n      }}\r\n    >\r\n      <Avatar url={avatar} size={avatarSize} squircle={bot} />\r\n      <span class=\"account-block-content\">\r\n        {!hideDisplayName && (\r\n          <>\r\n            {displayName ? (\r\n              <b>\r\n                <EmojiText text={displayName} emojis={emojis} />\r\n              </b>\r\n            ) : (\r\n              <b>{username}</b>\r\n            )}\r\n            <br />\r\n          </>\r\n        )}\r\n        <span class=\"account-block-acct\">\r\n          @{acct1}\r\n          <wbr />\r\n          {acct2}\r\n        </span>\r\n        {showActivity && (\r\n          <>\r\n            <br />\r\n            <small class=\"last-status-at insignificant\">\r\n              Posts: {statusesCount}\r\n              {!!lastStatusAt && (\r\n                <>\r\n                  {' '}\r\n                  &middot; Last posted:{' '}\r\n                  {niceDateTime(lastStatusAt, {\r\n                    hideTime: true,\r\n                  })}\r\n                </>\r\n              )}\r\n            </small>\r\n          </>\r\n        )}\r\n        {showStats && (\r\n          <div class=\"account-block-stats\">\r\n            <div\r\n              class=\"short-desc\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: enhanceContent(note, { emojis }),\r\n              }}\r\n            />\r\n            {bot && (\r\n              <>\r\n                <span class=\"tag\">\r\n                  <Icon icon=\"bot\" /> Automated\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!group && (\r\n              <>\r\n                <span class=\"tag\">\r\n                  <Icon icon=\"group\" /> Group\r\n                </span>\r\n              </>\r\n            )}\r\n            {!!verifiedField && (\r\n              <span class=\"verified-field ib\">\r\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\r\n                <span\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: enhanceContent(verifiedField.value, { emojis }),\r\n                  }}\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </span>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default AccountBlock;\r\n","import { satisfies } from 'compare-versions';\r\n\r\nimport features from '../data/features.json';\r\n\r\nimport { getCurrentInstance } from './store-utils';\r\n\r\nconst supportsCache = {};\r\n\r\nfunction supports(feature) {\r\n  try {\r\n    const { version, domain } = getCurrentInstance();\r\n    const key = `${domain}-${feature}`;\r\n    if (supportsCache[key]) return supportsCache[key];\r\n    const range = features[feature];\r\n    if (!range) return false;\r\n    return (supportsCache[key] = satisfies(version, range, {\r\n      includePrerelease: true,\r\n      loose: true,\r\n    }));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default supports;\r\n","import './translation-block.css';\r\n\r\nimport pRetry from 'p-retry';\r\nimport pThrottle from 'p-throttle';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\n\r\nimport sourceLanguages from '../data/lingva-source-languages';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport localeCode2Text from '../utils/localeCode2Text';\r\nimport pmem from '../utils/pmem';\r\n\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\n\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 2000,\r\n});\r\n\r\n// Using other API instances instead of lingva.ml because of this bug (slashes don't work):\r\n// https://github.com/thedaviddelta/lingva-translate/issues/68\r\nconst LINGVA_INSTANCES = [\r\n  'lingva.lunar.icu',\r\n  'lingva.garudalinux.org',\r\n  'translate.plausibility.cloud',\r\n];\r\nlet currentLingvaInstance = 0;\r\n\r\nfunction _lingvaTranslate(text, source, target) {\r\n  console.log('TRANSLATE', text, source, target);\r\n  const fetchCall = () => {\r\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\r\n    return fetch(\r\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\r\n        text,\r\n      )}`,\r\n    )\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(res.statusText);\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        return {\r\n          provider: 'lingva',\r\n          content: res.translation,\r\n          detectedSourceLanguage: res.info?.detectedSource,\r\n          info: res.info,\r\n        };\r\n      });\r\n  };\r\n  return pRetry(fetchCall, {\r\n    retries: 3,\r\n    onFailedAttempt: (e) => {\r\n      currentLingvaInstance =\r\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\r\n      console.log(\r\n        'Retrying translation with another instance',\r\n        currentLingvaInstance,\r\n      );\r\n    },\r\n  });\r\n  // return masto.v1.statuses.$select(id).translate({\r\n  //   lang: DEFAULT_LANG,\r\n  // });\r\n}\r\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\r\nconst lingvaTranslate = pmem(_lingvaTranslate, {\r\n  maxAge: TRANSLATED_MAX_AGE,\r\n});\r\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\r\n  // I know, this is double-layered memoization\r\n  maxAge: TRANSLATED_MAX_AGE,\r\n});\r\n\r\nfunction TranslationBlock({\r\n  forceTranslate,\r\n  sourceLanguage,\r\n  onTranslate,\r\n  text = '',\r\n  mini,\r\n}) {\r\n  const targetLang = getTranslateTargetLanguage(true);\r\n  const [uiState, setUIState] = useState('default');\r\n  const [pronunciationContent, setPronunciationContent] = useState(null);\r\n  const [translatedContent, setTranslatedContent] = useState(null);\r\n  const [detectedLang, setDetectedLang] = useState(null);\r\n  const detailsRef = useRef();\r\n\r\n  const sourceLangText = sourceLanguage\r\n    ? localeCode2Text(sourceLanguage)\r\n    : null;\r\n  const targetLangText = localeCode2Text(targetLang);\r\n  const apiSourceLang = useRef('auto');\r\n\r\n  if (!onTranslate) {\r\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\r\n  }\r\n\r\n  const translate = async () => {\r\n    setUIState('loading');\r\n    try {\r\n      const { content, detectedSourceLanguage, provider, error, ...props } =\r\n        await onTranslate(text, apiSourceLang.current, targetLang);\r\n      if (content) {\r\n        if (detectedSourceLanguage) {\r\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\r\n          setDetectedLang(detectedLangText);\r\n        }\r\n        if (provider === 'lingva') {\r\n          const pronunciation = props?.info?.pronunciation?.query;\r\n          if (pronunciation) {\r\n            setPronunciationContent(pronunciation);\r\n          }\r\n        }\r\n        setTranslatedContent(content);\r\n        setUIState('default');\r\n        if (!mini && content.trim() !== text.trim()) {\r\n          detailsRef.current.open = true;\r\n          detailsRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'nearest',\r\n          });\r\n        }\r\n      } else {\r\n        if (error) console.error(error);\r\n        setUIState('error');\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      setUIState('error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (forceTranslate) {\r\n      translate();\r\n    }\r\n  }, [forceTranslate]);\r\n\r\n  if (mini) {\r\n    if (\r\n      !!translatedContent &&\r\n      translatedContent.trim() !== text.trim() &&\r\n      detectedLang !== targetLangText\r\n    ) {\r\n      return (\r\n        <div class=\"shazam-container\">\r\n          <div class=\"shazam-container-inner\">\r\n            <div class=\"status-translation-block-mini\">\r\n              <Icon\r\n                icon=\"translate\"\r\n                alt={`Auto-translated from ${sourceLangText}`}\r\n              />\r\n              <output\r\n                lang={targetLang}\r\n                dir=\"auto\"\r\n                title={pronunciationContent || ''}\r\n              >\r\n                {translatedContent}\r\n              </output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      class=\"status-translation-block\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <details ref={detailsRef}>\r\n        <summary>\r\n          <button\r\n            type=\"button\"\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              detailsRef.current.open = !detailsRef.current.open;\r\n              if (uiState === 'loading') return;\r\n              if (!translatedContent) translate();\r\n            }}\r\n          >\r\n            <Icon icon=\"translate\" />{' '}\r\n            <span>\r\n              {uiState === 'loading'\r\n                ? 'Translating…'\r\n                : sourceLanguage && sourceLangText && !detectedLang\r\n                ? `Translate from ${sourceLangText}`\r\n                : `Translate`}\r\n            </span>\r\n          </button>\r\n        </summary>\r\n        <div class=\"translated-block\">\r\n          <div class=\"translation-info insignificant\">\r\n            <select\r\n              class=\"translated-source-select\"\r\n              disabled={uiState === 'loading'}\r\n              onChange={(e) => {\r\n                apiSourceLang.current = e.target.value;\r\n                translate();\r\n              }}\r\n            >\r\n              {sourceLanguages.map((l) => (\r\n                <option value={l.code}>\r\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\r\n                </option>\r\n              ))}\r\n            </select>{' '}\r\n            <span>→ {targetLangText}</span>\r\n            <Loader abrupt hidden={uiState !== 'loading'} />\r\n          </div>\r\n          {uiState === 'error' ? (\r\n            <p class=\"ui-state\">Failed to translate</p>\r\n          ) : (\r\n            !!translatedContent && (\r\n              <>\r\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\r\n                  {translatedContent}\r\n                </output>\r\n                {!!pronunciationContent && (\r\n                  <output\r\n                    class=\"translated-pronunciation-content\"\r\n                    tabIndex={-1}\r\n                    onClick={(e) => {\r\n                      e.target.classList.toggle('expand');\r\n                    }}\r\n                  >\r\n                    {pronunciationContent}\r\n                  </output>\r\n                )}\r\n              </>\r\n            )\r\n          )}\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslationBlock;\r\n","import {\r\n  clear,\r\n  createStore,\r\n  del,\r\n  delMany,\r\n  get,\r\n  getMany,\r\n  keys,\r\n  set,\r\n} from 'idb-keyval';\r\n\r\nconst draftsStore = createStore('drafts-db', 'drafts-store');\r\n\r\n// Add additonal `draftsStore` parameter to all methods\r\n\r\nconst drafts = {\r\n  set: (key, val) => set(key, val, draftsStore),\r\n  get: (key) => get(key, draftsStore),\r\n  getMany: (keys) => getMany(keys, draftsStore),\r\n  del: (key) => del(key, draftsStore),\r\n  delMany: (keys) => delMany(keys, draftsStore),\r\n  clear: () => clear(draftsStore),\r\n  keys: () => keys(draftsStore),\r\n};\r\n\r\nexport default {\r\n  drafts,\r\n};\r\n","export default {\r\n  public: 'earth',\r\n  unlisted: 'group',\r\n  private: 'lock',\r\n  direct: 'message',\r\n};\r\n","import { useState } from 'preact/hooks';\r\n\r\nimport shortenNumber from '../utils/shorten-number';\r\n\r\nimport EmojiText from './emoji-text';\r\nimport Icon from './icon';\r\nimport RelativeTime from './relative-time';\r\n\r\nexport default function Poll({\r\n  poll,\r\n  lang,\r\n  readOnly,\r\n  refresh = () => {},\r\n  votePoll = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const {\r\n    expired,\r\n    expiresAt,\r\n    id,\r\n    multiple,\r\n    options,\r\n    ownVotes,\r\n    voted,\r\n    votersCount,\r\n    votesCount,\r\n    emojis,\r\n  } = poll;\r\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\r\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\r\n  // https://stackoverflow.com/a/56718027/20838\r\n  // useEffect(() => {\r\n  //   let timeout;\r\n  //   if (!expired && expiresAtDate) {\r\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\r\n  //     if (ms > 0) {\r\n  //       timeout = setTimeout(() => {\r\n  //         setUIState('loading');\r\n  //         (async () => {\r\n  //           // await refresh();\r\n  //           setUIState('default');\r\n  //         })();\r\n  //       }, ms);\r\n  //     }\r\n  //   }\r\n  //   return () => {\r\n  //     clearTimeout(timeout);\r\n  //   };\r\n  // }, [expired, expiresAtDate]);\r\n\r\n  const pollVotesCount = votersCount || votesCount;\r\n  let roundPrecision = 0;\r\n\r\n  if (pollVotesCount <= 1000) {\r\n    roundPrecision = 0;\r\n  } else if (pollVotesCount <= 10000) {\r\n    roundPrecision = 1;\r\n  } else if (pollVotesCount <= 100000) {\r\n    roundPrecision = 2;\r\n  }\r\n\r\n  const [showResults, setShowResults] = useState(false);\r\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\r\n\r\n  return (\r\n    <div\r\n      lang={lang}\r\n      dir=\"auto\"\r\n      class={`poll ${readOnly ? 'read-only' : ''} ${\r\n        uiState === 'loading' ? 'loading' : ''\r\n      }`}\r\n    >\r\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\r\n        <>\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title, votesCount: optionVotesCount } = option;\r\n              const percentage = pollVotesCount\r\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\r\n                    roundPrecision,\r\n                  )\r\n                : 0; // check if current poll choice is the leading one\r\n\r\n              const isLeading =\r\n                optionVotesCount > 0 &&\r\n                optionVotesCount ===\r\n                  Math.max(...options.map((o) => o.votesCount));\r\n              return (\r\n                <div\r\n                  key={`${i}-${title}-${optionVotesCount}`}\r\n                  class={`poll-option poll-result ${\r\n                    isLeading ? 'poll-option-leading' : ''\r\n                  }`}\r\n                  style={{\r\n                    '--percentage': `${percentage}%`,\r\n                  }}\r\n                >\r\n                  <div class=\"poll-option-title\">\r\n                    <span>\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                    {voted && ownVotes.includes(i) && (\r\n                      <>\r\n                        {' '}\r\n                        <Icon icon=\"check-circle\" />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    class=\"poll-option-votes\"\r\n                    title={`${optionVotesCount} vote${\r\n                      optionVotesCount === 1 ? '' : 's'\r\n                    }`}\r\n                  >\r\n                    {percentage}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!expired && !voted && (\r\n            <button\r\n              class=\"poll-vote-button plain2\"\r\n              disabled={uiState === 'loading'}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setShowResults(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\r\n            </button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const formData = new FormData(form);\r\n            const choices = [];\r\n            formData.forEach((value, key) => {\r\n              if (key === 'poll') {\r\n                choices.push(value);\r\n              }\r\n            });\r\n            if (!choices.length) return;\r\n            setUIState('loading');\r\n            await votePoll(choices);\r\n            setUIState('default');\r\n          }}\r\n        >\r\n          <div class=\"poll-options\">\r\n            {options.map((option, i) => {\r\n              const { title } = option;\r\n              return (\r\n                <div class=\"poll-option\">\r\n                  <label class=\"poll-label\">\r\n                    <input\r\n                      type={multiple ? 'checkbox' : 'radio'}\r\n                      name=\"poll\"\r\n                      value={i}\r\n                      disabled={uiState === 'loading'}\r\n                      readOnly={readOnly}\r\n                    />\r\n                    <span class=\"poll-option-title\">\r\n                      <EmojiText text={title} emojis={emojis} />\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!readOnly && (\r\n            <button\r\n              class=\"poll-vote-button\"\r\n              type=\"submit\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              Vote\r\n            </button>\r\n          )}\r\n        </form>\r\n      )}\r\n      <p class=\"poll-meta\">\r\n        {!expired && !readOnly && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            style={{\r\n              marginLeft: -8,\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setUIState('loading');\r\n\r\n              (async () => {\r\n                await refresh();\r\n                setUIState('default');\r\n              })();\r\n            }}\r\n            title=\"Refresh\"\r\n          >\r\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\r\n          </button>\r\n        )}\r\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain small\"\r\n            disabled={uiState === 'loading'}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setShowResults(!showResults);\r\n            }}\r\n            title={showResults ? 'Hide results' : 'Show results'}\r\n          >\r\n            <Icon\r\n              icon={showResults ? 'eye-open' : 'eye-close'}\r\n              alt={showResults ? 'Hide results' : 'Show results'}\r\n            />{' '}\r\n          </button>\r\n        )}\r\n        {!expired && !readOnly && ' '}\r\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\r\n        {votesCount === 1 ? '' : 's'}\r\n        {!!votersCount && votersCount !== votesCount && (\r\n          <>\r\n            {' '}\r\n            &bull; <span title={votersCount}>\r\n              {shortenNumber(votersCount)}\r\n            </span>{' '}\r\n            voter\r\n            {votersCount === 1 ? '' : 's'}\r\n          </>\r\n        )}{' '}\r\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\r\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\r\n      </p>{' '}\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'preact';\r\n\r\nconst FilterContext = createContext();\r\nexport default FilterContext;\r\n","import mem from './mem';\r\nimport store from './store';\r\n\r\nfunction _isFiltered(filtered, filterContext) {\r\n  if (!filtered?.length) return false;\r\n  const appliedFilters = filtered.filter((f) => {\r\n    const { filter } = f;\r\n    const hasContext = filter.context.includes(filterContext);\r\n    if (!hasContext) return false;\r\n    if (!filter.expiresAt) return hasContext;\r\n    return new Date(filter.expiresAt) > new Date();\r\n  });\r\n  if (!appliedFilters.length) return false;\r\n  const isHidden = appliedFilters.some((f) => f.filter.filterAction === 'hide');\r\n  if (isHidden)\r\n    return {\r\n      action: 'hide',\r\n    };\r\n  const isWarn = appliedFilters.some((f) => f.filter.filterAction === 'warn');\r\n  if (isWarn) {\r\n    const filterTitles = appliedFilters.map((f) => f.filter.title);\r\n    return {\r\n      action: 'warn',\r\n      titles: filterTitles,\r\n      titlesStr: filterTitles.join(' • '),\r\n    };\r\n  }\r\n  return false;\r\n}\r\nexport const isFiltered = mem(_isFiltered);\r\n\r\nexport function filteredItem(item, filterContext, currentAccountID) {\r\n  const { filtered } = item;\r\n  if (!filtered?.length) return true;\r\n  const isSelf = currentAccountID && item.account?.id === currentAccountID;\r\n  if (isSelf) return true;\r\n  const filterState = isFiltered(filtered, filterContext);\r\n  if (!filterState) return true;\r\n  if (filterState.action === 'hide') return false;\r\n  // item._filtered = filterState;\r\n  return true;\r\n}\r\nexport function filteredItems(items, filterContext) {\r\n  if (!items?.length) return [];\r\n  if (!filterContext) return items;\r\n  const currentAccountID = store.session.get('currentAccount');\r\n  return items.filter((item) =>\r\n    filteredItem(item, filterContext, currentAccountID),\r\n  );\r\n}\r\n","const div = document.createElement('div');\r\nexport default function htmlContentLength(html) {\r\n  if (!html) return 0;\r\n  div.innerHTML = html;\r\n  return div.innerText.length;\r\n}\r\n","export default function isMastodonLinkMaybe(url) {\r\n  const { pathname, hash } = new URL(url);\r\n  return (\r\n    /^\\/.*\\/\\d+$/i.test(pathname) ||\r\n    /^\\/@[^/]+\\/(statuses|posts)\\/\\w+\\/?$/i.test(pathname) || // GoToSocial, Takahe\r\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\r\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\r\n    /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) || // Pleroma\r\n    /#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(hash) // Phanpy 🫣\r\n  );\r\n}\r\n","const root = document.documentElement;\r\nconst style = getComputedStyle(root);\r\nconst defaultBoundingBoxPadding = 8;\r\n\r\nlet safeAreaInsets = [0, 0, 0, 0];\r\nfunction getSafeAreaInsets() {\r\n  // Get safe area inset variables from root\r\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\r\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\r\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\r\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\r\n  safeAreaInsets = [\r\n    // top, right, bottom, left (clockwise)\r\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\r\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\r\n  ];\r\n}\r\nrequestAnimationFrame(getSafeAreaInsets);\r\n\r\nfunction safeBoundingBoxPadding(paddings = []) {\r\n  const str = safeAreaInsets\r\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\r\n    .join(' ');\r\n  // console.log(str);\r\n  return str;\r\n}\r\n\r\n// Update safe area insets when orientation or resize\r\nif (CSS.supports('top: env(safe-area-inset-top)')) {\r\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\r\n}\r\n\r\nexport default safeBoundingBoxPadding;\r\n","import getHTMLText from './getHTMLText';\r\n\r\nfunction statusPeek(status) {\r\n  const { spoilerText, content, poll, mediaAttachments } = status;\r\n  let text = '';\r\n  if (spoilerText?.trim()) {\r\n    text += spoilerText;\r\n  } else {\r\n    text += getHTMLText(content);\r\n  }\r\n  text = text.trim();\r\n  if (poll) {\r\n    text += ' 📊';\r\n  }\r\n  if (mediaAttachments?.length) {\r\n    text +=\r\n      ' ' +\r\n      mediaAttachments\r\n        .map(\r\n          (m) =>\r\n            ({\r\n              image: '🖼️',\r\n              gifv: '🎞️',\r\n              video: '📹',\r\n              audio: '🎵',\r\n              unknown: '',\r\n            }[m.type] || ''),\r\n        )\r\n        .join('');\r\n  }\r\n  return text;\r\n}\r\n\r\nexport default statusPeek;\r\n","import { useRef } from 'preact/hooks';\r\nimport { useThrottledCallback } from 'use-debounce';\r\nimport useResizeObserver from 'use-resize-observer';\r\n\r\nexport default function useTruncated({ className = 'truncated' } = {}) {\r\n  const ref = useRef();\r\n  const onResize = useThrottledCallback(({ height }) => {\r\n    if (ref.current) {\r\n      const { scrollHeight } = ref.current;\r\n      let truncated = scrollHeight > height;\r\n      if (truncated) {\r\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\r\n        const computedHeight = parseInt(maxHeight || _height, 10);\r\n        truncated = scrollHeight > computedHeight;\r\n      }\r\n      ref.current.classList.toggle(className, truncated);\r\n    }\r\n  }, 300);\r\n  useResizeObserver({\r\n    ref,\r\n    box: 'border-box',\r\n    onResize,\r\n  });\r\n  return ref;\r\n}\r\n","import { getBlurHashAverageColor } from 'fast-blurhash';\r\nimport { Fragment } from 'preact';\r\nimport {\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\r\n\r\nimport mem from '../utils/mem';\r\nimport states from '../utils/states';\r\n\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport { formatDuration } from './status';\r\n\r\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\r\n\r\n/*\r\nMedia type\r\n===\r\nunknown = unsupported or unrecognized file type\r\nimage = Static image\r\ngifv = Looping, soundless animation\r\nvideo = Video clip\r\naudio = Audio track\r\n*/\r\n\r\nconst dataAltLabel = 'ALT';\r\nconst AltBadge = (props) => {\r\n  const { alt, lang, index, ...rest } = props;\r\n  if (!alt || !alt.trim()) return null;\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      class=\"alt-badge clickable\"\r\n      {...rest}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        states.showMediaAlt = {\r\n          alt,\r\n          lang,\r\n        };\r\n      }}\r\n      title=\"Media description\"\r\n    >\r\n      {dataAltLabel}\r\n      {!!index && <sup>{index}</sup>}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst MEDIA_CAPTION_LIMIT = 140;\r\nexport const isMediaCaptionLong = mem((caption) =>\r\n  caption?.length\r\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\r\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\r\n    : false,\r\n);\r\n\r\nfunction Media({\r\n  class: className = '',\r\n  media,\r\n  to,\r\n  lang,\r\n  showOriginal,\r\n  autoAnimate,\r\n  showCaption,\r\n  altIndex,\r\n  onClick = () => {},\r\n}) {\r\n  const {\r\n    blurhash,\r\n    description,\r\n    meta,\r\n    previewRemoteUrl,\r\n    previewUrl,\r\n    remoteUrl,\r\n    url,\r\n    type,\r\n  } = media;\r\n  const { original = {}, small, focus } = meta || {};\r\n\r\n  const width = showOriginal ? original?.width : small?.width;\r\n  const height = showOriginal ? original?.height : small?.height;\r\n  const mediaURL = showOriginal ? url : previewUrl || url;\r\n  const remoteMediaURL = showOriginal\r\n    ? remoteUrl\r\n    : previewRemoteUrl || remoteUrl;\r\n  const orientation = width >= height ? 'landscape' : 'portrait';\r\n\r\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\r\n\r\n  const videoRef = useRef();\r\n\r\n  let focalBackgroundPosition;\r\n  if (focus) {\r\n    // Convert focal point to CSS background position\r\n    // Formula from jquery-focuspoint\r\n    // x = -1, y = 1 => 0% 0%\r\n    // x = 0, y = 0 => 50% 50%\r\n    // x = 1, y = -1 => 100% 100%\r\n    const x = ((focus.x + 1) / 2) * 100;\r\n    const y = ((1 - focus.y) / 2) * 100;\r\n    focalBackgroundPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\r\n  }\r\n\r\n  const mediaRef = useRef();\r\n  const onUpdate = useCallback(({ x, y, scale }) => {\r\n    const { current: media } = mediaRef;\r\n\r\n    if (media) {\r\n      const value = make3dTransformValue({ x, y, scale });\r\n\r\n      if (scale === 1) {\r\n        media.style.removeProperty('transform');\r\n      } else {\r\n        media.style.setProperty('transform', value);\r\n      }\r\n\r\n      media.closest('.media-zoom').style.touchAction =\r\n        scale <= 1.01 ? 'pan-x' : '';\r\n    }\r\n  }, []);\r\n\r\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\r\n  const quickPinchZoomProps = {\r\n    enabled: pinchZoomEnabled,\r\n    draggableUnZoomed: false,\r\n    inertiaFriction: 0.9,\r\n    doubleTapZoomOutOnMaxScale: true,\r\n    containerProps: {\r\n      className: 'media-zoom',\r\n      style: {\r\n        overflow: 'visible',\r\n        //   width: 'inherit',\r\n        //   height: 'inherit',\r\n        //   justifyContent: 'inherit',\r\n        //   alignItems: 'inherit',\r\n        //   display: 'inherit',\r\n      },\r\n    },\r\n    onUpdate,\r\n  };\r\n\r\n  const Parent = useMemo(\r\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\r\n    [to],\r\n  );\r\n\r\n  const isVideoMaybe =\r\n    type === 'unknown' &&\r\n    /\\.(mp4|m4a|m4p|m4b|m4r|m4v|mov|webm)$/i.test(remoteMediaURL);\r\n  const isImage =\r\n    type === 'image' || (type === 'unknown' && previewUrl && !isVideoMaybe);\r\n\r\n  const parentRef = useRef();\r\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\r\n  useLayoutEffect(() => {\r\n    if (!isImage) return;\r\n    if (!showOriginal) return;\r\n    if (!parentRef.current) return;\r\n    const { offsetWidth, offsetHeight } = parentRef.current;\r\n    const smaller = width < offsetWidth && height < offsetHeight;\r\n    if (smaller) setImageSmallerThanParent(smaller);\r\n  }, [width, height]);\r\n\r\n  const maxAspectHeight =\r\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\r\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\r\n  const averageColorStyle = {\r\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n  };\r\n  const mediaStyles =\r\n    width && height\r\n      ? {\r\n          '--width': `${width}px`,\r\n          '--height': `${height}px`,\r\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\r\n          '--aspectWidth': `${\r\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\r\n          }px`,\r\n          aspectRatio: `${width} / ${height}`,\r\n          ...averageColorStyle,\r\n        }\r\n      : {\r\n          ...averageColorStyle,\r\n        };\r\n\r\n  const longDesc = isMediaCaptionLong(description);\r\n  const showInlineDesc =\r\n    !!showCaption && !showOriginal && !!description && !longDesc;\r\n  const Figure = !showInlineDesc\r\n    ? Fragment\r\n    : (props) => {\r\n        const { children, ...restProps } = props;\r\n        return (\r\n          <figure {...restProps}>\r\n            {children}\r\n            <figcaption\r\n              class=\"media-caption\"\r\n              lang={lang}\r\n              dir=\"auto\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                states.showMediaAlt = {\r\n                  alt: description,\r\n                  lang,\r\n                };\r\n              }}\r\n            >\r\n              {description}\r\n            </figcaption>\r\n          </figure>\r\n        );\r\n      };\r\n\r\n  if (isImage) {\r\n    // Note: type: unknown might not have width/height\r\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\r\n\r\n    useLayoutEffect(() => {\r\n      if (!isSafari) return;\r\n      if (!showOriginal) return;\r\n      (async () => {\r\n        try {\r\n          await fetch(mediaURL, { mode: 'no-cors' });\r\n          mediaRef.current.src = mediaURL;\r\n        } catch (e) {\r\n          // Ignore\r\n        }\r\n      })();\r\n    }, [mediaURL]);\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          ref={parentRef}\r\n          class={`media media-image ${className}`}\r\n          onClick={onClick}\r\n          data-orientation={orientation}\r\n          data-has-alt={!showInlineDesc}\r\n          style={\r\n            showOriginal\r\n              ? {\r\n                  backgroundImage: `url(${previewUrl})`,\r\n                  backgroundSize: imageSmallerThanParent\r\n                    ? `${width}px ${height}px`\r\n                    : undefined,\r\n                  ...averageColorStyle,\r\n                }\r\n              : mediaStyles\r\n          }\r\n        >\r\n          {showOriginal ? (\r\n            <QuickPinchZoom {...quickPinchZoomProps}>\r\n              <img\r\n                ref={mediaRef}\r\n                src={mediaURL}\r\n                alt={description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"eager\"\r\n                decoding=\"sync\"\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.closest('.media-zoom').style.display = '';\r\n                  setPinchZoomEnabled(true);\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n            </QuickPinchZoom>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={mediaURL}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n                style={{\r\n                  backgroundColor:\r\n                    rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n                  backgroundPosition: focalBackgroundPosition || 'center',\r\n                  // Duration based on width or height in pixels\r\n                  // 100px per second (rough estimate)\r\n                  // Clamp between 5s and 120s\r\n                  '--anim-duration': `${Math.min(\r\n                    Math.max(Math.max(width, height) / 100, 5),\r\n                    120,\r\n                  )}s`,\r\n                }}\r\n                onLoad={(e) => {\r\n                  e.target.closest('.media-image').style.backgroundImage = '';\r\n                  e.target.dataset.loaded = true;\r\n                }}\r\n                onError={(e) => {\r\n                  const { src } = e.target;\r\n                  if (src === mediaURL) {\r\n                    e.target.src = remoteMediaURL;\r\n                  }\r\n                }}\r\n              />\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\r\n    const shortDuration = original.duration < 31;\r\n    const isGIF = type === 'gifv' && shortDuration;\r\n    // If GIF is too long, treat it as a video\r\n    const loopable = original.duration < 61;\r\n    const formattedDuration = formatDuration(original.duration);\r\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\r\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\r\n\r\n    const videoHTML = `\r\n    <video\r\n      src=\"${url}\"\r\n      poster=\"${previewUrl}\"\r\n      width=\"${width}\"\r\n      height=\"${height}\"\r\n      data-orientation=\"${orientation}\"\r\n      preload=\"auto\"\r\n      autoplay\r\n      muted=\"${isGIF}\"\r\n      ${isGIF ? '' : 'controls'}\r\n      playsinline\r\n      loop=\"${loopable}\"\r\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\r\n    ></video>\r\n  `;\r\n\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\r\n            autoGIFAnimate ? 'media-contain' : ''\r\n          }`}\r\n          data-orientation={orientation}\r\n          data-formatted-duration={\r\n            !showOriginal ? formattedDuration : undefined\r\n          }\r\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\r\n          data-has-alt={!showInlineDesc}\r\n          // style={{\r\n          //   backgroundColor:\r\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\r\n          // }}\r\n          style={!showOriginal && mediaStyles}\r\n          onClick={(e) => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n            onClick(e);\r\n          }}\r\n          onMouseEnter={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onMouseLeave={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onFocus={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.play();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n          onBlur={() => {\r\n            if (hoverAnimate) {\r\n              try {\r\n                videoRef.current.pause();\r\n              } catch (e) {}\r\n            }\r\n          }}\r\n        >\r\n          {showOriginal || autoGIFAnimate ? (\r\n            isGIF && showOriginal ? (\r\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\r\n                <div\r\n                  ref={mediaRef}\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: videoHTML,\r\n                  }}\r\n                />\r\n              </QuickPinchZoom>\r\n            ) : (\r\n              <div\r\n                class=\"video-container\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: videoHTML,\r\n                }}\r\n              />\r\n            )\r\n          ) : isGIF ? (\r\n            <video\r\n              ref={videoRef}\r\n              src={url}\r\n              poster={previewUrl}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              preload=\"auto\"\r\n              // controls\r\n              playsinline\r\n              loop\r\n              muted\r\n            />\r\n          ) : (\r\n            <>\r\n              <img\r\n                src={previewUrl}\r\n                alt={showInlineDesc ? '' : description}\r\n                width={width}\r\n                height={height}\r\n                data-orientation={orientation}\r\n                loading=\"lazy\"\r\n              />\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          {!showOriginal && !showInlineDesc && (\r\n            <AltBadge alt={description} lang={lang} index={altIndex} />\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  } else if (type === 'audio') {\r\n    const formattedDuration = formatDuration(original.duration);\r\n    return (\r\n      <Figure>\r\n        <Parent\r\n          class={`media media-audio ${className}`}\r\n          data-formatted-duration={\r\n            !showOriginal ? formattedDuration : undefined\r\n          }\r\n          data-has-alt={!showInlineDesc}\r\n          onClick={onClick}\r\n          style={!showOriginal && mediaStyles}\r\n        >\r\n          {showOriginal ? (\r\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\r\n          ) : previewUrl ? (\r\n            <img\r\n              src={previewUrl}\r\n              alt={showInlineDesc ? '' : description}\r\n              width={width}\r\n              height={height}\r\n              data-orientation={orientation}\r\n              loading=\"lazy\"\r\n            />\r\n          ) : null}\r\n          {!showOriginal && (\r\n            <>\r\n              <div class=\"media-play\">\r\n                <Icon icon=\"play\" size=\"xl\" />\r\n              </div>\r\n              {!showInlineDesc && (\r\n                <AltBadge alt={description} lang={lang} index={altIndex} />\r\n              )}\r\n            </>\r\n          )}\r\n        </Parent>\r\n      </Figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Media;\r\n","import { FocusableItem } from '@szhsin/react-menu';\r\n\r\nimport Link from './link';\r\n\r\nfunction MenuLink(props) {\r\n  return (\r\n    <FocusableItem>\r\n      {({ ref, closeMenu }) => (\r\n        <Link\r\n          {...props}\r\n          ref={ref}\r\n          onClick={({ detail }) =>\r\n            closeMenu(detail === 0 ? 'Enter' : undefined)\r\n          }\r\n        />\r\n      )}\r\n    </FocusableItem>\r\n  );\r\n}\r\n\r\nexport default MenuLink;\r\n","import './status.css';\r\n\r\nimport '@justinribeiro/lite-youtube';\r\nimport {\r\n  ControlledMenu,\r\n  Menu,\r\n  MenuDivider,\r\n  MenuHeader,\r\n  MenuItem,\r\n} from '@szhsin/react-menu';\r\nimport { decodeBlurHash } from 'fast-blurhash';\r\nimport pThrottle from 'p-throttle';\r\nimport { memo } from 'preact/compat';\r\nimport {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { InView } from 'react-intersection-observer';\r\nimport { useLongPress } from 'use-long-press';\r\nimport { useSnapshot } from 'valtio';\r\nimport { snapshot } from 'valtio/vanilla';\r\n\r\nimport AccountBlock from '../components/account-block';\r\nimport EmojiText from '../components/emoji-text';\r\nimport Loader from '../components/loader';\r\nimport MenuConfirm from '../components/menu-confirm';\r\nimport Modal from '../components/modal';\r\nimport NameText from '../components/name-text';\r\nimport Poll from '../components/poll';\r\nimport { api } from '../utils/api';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport enhanceContent from '../utils/enhance-content';\r\nimport FilterContext from '../utils/filter-context';\r\nimport { isFiltered } from '../utils/filters';\r\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\r\nimport getHTMLText from '../utils/getHTMLText';\r\nimport handleContentLinks from '../utils/handle-content-links';\r\nimport htmlContentLength from '../utils/html-content-length';\r\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\r\nimport localeMatch from '../utils/locale-match';\r\nimport niceDateTime from '../utils/nice-date-time';\r\nimport openCompose from '../utils/open-compose';\r\nimport pmem from '../utils/pmem';\r\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport showToast from '../utils/show-toast';\r\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\r\nimport statusPeek from '../utils/status-peek';\r\nimport store from '../utils/store';\r\nimport useTruncated from '../utils/useTruncated';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Link from './link';\r\nimport Media from './media';\r\nimport { isMediaCaptionLong } from './media';\r\nimport MenuLink from './menu-link';\r\nimport RelativeTime from './relative-time';\r\nimport TranslationBlock from './translation-block';\r\n\r\nconst INLINE_TRANSLATE_LIMIT = 140;\r\nconst throttle = pThrottle({\r\n  limit: 1,\r\n  interval: 1000,\r\n});\r\n\r\nfunction fetchAccount(id, masto) {\r\n  return masto.v1.accounts.$select(id).fetch();\r\n}\r\nconst memFetchAccount = pmem(fetchAccount);\r\n\r\nconst visibilityText = {\r\n  public: 'Public',\r\n  unlisted: 'Unlisted',\r\n  private: 'Followers only',\r\n  direct: 'Private mention',\r\n};\r\n\r\nconst isIOS =\r\n  window.ontouchstart !== undefined &&\r\n  /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\nfunction Status({\r\n  statusID,\r\n  status,\r\n  instance: propInstance,\r\n  withinContext,\r\n  size = 'm',\r\n  skeleton,\r\n  readOnly,\r\n  contentTextWeight,\r\n  enableTranslate,\r\n  forceTranslate: _forceTranslate,\r\n  previewMode,\r\n  // allowFilters,\r\n  onMediaClick,\r\n  quoted,\r\n  onStatusLinkClick = () => {},\r\n}) {\r\n  if (skeleton) {\r\n    return (\r\n      <div class=\"status skeleton\">\r\n        <Avatar size=\"xxl\" />\r\n        <div class=\"container\">\r\n          <div class=\"meta\">███ ████████</div>\r\n          <div class=\"content-container\">\r\n            <div class=\"content\">\r\n              <p>████ ████████</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const { masto, instance, authenticated } = api({ instance: propInstance });\r\n  const { instance: currentInstance } = api();\r\n  const sameInstance = instance === currentInstance;\r\n\r\n  let sKey = statusKey(statusID, instance);\r\n  const snapStates = useSnapshot(states);\r\n  if (!status) {\r\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\r\n    sKey = statusKey(status?.id, instance);\r\n  }\r\n  if (!status) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    account: {\r\n      acct,\r\n      avatar,\r\n      avatarStatic,\r\n      id: accountId,\r\n      url: accountURL,\r\n      displayName,\r\n      username,\r\n      emojis: accountEmojis,\r\n      bot,\r\n      group,\r\n    },\r\n    id,\r\n    repliesCount,\r\n    reblogged,\r\n    reblogsCount,\r\n    favourited,\r\n    favouritesCount,\r\n    bookmarked,\r\n    poll,\r\n    muted,\r\n    sensitive,\r\n    spoilerText,\r\n    visibility, // public, unlisted, private, direct\r\n    language,\r\n    editedAt,\r\n    filtered,\r\n    card,\r\n    createdAt,\r\n    inReplyToId,\r\n    inReplyToAccountId,\r\n    content,\r\n    mentions,\r\n    mediaAttachments,\r\n    reblog,\r\n    uri,\r\n    url,\r\n    emojis,\r\n    // Non-API props\r\n    _deleted,\r\n    _pinned,\r\n    // _filtered,\r\n  } = status;\r\n\r\n  const currentAccount = useMemo(() => {\r\n    return store.session.get('currentAccount');\r\n  }, []);\r\n  const isSelf = useMemo(() => {\r\n    return currentAccount && currentAccount === accountId;\r\n  }, [accountId, currentAccount]);\r\n\r\n  const filterContext = useContext(FilterContext);\r\n  const filterInfo =\r\n    !isSelf && !readOnly && !previewMode && isFiltered(filtered, filterContext);\r\n\r\n  if (filterInfo?.action === 'hide') {\r\n    return null;\r\n  }\r\n\r\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\r\n\r\n  const debugHover = (e) => {\r\n    if (e.shiftKey) {\r\n      console.log({\r\n        ...status,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (/*allowFilters && */ size !== 'l' && filterInfo) {\r\n    return (\r\n      <FilteredStatus\r\n        status={status}\r\n        filterInfo={filterInfo}\r\n        instance={instance}\r\n        containerProps={{\r\n          onMouseEnter: debugHover,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const createdAtDate = new Date(createdAt);\r\n  const editedAtDate = new Date(editedAt);\r\n\r\n  let inReplyToAccountRef = mentions?.find(\r\n    (mention) => mention.id === inReplyToAccountId,\r\n  );\r\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\r\n    inReplyToAccountRef = { url: accountURL, username, displayName };\r\n  }\r\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\r\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\r\n    const account = states.accounts[inReplyToAccountId];\r\n    if (account) {\r\n      setInReplyToAccount(account);\r\n    } else {\r\n      memFetchAccount(inReplyToAccountId, masto)\r\n        .then((account) => {\r\n          setInReplyToAccount(account);\r\n          states.accounts[account.id] = account;\r\n        })\r\n        .catch((e) => {});\r\n    }\r\n  }\r\n  const mentionSelf =\r\n    inReplyToAccountId === currentAccount ||\r\n    mentions?.find((mention) => mention.id === currentAccount);\r\n\r\n  const readingExpandSpoilers = useMemo(() => {\r\n    const prefs = store.account.get('preferences') || {};\r\n    return !!prefs['reading:expand:spoilers'];\r\n  }, []);\r\n  const showSpoiler =\r\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id] || false;\r\n\r\n  if (reblog) {\r\n    // If has statusID, means useItemID (cached in states)\r\n\r\n    if (group) {\r\n      return (\r\n        <div\r\n          data-state-post-id={sKey}\r\n          class=\"status-group\"\r\n          onMouseEnter={debugHover}\r\n        >\r\n          <div class=\"status-pre-meta\">\r\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\r\n            <NameText account={status.account} instance={instance} showAvatar />\r\n          </div>\r\n          <Status\r\n            status={statusID ? null : reblog}\r\n            statusID={statusID ? reblog.id : null}\r\n            instance={instance}\r\n            size={size}\r\n            contentTextWeight={contentTextWeight}\r\n            readOnly={readOnly}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        data-state-post-id={sKey}\r\n        class=\"status-reblog\"\r\n        onMouseEnter={debugHover}\r\n      >\r\n        <div class=\"status-pre-meta\">\r\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\r\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\r\n          <span>boosted</span>\r\n        </div>\r\n        <Status\r\n          status={statusID ? null : reblog}\r\n          statusID={statusID ? reblog.id : null}\r\n          instance={instance}\r\n          size={size}\r\n          contentTextWeight={contentTextWeight}\r\n          readOnly={readOnly}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isSizeLarge = size === 'l';\r\n\r\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\r\n  const targetLanguage = getTranslateTargetLanguage(true);\r\n  const contentTranslationHideLanguages =\r\n    snapStates.settings.contentTranslationHideLanguages || [];\r\n  const { contentTranslation, contentTranslationAutoInline } =\r\n    snapStates.settings;\r\n  if (!contentTranslation) enableTranslate = false;\r\n  const inlineTranslate = useMemo(() => {\r\n    if (\r\n      !contentTranslation ||\r\n      !contentTranslationAutoInline ||\r\n      readOnly ||\r\n      (withinContext && !isSizeLarge) ||\r\n      previewMode ||\r\n      spoilerText ||\r\n      sensitive ||\r\n      poll ||\r\n      card ||\r\n      mediaAttachments?.length\r\n    ) {\r\n      return false;\r\n    }\r\n    const contentLength = htmlContentLength(content);\r\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\r\n  }, [\r\n    contentTranslation,\r\n    contentTranslationAutoInline,\r\n    readOnly,\r\n    withinContext,\r\n    isSizeLarge,\r\n    previewMode,\r\n    spoilerText,\r\n    sensitive,\r\n    poll,\r\n    card,\r\n    mediaAttachments,\r\n    content,\r\n  ]);\r\n\r\n  const [showEdited, setShowEdited] = useState(false);\r\n  const [showReactions, setShowReactions] = useState(false);\r\n\r\n  const spoilerContentRef = useTruncated();\r\n  const contentRef = useTruncated();\r\n  const mediaContainerRef = useTruncated();\r\n  const readMoreText = 'Read more →';\r\n\r\n  const statusRef = useRef(null);\r\n\r\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\r\n\r\n  const textWeight = useCallback(\r\n    () =>\r\n      Math.max(\r\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\r\n          1,\r\n        1,\r\n      ),\r\n    [spoilerText, content],\r\n  );\r\n\r\n  const createdDateText = niceDateTime(createdAtDate);\r\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\r\n\r\n  // Can boost if:\r\n  // - authenticated AND\r\n  // - visibility != direct OR\r\n  // - visibility = private AND isSelf\r\n  let canBoost =\r\n    authenticated && visibility !== 'direct' && visibility !== 'private';\r\n  if (visibility === 'private' && isSelf) {\r\n    canBoost = true;\r\n  }\r\n\r\n  const replyStatus = (e) => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    // syntheticEvent comes from MenuItem\r\n    if (e?.shiftKey || e?.syntheticEvent?.shiftKey) {\r\n      const newWin = openCompose({\r\n        replyToStatus: status,\r\n      });\r\n      if (newWin) return;\r\n    }\r\n    states.showCompose = {\r\n      replyToStatus: status,\r\n    };\r\n  };\r\n\r\n  // Check if media has no descriptions\r\n  const mediaNoDesc = useMemo(() => {\r\n    return mediaAttachments.some(\r\n      (attachment) => !attachment.description?.trim?.(),\r\n    );\r\n  }, [mediaAttachments]);\r\n  const boostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      if (!reblogged) {\r\n        let confirmText = 'Boost this post?';\r\n        if (mediaNoDesc) {\r\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\r\n        }\r\n        const yes = confirm(confirmText);\r\n        if (!yes) {\r\n          return false;\r\n        }\r\n      }\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n  const confirmBoostStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      alert(unauthInteractionErrorMessage);\r\n      return false;\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        reblogged: !reblogged,\r\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\r\n      };\r\n      if (reblogged) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\r\n        saveStatus(newStatus, instance);\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const favouriteStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        favourited: !favourited,\r\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\r\n      };\r\n      if (favourited) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const bookmarkStatus = async () => {\r\n    if (!sameInstance || !authenticated) {\r\n      return alert(unauthInteractionErrorMessage);\r\n    }\r\n    try {\r\n      // Optimistic\r\n      states.statuses[sKey] = {\r\n        ...status,\r\n        bookmarked: !bookmarked,\r\n      };\r\n      if (bookmarked) {\r\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\r\n        saveStatus(newStatus, instance);\r\n      } else {\r\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\r\n        saveStatus(newStatus, instance);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      // Revert optimistism\r\n      states.statuses[sKey] = status;\r\n    }\r\n  };\r\n\r\n  const differentLanguage =\r\n    !!language &&\r\n    language !== targetLanguage &&\r\n    !localeMatch([language], [targetLanguage]) &&\r\n    !contentTranslationHideLanguages.find(\r\n      (l) => language === l || localeMatch([language], [l]),\r\n    );\r\n\r\n  const menuInstanceRef = useRef();\r\n  const StatusMenuItems = (\r\n    <>\r\n      {!isSizeLarge && (\r\n        <>\r\n          <MenuHeader>\r\n            <span class=\"ib\">\r\n              <Icon icon={visibilityIconsMap[visibility]} size=\"s\" />{' '}\r\n              <span>{visibilityText[visibility]}</span>\r\n            </span>{' '}\r\n            <span class=\"ib\">\r\n              {repliesCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"reply\" alt=\"Replies\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(repliesCount)}</span>\r\n                </span>\r\n              )}{' '}\r\n              {reblogsCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"rocket\" alt=\"Boosts\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(reblogsCount)}</span>\r\n                </span>\r\n              )}{' '}\r\n              {favouritesCount > 0 && (\r\n                <span>\r\n                  <Icon icon=\"heart\" alt=\"Likes\" size=\"s\" />{' '}\r\n                  <span>{shortenNumber(favouritesCount)}</span>\r\n                </span>\r\n              )}\r\n            </span>\r\n            <br />\r\n            {createdDateText}\r\n          </MenuHeader>\r\n          <MenuLink\r\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n            onClick={(e) => {\r\n              onStatusLinkClick(e, status);\r\n            }}\r\n          >\r\n            <Icon icon=\"arrow-right\" />\r\n            <span>View post by @{username || acct}</span>\r\n          </MenuLink>\r\n        </>\r\n      )}\r\n      {!!editedAt && (\r\n        <MenuItem\r\n          onClick={() => {\r\n            setShowEdited(id);\r\n          }}\r\n        >\r\n          <Icon icon=\"history\" />\r\n          <span>\r\n            Show Edit History\r\n            <br />\r\n            <small class=\"more-insignificant\">Edited: {editedDateText}</small>\r\n          </span>\r\n        </MenuItem>\r\n      )}\r\n      {(!isSizeLarge || !!editedAt) && <MenuDivider />}\r\n      {isSizeLarge && (\r\n        <MenuItem onClick={() => setShowReactions(true)}>\r\n          <Icon icon=\"react\" />\r\n          <span>\r\n            Boosted/Liked by<span class=\"more-insignificant\">…</span>\r\n          </span>\r\n        </MenuItem>\r\n      )}\r\n      {!isSizeLarge && sameInstance && (\r\n        <>\r\n          <div class=\"menu-horizontal\">\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"rocket\" />\r\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                </>\r\n              }\r\n              menuFooter={\r\n                mediaNoDesc &&\r\n                !reblogged && (\r\n                  <div class=\"footer\">\r\n                    <Icon icon=\"alert\" />\r\n                    Some media have no descriptions.\r\n                  </div>\r\n                )\r\n              }\r\n              disabled={!canBoost}\r\n              onClick={async () => {\r\n                try {\r\n                  const done = await confirmBoostStatus();\r\n                  if (!isSizeLarge && done) {\r\n                    showToast(\r\n                      reblogged\r\n                        ? `Unboosted @${username || acct}'s post`\r\n                        : `Boosted @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"rocket\"\r\n                style={{\r\n                  color: reblogged && 'var(--reblog-color)',\r\n                }}\r\n              />\r\n              <span>{reblogged ? 'Unboost' : 'Boost…'}</span>\r\n            </MenuConfirm>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  favouriteStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(\r\n                      favourited\r\n                        ? `Unliked @${username || acct}'s post`\r\n                        : `Liked @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"heart\"\r\n                style={{\r\n                  color: favourited && 'var(--favourite-color)',\r\n                }}\r\n              />\r\n              <span>{favourited ? 'Unlike' : 'Like'}</span>\r\n            </MenuItem>\r\n          </div>\r\n          <div class=\"menu-horizontal\">\r\n            <MenuItem onClick={replyStatus}>\r\n              <Icon icon=\"reply\" />\r\n              <span>Reply</span>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  bookmarkStatus();\r\n                  if (!isSizeLarge) {\r\n                    showToast(\r\n                      bookmarked\r\n                        ? `Unbookmarked @${username || acct}'s post`\r\n                        : `Bookmarked @${username || acct}'s post`,\r\n                    );\r\n                  }\r\n                } catch (e) {}\r\n              }}\r\n            >\r\n              <Icon\r\n                icon=\"bookmark\"\r\n                style={{\r\n                  color: bookmarked && 'var(--link-color)',\r\n                }}\r\n              />\r\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\r\n            </MenuItem>\r\n          </div>\r\n        </>\r\n      )}\r\n      {enableTranslate ? (\r\n        <MenuItem\r\n          disabled={forceTranslate}\r\n          onClick={() => {\r\n            setForceTranslate(true);\r\n          }}\r\n        >\r\n          <Icon icon=\"translate\" />\r\n          <span>Translate</span>\r\n        </MenuItem>\r\n      ) : (\r\n        (!language || differentLanguage) && (\r\n          <MenuLink\r\n            to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\r\n          >\r\n            <Icon icon=\"translate\" />\r\n            <span>Translate</span>\r\n          </MenuLink>\r\n        )\r\n      )}\r\n      {((!isSizeLarge && sameInstance) || enableTranslate) && <MenuDivider />}\r\n      <MenuItem href={url} target=\"_blank\">\r\n        <Icon icon=\"external\" />\r\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\r\n      </MenuItem>\r\n      <div class=\"menu-horizontal\">\r\n        <MenuItem\r\n          onClick={() => {\r\n            // Copy url to clipboard\r\n            try {\r\n              navigator.clipboard.writeText(url);\r\n              showToast('Link copied');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast('Unable to copy link');\r\n            }\r\n          }}\r\n        >\r\n          <Icon icon=\"link\" />\r\n          <span>Copy</span>\r\n        </MenuItem>\r\n        {navigator?.share &&\r\n          navigator?.canShare?.({\r\n            url,\r\n          }) && (\r\n            <MenuItem\r\n              onClick={() => {\r\n                try {\r\n                  navigator.share({\r\n                    url,\r\n                  });\r\n                } catch (e) {\r\n                  console.error(e);\r\n                  alert(\"Sharing doesn't seem to work.\");\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon=\"share\" />\r\n              <span>Share…</span>\r\n            </MenuItem>\r\n          )}\r\n      </div>\r\n      {(isSelf || mentionSelf) && <MenuDivider />}\r\n      {(isSelf || mentionSelf) && (\r\n        <MenuItem\r\n          onClick={async () => {\r\n            try {\r\n              const newStatus = await masto.v1.statuses\r\n                .$select(id)\r\n                [muted ? 'unmute' : 'mute']();\r\n              saveStatus(newStatus, instance);\r\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\r\n            } catch (e) {\r\n              console.error(e);\r\n              showToast(\r\n                muted\r\n                  ? 'Unable to unmute conversation'\r\n                  : 'Unable to mute conversation',\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {muted ? (\r\n            <>\r\n              <Icon icon=\"unmute\" />\r\n              <span>Unmute conversation</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon icon=\"mute\" />\r\n              <span>Mute conversation</span>\r\n            </>\r\n          )}\r\n        </MenuItem>\r\n      )}\r\n      {isSelf && (\r\n        <div class=\"menu-horizontal\">\r\n          <MenuItem\r\n            onClick={() => {\r\n              states.showCompose = {\r\n                editStatus: status,\r\n              };\r\n            }}\r\n          >\r\n            <Icon icon=\"pencil\" />\r\n            <span>Edit</span>\r\n          </MenuItem>\r\n          {isSizeLarge && (\r\n            <MenuConfirm\r\n              subMenu\r\n              confirmLabel={\r\n                <>\r\n                  <Icon icon=\"trash\" />\r\n                  <span>Delete this post?</span>\r\n                </>\r\n              }\r\n              menuItemClassName=\"danger\"\r\n              onClick={() => {\r\n                // const yes = confirm('Delete this post?');\r\n                // if (yes) {\r\n                (async () => {\r\n                  try {\r\n                    await masto.v1.statuses.$select(id).remove();\r\n                    const cachedStatus = getStatus(id, instance);\r\n                    cachedStatus._deleted = true;\r\n                    showToast('Deleted');\r\n                  } catch (e) {\r\n                    console.error(e);\r\n                    showToast('Unable to delete');\r\n                  }\r\n                })();\r\n                // }\r\n              }}\r\n            >\r\n              <Icon icon=\"trash\" />\r\n              <span>Delete…</span>\r\n            </MenuConfirm>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const contextMenuRef = useRef();\r\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\r\n  const [contextMenuProps, setContextMenuProps] = useState({});\r\n\r\n  const showContextMenu = !isSizeLarge && !previewMode && !_deleted && !quoted;\r\n\r\n  // Only iOS/iPadOS browsers don't support contextmenu\r\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\r\n  const bindLongPressContext = useLongPress(\r\n    isIOS && showContextMenu\r\n      ? (e) => {\r\n          if (e.pointerType === 'mouse') return;\r\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\r\n\r\n          const { clientX, clientY } = e.touches?.[0] || e;\r\n          // link detection copied from onContextMenu because here it works\r\n          const link = e.target.closest('a');\r\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n          e.preventDefault();\r\n          setContextMenuProps({\r\n            anchorPoint: {\r\n              x: clientX,\r\n              y: clientY,\r\n            },\r\n            direction: 'right',\r\n          });\r\n          setIsContextMenuOpen(true);\r\n        }\r\n      : null,\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const hotkeysEnabled = !readOnly && !previewMode;\r\n  const rRef = useHotkeys('r, shift+r', replyStatus, {\r\n    enabled: hotkeysEnabled,\r\n  });\r\n  const fRef = useHotkeys(\r\n    'f, l',\r\n    () => {\r\n      try {\r\n        favouriteStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(\r\n            favourited\r\n              ? `Unliked @${username || acct}'s post`\r\n              : `Liked @${username || acct}'s post`,\r\n          );\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const dRef = useHotkeys(\r\n    'd',\r\n    () => {\r\n      try {\r\n        bookmarkStatus();\r\n        if (!isSizeLarge) {\r\n          showToast(\r\n            bookmarked\r\n              ? `Unbookmarked @${username || acct}'s post`\r\n              : `Bookmarked @${username || acct}'s post`,\r\n          );\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled,\r\n    },\r\n  );\r\n  const bRef = useHotkeys(\r\n    'shift+b',\r\n    () => {\r\n      (async () => {\r\n        try {\r\n          const done = await confirmBoostStatus();\r\n          if (!isSizeLarge && done) {\r\n            showToast(\r\n              reblogged\r\n                ? `Unboosted @${username || acct}'s post`\r\n                : `Boosted @${username || acct}'s post`,\r\n            );\r\n          }\r\n        } catch (e) {}\r\n      })();\r\n    },\r\n    {\r\n      enabled: hotkeysEnabled && canBoost,\r\n    },\r\n  );\r\n\r\n  const displayedMediaAttachments = mediaAttachments.slice(\r\n    0,\r\n    isSizeLarge ? undefined : 4,\r\n  );\r\n  const showMultipleMediaCaptions =\r\n    mediaAttachments.length > 1 &&\r\n    displayedMediaAttachments.some(\r\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\r\n    );\r\n  const captionChildren = useMemo(() => {\r\n    if (!showMultipleMediaCaptions) return null;\r\n    const attachments = [];\r\n    displayedMediaAttachments.forEach((media, i) => {\r\n      if (!media.description) return;\r\n      const index = attachments.findIndex(\r\n        (attachment) => attachment.media.description === media.description,\r\n      );\r\n      if (index === -1) {\r\n        attachments.push({\r\n          media,\r\n          indices: [i],\r\n        });\r\n      } else {\r\n        attachments[index].indices.push(i);\r\n      }\r\n    });\r\n    return attachments.map(({ media, indices }) => (\r\n      <div\r\n        key={media.id}\r\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          states.showMediaAlt = {\r\n            alt: media.description,\r\n            lang: language,\r\n          };\r\n        }}\r\n        title={media.description}\r\n      >\r\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\r\n      </div>\r\n    ));\r\n\r\n    // return displayedMediaAttachments.map(\r\n    //   (media, i) =>\r\n    //     !!media.description && (\r\n    //       <div\r\n    //         key={media.id}\r\n    //         data-caption-index={i + 1}\r\n    //         onClick={(e) => {\r\n    //           e.preventDefault();\r\n    //           e.stopPropagation();\r\n    //           states.showMediaAlt = {\r\n    //             alt: media.description,\r\n    //             lang: language,\r\n    //           };\r\n    //         }}\r\n    //         title={media.description}\r\n    //       >\r\n    //         <sup>{i + 1}</sup> {media.description}\r\n    //       </div>\r\n    //     ),\r\n    // );\r\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\r\n\r\n  return (\r\n    <article\r\n      data-state-post-id={sKey}\r\n      ref={(node) => {\r\n        statusRef.current = node;\r\n        // Use parent node if it's in focus\r\n        // Use case: <a><status /></a>\r\n        // When navigating (j/k), the <a> is focused instead of <status />\r\n        // Hotkey binding doesn't bubble up thus this hack\r\n        const nodeRef =\r\n          node?.closest?.(\r\n            '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\r\n          ) || node;\r\n        rRef.current = nodeRef;\r\n        fRef.current = nodeRef;\r\n        dRef.current = nodeRef;\r\n        bRef.current = nodeRef;\r\n      }}\r\n      tabindex=\"-1\"\r\n      class={`status ${\r\n        !withinContext && inReplyToId && inReplyToAccount\r\n          ? 'status-reply-to'\r\n          : ''\r\n      } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\r\n        {\r\n          s: 'small',\r\n          m: 'medium',\r\n          l: 'large',\r\n        }[size]\r\n      } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''}`}\r\n      onMouseEnter={debugHover}\r\n      onContextMenu={(e) => {\r\n        // FIXME: this code isn't getting called on Chrome at all?\r\n        if (!showContextMenu) return;\r\n        if (e.metaKey) return;\r\n        // console.log('context menu', e);\r\n        const link = e.target.closest('a');\r\n        if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\r\n        e.preventDefault();\r\n        setContextMenuProps({\r\n          anchorPoint: {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n          },\r\n          direction: 'right',\r\n        });\r\n        setIsContextMenuOpen(true);\r\n      }}\r\n      {...(showContextMenu ? bindLongPressContext() : {})}\r\n    >\r\n      {showContextMenu && (\r\n        <ControlledMenu\r\n          ref={contextMenuRef}\r\n          state={isContextMenuOpen ? 'open' : undefined}\r\n          {...contextMenuProps}\r\n          onClose={(e) => {\r\n            setIsContextMenuOpen(false);\r\n            // statusRef.current?.focus?.();\r\n            if (e?.reason === 'click') {\r\n              statusRef.current?.closest('[tabindex]')?.focus?.();\r\n            }\r\n          }}\r\n          portal={{\r\n            target: document.body,\r\n          }}\r\n          containerProps={{\r\n            style: {\r\n              // Higher than the backdrop\r\n              zIndex: 1001,\r\n            },\r\n            onClick: () => {\r\n              contextMenuRef.current?.closeMenu?.();\r\n            },\r\n          }}\r\n          overflow=\"auto\"\r\n          boundingBoxPadding={safeBoundingBoxPadding()}\r\n          unmountOnClose\r\n        >\r\n          {StatusMenuItems}\r\n        </ControlledMenu>\r\n      )}\r\n      {size !== 'l' && (\r\n        <div class=\"status-badge\">\r\n          {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\r\n          {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\r\n          {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\r\n          {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\r\n        </div>\r\n      )}\r\n      {size !== 's' && (\r\n        <a\r\n          href={accountURL}\r\n          tabindex=\"-1\"\r\n          // target=\"_blank\"\r\n          title={`@${acct}`}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            states.showAccount = {\r\n              account: status.account,\r\n              instance,\r\n            };\r\n          }}\r\n        >\r\n          <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\r\n        </a>\r\n      )}\r\n      <div class=\"container\">\r\n        <div class=\"meta\">\r\n          <span class=\"meta-name\">\r\n            <NameText\r\n              account={status.account}\r\n              instance={instance}\r\n              showAvatar={size === 's'}\r\n              showAcct={isSizeLarge}\r\n            />\r\n          </span>\r\n          {/* {inReplyToAccount && !withinContext && size !== 's' && (\r\n              <>\r\n                {' '}\r\n                <span class=\"ib\">\r\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\r\n                  <NameText account={inReplyToAccount} instance={instance} short />\r\n                </span>\r\n              </>\r\n            )} */}\r\n          {/* </span> */}{' '}\r\n          {size !== 'l' &&\r\n            (_deleted ? (\r\n              <span class=\"status-deleted-tag\">Deleted</span>\r\n            ) : url && !previewMode && !quoted ? (\r\n              <Link\r\n                to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n                onClick={(e) => {\r\n                  if (\r\n                    e.metaKey ||\r\n                    e.ctrlKey ||\r\n                    e.shiftKey ||\r\n                    e.altKey ||\r\n                    e.which === 2\r\n                  ) {\r\n                    return;\r\n                  }\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  onStatusLinkClick?.(e, status);\r\n                  setContextMenuProps({\r\n                    anchorRef: {\r\n                      current: e.currentTarget,\r\n                    },\r\n                    align: 'end',\r\n                    direction: 'bottom',\r\n                    gap: 4,\r\n                  });\r\n                  setIsContextMenuOpen(true);\r\n                }}\r\n                class={`time ${\r\n                  isContextMenuOpen && contextMenuProps?.anchorRef\r\n                    ? 'is-open'\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Icon\r\n                  icon={visibilityIconsMap[visibility]}\r\n                  alt={visibilityText[visibility]}\r\n                  size=\"s\"\r\n                />{' '}\r\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              </Link>\r\n            ) : (\r\n              // <Menu\r\n              //   instanceRef={menuInstanceRef}\r\n              //   portal={{\r\n              //     target: document.body,\r\n              //   }}\r\n              //   containerProps={{\r\n              //     style: {\r\n              //       // Higher than the backdrop\r\n              //       zIndex: 1001,\r\n              //     },\r\n              //     onClick: (e) => {\r\n              //       if (e.target === e.currentTarget)\r\n              //         menuInstanceRef.current?.closeMenu?.();\r\n              //     },\r\n              //   }}\r\n              //   align=\"end\"\r\n              //   gap={4}\r\n              //   overflow=\"auto\"\r\n              //   viewScroll=\"close\"\r\n              //   boundingBoxPadding=\"8 8 8 8\"\r\n              //   unmountOnClose\r\n              //   menuButton={({ open }) => (\r\n              //     <Link\r\n              //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\r\n              //       onClick={(e) => {\r\n              //         e.preventDefault();\r\n              //         e.stopPropagation();\r\n              //         onStatusLinkClick?.(e, status);\r\n              //       }}\r\n              //       class={`time ${open ? 'is-open' : ''}`}\r\n              //     >\r\n              //       <Icon\r\n              //         icon={visibilityIconsMap[visibility]}\r\n              //         alt={visibilityText[visibility]}\r\n              //         size=\"s\"\r\n              //       />{' '}\r\n              //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              //     </Link>\r\n              //   )}\r\n              // >\r\n              //   {StatusMenuItems}\r\n              // </Menu>\r\n              <span class=\"time\">\r\n                <Icon\r\n                  icon={visibilityIconsMap[visibility]}\r\n                  alt={visibilityText[visibility]}\r\n                  size=\"s\"\r\n                />{' '}\r\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n              </span>\r\n            ))}\r\n        </div>\r\n        {visibility === 'direct' && (\r\n          <>\r\n            <div class=\"status-direct-badge\">Private mention</div>{' '}\r\n          </>\r\n        )}\r\n        {!withinContext && (\r\n          <>\r\n            {(!!inReplyToId && inReplyToAccountId === status.account?.id) ||\r\n            !!snapStates.statusThreadNumber[sKey] ? (\r\n              <div class=\"status-thread-badge\">\r\n                <Icon icon=\"thread\" size=\"s\" />\r\n                Thread\r\n                {snapStates.statusThreadNumber[sKey]\r\n                  ? ` ${snapStates.statusThreadNumber[sKey]}/X`\r\n                  : ''}\r\n              </div>\r\n            ) : (\r\n              !!inReplyToId &&\r\n              !!inReplyToAccount &&\r\n              (!!spoilerText ||\r\n                !mentions.find((mention) => {\r\n                  return mention.id === inReplyToAccountId;\r\n                })) && (\r\n                <div class=\"status-reply-badge\">\r\n                  <Icon icon=\"reply\" />{' '}\r\n                  <NameText\r\n                    account={inReplyToAccount}\r\n                    instance={instance}\r\n                    short\r\n                  />\r\n                </div>\r\n              )\r\n            )}\r\n          </>\r\n        )}\r\n        <div\r\n          class={`content-container ${\r\n            spoilerText || sensitive ? 'has-spoiler' : ''\r\n          } ${showSpoiler ? 'show-spoiler' : ''}`}\r\n          data-content-text-weight={contentTextWeight ? textWeight() : null}\r\n          style={\r\n            (isSizeLarge || contentTextWeight) && {\r\n              '--content-text-weight': textWeight(),\r\n            }\r\n          }\r\n        >\r\n          {!!spoilerText && (\r\n            <>\r\n              <div\r\n                class=\"content spoiler-content\"\r\n                lang={language}\r\n                dir=\"auto\"\r\n                ref={spoilerContentRef}\r\n                data-read-more={readMoreText}\r\n              >\r\n                <p>\r\n                  <EmojiText text={spoilerText} emojis={emojis} />\r\n                </p>\r\n              </div>\r\n              <button\r\n                class={`light spoiler ${showSpoiler ? 'spoiling' : ''}`}\r\n                type=\"button\"\r\n                disabled={readingExpandSpoilers}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  if (showSpoiler) {\r\n                    delete states.spoilers[id];\r\n                  } else {\r\n                    states.spoilers[id] = true;\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\r\n                {readingExpandSpoilers\r\n                  ? 'Content warning'\r\n                  : showSpoiler\r\n                  ? 'Show less'\r\n                  : 'Show more'}\r\n              </button>\r\n            </>\r\n          )}\r\n          <div class=\"content\" ref={contentRef} data-read-more={readMoreText}>\r\n            <div\r\n              lang={language}\r\n              dir=\"auto\"\r\n              class=\"inner-content\"\r\n              onClick={handleContentLinks({\r\n                mentions,\r\n                instance,\r\n                previewMode,\r\n                statusURL: url,\r\n              })}\r\n              dangerouslySetInnerHTML={{\r\n                __html: enhanceContent(content, {\r\n                  emojis,\r\n                  postEnhanceDOM: (dom) => {\r\n                    // Remove target=\"_blank\" from links\r\n                    dom\r\n                      .querySelectorAll('a.u-url[target=\"_blank\"]')\r\n                      .forEach((a) => {\r\n                        if (!/http/i.test(a.innerText.trim())) {\r\n                          a.removeAttribute('target');\r\n                        }\r\n                      });\r\n                    if (previewMode) return;\r\n                    // Unfurl Mastodon links\r\n                    Array.from(\r\n                      dom.querySelectorAll(\r\n                        'a[href]:not(.u-url):not(.mention):not(.hashtag)',\r\n                      ),\r\n                    )\r\n                      .filter((a) => {\r\n                        const url = a.href;\r\n                        const isPostItself =\r\n                          url === status.url || url === status.uri;\r\n                        return !isPostItself && isMastodonLinkMaybe(url);\r\n                      })\r\n                      .forEach((a, i) => {\r\n                        unfurlMastodonLink(currentInstance, a.href).then(\r\n                          (result) => {\r\n                            if (!result) return;\r\n                            a.removeAttribute('target');\r\n                            if (!sKey) return;\r\n                            if (!Array.isArray(states.statusQuotes[sKey])) {\r\n                              states.statusQuotes[sKey] = [];\r\n                            }\r\n                            if (!states.statusQuotes[sKey][i]) {\r\n                              states.statusQuotes[sKey].splice(i, 0, result);\r\n                            }\r\n                          },\r\n                        );\r\n                      });\r\n                  },\r\n                }),\r\n              }}\r\n            />\r\n            <QuoteStatuses id={id} instance={instance} level={quoted} />\r\n          </div>\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              poll={poll}\r\n              readOnly={readOnly || !sameInstance || !authenticated}\r\n              onUpdate={(newPoll) => {\r\n                states.statuses[sKey].poll = newPoll;\r\n              }}\r\n              refresh={() => {\r\n                return masto.v1.polls\r\n                  .$select(poll.id)\r\n                  .fetch()\r\n                  .then((pollResponse) => {\r\n                    states.statuses[sKey].poll = pollResponse;\r\n                  })\r\n                  .catch((e) => {}); // Silently fail\r\n              }}\r\n              votePoll={(choices) => {\r\n                return masto.v1.polls\r\n                  .$select(poll.id)\r\n                  .votes.create({\r\n                    choices,\r\n                  })\r\n                  .then((pollResponse) => {\r\n                    states.statuses[sKey].poll = pollResponse;\r\n                  })\r\n                  .catch((e) => {}); // Silently fail\r\n              }}\r\n            />\r\n          )}\r\n          {(((enableTranslate || inlineTranslate) &&\r\n            !!content.trim() &&\r\n            !!getHTMLText(emojifyText(content, emojis)) &&\r\n            differentLanguage) ||\r\n            forceTranslate) && (\r\n            <TranslationBlock\r\n              forceTranslate={forceTranslate || inlineTranslate}\r\n              mini={!isSizeLarge && !withinContext}\r\n              sourceLanguage={language}\r\n              text={\r\n                (spoilerText ? `${spoilerText}\\n\\n` : '') +\r\n                getHTMLText(content) +\r\n                (poll?.options?.length\r\n                  ? `\\n\\nPoll:\\n${poll.options\r\n                      .map(\r\n                        (option) =>\r\n                          `- ${option.title}${\r\n                            option.votesCount >= 0\r\n                              ? ` (${option.votesCount})`\r\n                              : ''\r\n                          }`,\r\n                      )\r\n                      .join('\\n')}`\r\n                  : '')\r\n              }\r\n            />\r\n          )}\r\n          {!spoilerText && sensitive && !!mediaAttachments.length && (\r\n            <button\r\n              class={`plain spoiler ${showSpoiler ? 'spoiling' : ''}`}\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (showSpoiler) {\r\n                  delete states.spoilers[id];\r\n                } else {\r\n                  states.spoilers[id] = true;\r\n                }\r\n              }}\r\n            >\r\n              <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} /> Sensitive\r\n              content\r\n            </button>\r\n          )}\r\n          {!!mediaAttachments.length && (\r\n            <MultipleMediaFigure\r\n              lang={language}\r\n              enabled={showMultipleMediaCaptions}\r\n              captionChildren={captionChildren}\r\n            >\r\n              <div\r\n                ref={mediaContainerRef}\r\n                class={`media-container media-eq${mediaAttachments.length} ${\r\n                  mediaAttachments.length > 2 ? 'media-gt2' : ''\r\n                } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\r\n              >\r\n                {displayedMediaAttachments.map((media, i) => (\r\n                  <Media\r\n                    key={media.id}\r\n                    media={media}\r\n                    autoAnimate={isSizeLarge}\r\n                    showCaption={mediaAttachments.length === 1}\r\n                    lang={language}\r\n                    altIndex={\r\n                      showMultipleMediaCaptions && !!media.description && i + 1\r\n                    }\r\n                    to={`/${instance}/s/${id}?${\r\n                      withinContext ? 'media' : 'media-only'\r\n                    }=${i + 1}`}\r\n                    onClick={\r\n                      onMediaClick\r\n                        ? (e) => {\r\n                            onMediaClick(e, i, media, status);\r\n                          }\r\n                        : undefined\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n            </MultipleMediaFigure>\r\n          )}\r\n          {!!card &&\r\n            card?.url !== status.url &&\r\n            card?.url !== status.uri &&\r\n            /^https/i.test(card?.url) &&\r\n            !sensitive &&\r\n            !spoilerText &&\r\n            !poll &&\r\n            !mediaAttachments.length &&\r\n            !snapStates.statusQuotes[sKey] && (\r\n              <Card card={card} instance={currentInstance} />\r\n            )}\r\n        </div>\r\n        {isSizeLarge && (\r\n          <>\r\n            <div class=\"extra-meta\">\r\n              {_deleted ? (\r\n                <span class=\"status-deleted-tag\">Deleted</span>\r\n              ) : (\r\n                <>\r\n                  <Icon\r\n                    icon={visibilityIconsMap[visibility]}\r\n                    alt={visibilityText[visibility]}\r\n                  />{' '}\r\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <time\r\n                      class=\"created\"\r\n                      datetime={createdAtDate.toISOString()}\r\n                    >\r\n                      {createdDateText}\r\n                    </time>\r\n                  </a>\r\n                  {editedAt && (\r\n                    <>\r\n                      {' '}\r\n                      &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\r\n                      <time\r\n                        tabIndex=\"0\"\r\n                        class=\"edited\"\r\n                        datetime={editedAtDate.toISOString()}\r\n                        onClick={() => {\r\n                          setShowEdited(id);\r\n                        }}\r\n                      >\r\n                        {editedDateText}\r\n                      </time>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div class={`actions ${_deleted ? 'disabled' : ''}`}>\r\n              <div class=\"action has-count\">\r\n                <StatusButton\r\n                  title=\"Reply\"\r\n                  alt=\"Comments\"\r\n                  class=\"reply-button\"\r\n                  icon=\"comment\"\r\n                  count={repliesCount}\r\n                  onClick={replyStatus}\r\n                />\r\n              </div>\r\n              {/* <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={reblogged}\r\n                  title={['Boost', 'Unboost']}\r\n                  alt={['Boost', 'Boosted']}\r\n                  class=\"reblog-button\"\r\n                  icon=\"rocket\"\r\n                  count={reblogsCount}\r\n                  onClick={boostStatus}\r\n                  disabled={!canBoost}\r\n                />\r\n              </div> */}\r\n              <MenuConfirm\r\n                disabled={!canBoost}\r\n                onClick={confirmBoostStatus}\r\n                confirmLabel={\r\n                  <>\r\n                    <Icon icon=\"rocket\" />\r\n                    <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\r\n                  </>\r\n                }\r\n                menuFooter={\r\n                  mediaNoDesc &&\r\n                  !reblogged && (\r\n                    <div class=\"footer\">\r\n                      <Icon icon=\"alert\" />\r\n                      Some media have no descriptions.\r\n                    </div>\r\n                  )\r\n                }\r\n              >\r\n                <div class=\"action has-count\">\r\n                  <StatusButton\r\n                    checked={reblogged}\r\n                    title={['Boost', 'Unboost']}\r\n                    alt={['Boost', 'Boosted']}\r\n                    class=\"reblog-button\"\r\n                    icon=\"rocket\"\r\n                    count={reblogsCount}\r\n                    // onClick={boostStatus}\r\n                    disabled={!canBoost}\r\n                  />\r\n                </div>\r\n              </MenuConfirm>\r\n              <div class=\"action has-count\">\r\n                <StatusButton\r\n                  checked={favourited}\r\n                  title={['Like', 'Unlike']}\r\n                  alt={['Like', 'Liked']}\r\n                  class=\"favourite-button\"\r\n                  icon=\"heart\"\r\n                  count={favouritesCount}\r\n                  onClick={favouriteStatus}\r\n                />\r\n              </div>\r\n              <div class=\"action\">\r\n                <StatusButton\r\n                  checked={bookmarked}\r\n                  title={['Bookmark', 'Unbookmark']}\r\n                  alt={['Bookmark', 'Bookmarked']}\r\n                  class=\"bookmark-button\"\r\n                  icon=\"bookmark\"\r\n                  onClick={bookmarkStatus}\r\n                />\r\n              </div>\r\n              <Menu\r\n                portal={{\r\n                  target:\r\n                    document.querySelector('.status-deck') || document.body,\r\n                }}\r\n                align=\"end\"\r\n                gap={4}\r\n                overflow=\"auto\"\r\n                viewScroll=\"close\"\r\n                boundingBoxPadding=\"8 8 8 8\"\r\n                menuButton={\r\n                  <div class=\"action\">\r\n                    <button\r\n                      type=\"button\"\r\n                      title=\"More\"\r\n                      class=\"plain more-button\"\r\n                    >\r\n                      <Icon icon=\"more\" size=\"l\" alt=\"More\" />\r\n                    </button>\r\n                  </div>\r\n                }\r\n              >\r\n                {StatusMenuItems}\r\n              </Menu>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {!!showEdited && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEdited(false);\r\n              // statusRef.current?.focus();\r\n            }\r\n          }}\r\n        >\r\n          <EditedAtModal\r\n            statusID={showEdited}\r\n            instance={instance}\r\n            fetchStatusHistory={() => {\r\n              return masto.v1.statuses.$select(showEdited).history.list();\r\n            }}\r\n            onClose={() => {\r\n              setShowEdited(false);\r\n              statusRef.current?.focus();\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {showReactions && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowReactions(false);\r\n            }\r\n          }}\r\n        >\r\n          <ReactionsModal\r\n            statusID={id}\r\n            instance={instance}\r\n            onClose={() => setShowReactions(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nfunction MultipleMediaFigure(props) {\r\n  const { enabled, children, lang, captionChildren } = props;\r\n  if (!enabled || !captionChildren) return children;\r\n  return (\r\n    <figure class=\"media-figure-multiple\">\r\n      {children}\r\n      <figcaption lang={lang} dir=\"auto\">\r\n        {captionChildren}\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nfunction Card({ card, instance }) {\r\n  const snapStates = useSnapshot(states);\r\n  const {\r\n    blurhash,\r\n    title,\r\n    description,\r\n    html,\r\n    providerName,\r\n    providerUrl,\r\n    authorName,\r\n    authorUrl,\r\n    width,\r\n    height,\r\n    image,\r\n    imageDescription,\r\n    url,\r\n    type,\r\n    embedUrl,\r\n    language,\r\n    publishedAt,\r\n  } = card;\r\n\r\n  /* type\r\n  link = Link OEmbed\r\n  photo = Photo OEmbed\r\n  video = Video OEmbed\r\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\r\n  */\r\n\r\n  const hasText = title || providerName || authorName;\r\n  const isLandscape = width / height >= 1.2;\r\n  const size = isLandscape ? 'large' : '';\r\n\r\n  const [cardStatusURL, setCardStatusURL] = useState(null);\r\n  // const [cardStatusID, setCardStatusID] = useState(null);\r\n  useEffect(() => {\r\n    if (hasText && image && isMastodonLinkMaybe(url)) {\r\n      unfurlMastodonLink(instance, url).then((result) => {\r\n        if (!result) return;\r\n        const { id, url } = result;\r\n        setCardStatusURL('#' + url);\r\n\r\n        // NOTE: This is for quote post\r\n        // (async () => {\r\n        //   const { masto } = api({ instance });\r\n        //   const status = await masto.v1.statuses.$select(id).fetch();\r\n        //   saveStatus(status, instance);\r\n        //   setCardStatusID(id);\r\n        // })();\r\n      });\r\n    }\r\n  }, [hasText, image]);\r\n\r\n  // if (cardStatusID) {\r\n  //   return (\r\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\r\n  //   );\r\n  // }\r\n\r\n  if (snapStates.unfurledLinks[url]) return null;\r\n\r\n  if (hasText && (image || (type === 'photo' && blurhash))) {\r\n    const domain = new URL(url).hostname\r\n      .replace(/^www\\./, '')\r\n      .replace(/\\/$/, '');\r\n    let blurhashImage;\r\n    if (!image) {\r\n      const w = 44;\r\n      const h = 44;\r\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = w;\r\n      canvas.height = h;\r\n      const ctx = canvas.getContext('2d');\r\n      const imageData = ctx.createImageData(w, h);\r\n      imageData.data.set(blurhashPixels);\r\n      ctx.putImageData(imageData, 0, 0);\r\n      blurhashImage = canvas.toDataURL();\r\n    }\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link ${blurhashImage ? '' : size}`}\r\n        lang={language}\r\n        dir=\"auto\"\r\n      >\r\n        <div class=\"card-image\">\r\n          <img\r\n            src={image || blurhashImage}\r\n            width={width}\r\n            height={height}\r\n            loading=\"lazy\"\r\n            alt={imageDescription || ''}\r\n            onError={(e) => {\r\n              try {\r\n                e.target.style.display = 'none';\r\n              } catch (e) {}\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\" dir=\"auto\">\r\n            {domain}\r\n          </p>\r\n          <p class=\"title\" dir=\"auto\">\r\n            {title}\r\n          </p>\r\n          <p class=\"meta\" dir=\"auto\">\r\n            {description ||\r\n              (!!publishedAt && (\r\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\r\n              ))}\r\n          </p>\r\n        </div>\r\n      </a>\r\n    );\r\n  } else if (type === 'photo') {\r\n    return (\r\n      <a\r\n        href={url}\r\n        target=\"_blank\"\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class=\"card photo\"\r\n      >\r\n        <img\r\n          src={embedUrl}\r\n          width={width}\r\n          height={height}\r\n          alt={title || description}\r\n          loading=\"lazy\"\r\n          style={{\r\n            height: 'auto',\r\n            aspectRatio: `${width}/${height}`,\r\n          }}\r\n        />\r\n      </a>\r\n    );\r\n  } else if (type === 'video') {\r\n    if (/youtube/i.test(providerName)) {\r\n      // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\r\n      const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\r\n      if (videoID) {\r\n        return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        class=\"card video\"\r\n        style={{\r\n          aspectRatio: `${width}/${height}`,\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    );\r\n  } else if (hasText && !image) {\r\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\r\n    return (\r\n      <a\r\n        href={cardStatusURL || url}\r\n        target={cardStatusURL ? null : '_blank'}\r\n        rel=\"nofollow noopener noreferrer\"\r\n        class={`card link no-image`}\r\n        lang={language}\r\n      >\r\n        <div class=\"meta-container\">\r\n          <p class=\"meta domain\">\r\n            <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\r\n          </p>\r\n          <p class=\"title\">{title}</p>\r\n          <p class=\"meta\">{description || providerName || authorName}</p>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nfunction EditedAtModal({\r\n  statusID,\r\n  instance,\r\n  fetchStatusHistory = () => {},\r\n  onClose,\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const [editHistory, setEditHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const editHistory = await fetchStatusHistory();\r\n        console.log(editHistory);\r\n        setEditHistory(editHistory);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"edit-history\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Edit History</h2>\r\n        {uiState === 'error' && <p>Failed to load history</p>}\r\n        {uiState === 'loading' && (\r\n          <p>\r\n            <Loader abrupt /> Loading&hellip;\r\n          </p>\r\n        )}\r\n      </header>\r\n      <main tabIndex=\"-1\">\r\n        {editHistory.length > 0 && (\r\n          <ol>\r\n            {editHistory.map((status) => {\r\n              const { createdAt } = status;\r\n              const createdAtDate = new Date(createdAt);\r\n              return (\r\n                <li key={createdAt} class=\"history-item\">\r\n                  <h3>\r\n                    <time>\r\n                      {niceDateTime(createdAtDate, {\r\n                        formatOpts: {\r\n                          weekday: 'short',\r\n                          second: 'numeric',\r\n                        },\r\n                      })}\r\n                    </time>\r\n                  </h3>\r\n                  <Status\r\n                    status={status}\r\n                    instance={instance}\r\n                    size=\"s\"\r\n                    withinContext\r\n                    readOnly\r\n                    previewMode\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REACTIONS_LIMIT = 80;\r\nfunction ReactionsModal({ statusID, instance, onClose }) {\r\n  const { masto } = api({ instance });\r\n  const [uiState, setUIState] = useState('default');\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const reblogIterator = useRef();\r\n  const favouriteIterator = useRef();\r\n\r\n  async function fetchAccounts(firstLoad) {\r\n    setShowMore(false);\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        if (firstLoad) {\r\n          reblogIterator.current = masto.v1.statuses\r\n            .$select(statusID)\r\n            .rebloggedBy.list({\r\n              limit: REACTIONS_LIMIT,\r\n            });\r\n          favouriteIterator.current = masto.v1.statuses\r\n            .$select(statusID)\r\n            .favouritedBy.list({\r\n              limit: REACTIONS_LIMIT,\r\n            });\r\n        }\r\n        const [{ value: reblogResults }, { value: favouriteResults }] =\r\n          await Promise.allSettled([\r\n            reblogIterator.current.next(),\r\n            favouriteIterator.current.next(),\r\n          ]);\r\n        if (reblogResults.value?.length || favouriteResults.value?.length) {\r\n          if (reblogResults.value?.length) {\r\n            for (const account of reblogResults.value) {\r\n              const theAccount = accounts.find((a) => a.id === account.id);\r\n              if (!theAccount) {\r\n                accounts.push({\r\n                  ...account,\r\n                  _types: ['reblog'],\r\n                });\r\n              } else {\r\n                theAccount._types.push('reblog');\r\n              }\r\n            }\r\n          }\r\n          if (favouriteResults.value?.length) {\r\n            for (const account of favouriteResults.value) {\r\n              const theAccount = accounts.find((a) => a.id === account.id);\r\n              if (!theAccount) {\r\n                accounts.push({\r\n                  ...account,\r\n                  _types: ['favourite'],\r\n                });\r\n              } else {\r\n                theAccount._types.push('favourite');\r\n              }\r\n            }\r\n          }\r\n          setAccounts(accounts);\r\n          setShowMore(!reblogResults.done || !favouriteResults.done);\r\n        } else {\r\n          setShowMore(false);\r\n        }\r\n        setUIState('default');\r\n      } catch (e) {\r\n        console.error(e);\r\n        setUIState('error');\r\n      }\r\n    })();\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAccounts(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"reactions-container\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <h2>Boosted/Liked by…</h2>\r\n      </header>\r\n      <main>\r\n        {accounts.length > 0 ? (\r\n          <>\r\n            <ul class=\"reactions-list\">\r\n              {accounts.map((account) => {\r\n                const { _types } = account;\r\n                return (\r\n                  <li key={account.id + _types}>\r\n                    <div class=\"reactions-block\">\r\n                      {_types.map((type) => (\r\n                        <Icon\r\n                          icon={\r\n                            {\r\n                              reblog: 'rocket',\r\n                              favourite: 'heart',\r\n                            }[type]\r\n                          }\r\n                          class={`${type}-icon`}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <AccountBlock account={account} instance={instance} />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            {uiState === 'default' ? (\r\n              showMore ? (\r\n                <InView\r\n                  onChange={(inView) => {\r\n                    if (inView) {\r\n                      fetchAccounts();\r\n                    }\r\n                  }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"plain block\"\r\n                    onClick={() => fetchAccounts()}\r\n                  >\r\n                    Show more&hellip;\r\n                  </button>\r\n                </InView>\r\n              ) : (\r\n                <p class=\"ui-state insignificant\">The end.</p>\r\n              )\r\n            ) : (\r\n              uiState === 'loading' && (\r\n                <p class=\"ui-state\">\r\n                  <Loader abrupt />\r\n                </p>\r\n              )\r\n            )}\r\n          </>\r\n        ) : uiState === 'loading' ? (\r\n          <p class=\"ui-state\">\r\n            <Loader abrupt />\r\n          </p>\r\n        ) : uiState === 'error' ? (\r\n          <p class=\"ui-state\">Unable to load accounts</p>\r\n        ) : (\r\n          <p class=\"ui-state insignificant\">No one yet.</p>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StatusButton({\r\n  checked,\r\n  count,\r\n  class: className,\r\n  title,\r\n  alt,\r\n  icon,\r\n  onClick,\r\n  ...props\r\n}) {\r\n  if (typeof title === 'string') {\r\n    title = [title, title];\r\n  }\r\n  if (typeof alt === 'string') {\r\n    alt = [alt, alt];\r\n  }\r\n\r\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\r\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\r\n\r\n  useEffect(() => {\r\n    if (checked) {\r\n      setButtonTitle(title[1] || '');\r\n      setIconAlt(alt[1] || '');\r\n    } else {\r\n      setButtonTitle(title[0] || '');\r\n      setIconAlt(alt[0] || '');\r\n    }\r\n  }, [checked, title, alt]);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      title={buttonTitle}\r\n      class={`plain ${className} ${checked ? 'checked' : ''}`}\r\n      onClick={(e) => {\r\n        if (!onClick) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onClick(e);\r\n      }}\r\n      {...props}\r\n    >\r\n      <Icon icon={icon} size=\"l\" alt={iconAlt} />\r\n      {!!count && (\r\n        <>\r\n          {' '}\r\n          <small title={count}>{shortenNumber(count)}</small>\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function formatDuration(time) {\r\n  if (!time) return;\r\n  let hours = Math.floor(time / 3600);\r\n  let minutes = Math.floor((time % 3600) / 60);\r\n  let seconds = Math.round(time % 60);\r\n\r\n  if (hours === 0) {\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  } else {\r\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\r\n      .toString()\r\n      .padStart(2, '0')}`;\r\n  }\r\n}\r\n\r\nconst denylistDomains = /(twitter|github)\\.com/i;\r\nconst failedUnfurls = {};\r\n\r\nfunction _unfurlMastodonLink(instance, url) {\r\n  const snapStates = snapshot(states);\r\n  if (denylistDomains.test(url)) {\r\n    return;\r\n  }\r\n  if (failedUnfurls[url]) {\r\n    return;\r\n  }\r\n  const instanceRegex = new RegExp(instance + '/');\r\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\r\n    return Promise.resolve(snapStates.unfurledLinks[url]);\r\n  }\r\n  console.debug('🦦 Unfurling URL', url);\r\n\r\n  let remoteInstanceFetch;\r\n  let theURL = url;\r\n\r\n  // https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n  if (/\\/\\/elk\\.[^\\/]+\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\r\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\r\n  }\r\n\r\n  // https://trunks.social/status/domain.com/@stest/123 -> https://domain.com/@stest/123\r\n  if (/\\/\\/trunks\\.[^\\/]+\\/status\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\r\n    theURL = theURL.replace(/trunks\\.[^\\/]+\\/status\\//i, '');\r\n  }\r\n\r\n  // https://phanpy.social/#/domain.com/s/123 -> https://domain.com/statuses/123\r\n  if (/\\/#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(theURL)) {\r\n    const urlAfterHash = theURL.split('/#/')[1];\r\n    const finalURL = urlAfterHash.replace(/\\/s\\//i, '/@fakeUsername/');\r\n    theURL = `https://${finalURL}`;\r\n  }\r\n\r\n  const urlObj = new URL(theURL);\r\n  const domain = urlObj.hostname;\r\n  const path = urlObj.pathname;\r\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\r\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\r\n  const statusMatch = statusRegex.exec(path);\r\n  if (statusMatch) {\r\n    const id = statusMatch[3];\r\n    const { masto } = api({ instance: domain });\r\n    remoteInstanceFetch = masto.v1.statuses\r\n      .$select(id)\r\n      .fetch()\r\n      .then((status) => {\r\n        if (status?.id) {\r\n          return {\r\n            status,\r\n            instance: domain,\r\n          };\r\n        } else {\r\n          throw new Error('No results');\r\n        }\r\n      });\r\n  }\r\n\r\n  const { masto } = api({ instance });\r\n  const mastoSearchFetch = masto.v2.search\r\n    .fetch({\r\n      q: theURL,\r\n      type: 'statuses',\r\n      resolve: true,\r\n      limit: 1,\r\n    })\r\n    .then((results) => {\r\n      if (results.statuses.length > 0) {\r\n        const status = results.statuses[0];\r\n        return {\r\n          status,\r\n          instance,\r\n        };\r\n      } else {\r\n        throw new Error('No results');\r\n      }\r\n    });\r\n\r\n  function handleFulfill(result) {\r\n    const { status, instance } = result;\r\n    const { id } = status;\r\n    const selfURL = `/${instance}/s/${id}`;\r\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\r\n    const data = {\r\n      id,\r\n      instance,\r\n      url: selfURL,\r\n    };\r\n    states.unfurledLinks[url] = data;\r\n    saveStatus(status, instance, {\r\n      skipThreading: true,\r\n    });\r\n    return data;\r\n  }\r\n  function handleCatch(e) {\r\n    failedUnfurls[url] = true;\r\n  }\r\n\r\n  if (remoteInstanceFetch) {\r\n    return Promise.any([remoteInstanceFetch, mastoSearchFetch])\r\n      .then(handleFulfill)\r\n      .catch(handleCatch);\r\n  } else {\r\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\r\n  }\r\n}\r\n\r\nfunction nicePostURL(url) {\r\n  if (!url) return;\r\n  const urlObj = new URL(url);\r\n  const { host, pathname } = urlObj;\r\n  const path = pathname.replace(/\\/$/, '');\r\n  // split only first slash\r\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\r\n  return (\r\n    <>\r\n      {host}\r\n      {username ? (\r\n        <>\r\n          /{username}\r\n          <wbr />\r\n          <span class=\"more-insignificant\">/{restPath}</span>\r\n        </>\r\n      ) : (\r\n        <span class=\"more-insignificant\">{path}</span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst unfurlMastodonLink = throttle(_unfurlMastodonLink);\r\n\r\nfunction FilteredStatus({ status, filterInfo, instance, containerProps = {} }) {\r\n  const {\r\n    id: statusID,\r\n    account: { avatar, avatarStatic, bot, group },\r\n    createdAt,\r\n    visibility,\r\n    reblog,\r\n  } = status;\r\n  const isReblog = !!reblog;\r\n  const filterTitleStr = filterInfo?.titlesStr || '';\r\n  const createdAtDate = new Date(createdAt);\r\n  const statusPeekText = statusPeek(status.reblog || status);\r\n\r\n  const [showPeek, setShowPeek] = useState(false);\r\n  const bindLongPressPeek = useLongPress(\r\n    () => {\r\n      setShowPeek(true);\r\n    },\r\n    {\r\n      threshold: 600,\r\n      captureEvent: true,\r\n      detect: 'touch',\r\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\r\n    },\r\n  );\r\n\r\n  const statusPeekRef = useTruncated();\r\n  const sKey =\r\n    statusKey(status.id, instance) +\r\n    ' ' +\r\n    (statusKey(reblog?.id, instance) || '');\r\n\r\n  const actualStatusID = reblog?.id || statusID;\r\n  const url = instance\r\n    ? `/${instance}/s/${actualStatusID}`\r\n    : `/s/${actualStatusID}`;\r\n\r\n  return (\r\n    <div\r\n      class={isReblog ? (group ? 'status-group' : 'status-reblog') : ''}\r\n      {...containerProps}\r\n      title={statusPeekText}\r\n      onContextMenu={(e) => {\r\n        e.preventDefault();\r\n        setShowPeek(true);\r\n      }}\r\n      {...bindLongPressPeek()}\r\n    >\r\n      <article data-state-post-id={sKey} class=\"status filtered\" tabindex=\"-1\">\r\n        <b\r\n          class=\"status-filtered-badge clickable badge-meta\"\r\n          title={filterTitleStr}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setShowPeek(true);\r\n          }}\r\n        >\r\n          <span>Filtered</span>\r\n          <span>{filterTitleStr}</span>\r\n        </b>{' '}\r\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\r\n        <span class=\"status-filtered-info\">\r\n          <span class=\"status-filtered-info-1\">\r\n            <NameText account={status.account} instance={instance} />{' '}\r\n            <Icon\r\n              icon={visibilityIconsMap[visibility]}\r\n              alt={visibilityText[visibility]}\r\n              size=\"s\"\r\n            />{' '}\r\n            {isReblog ? (\r\n              'boosted'\r\n            ) : (\r\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\r\n            )}\r\n          </span>\r\n          <span class=\"status-filtered-info-2\">\r\n            {isReblog && (\r\n              <>\r\n                <Avatar\r\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\r\n                  squircle={bot}\r\n                />{' '}\r\n              </>\r\n            )}\r\n            {statusPeekText}\r\n          </span>\r\n        </span>\r\n      </article>\r\n      {!!showPeek && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowPeek(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"filtered-status-peek\" class=\"sheet\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => setShowPeek(false)}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <Link\r\n                ref={statusPeekRef}\r\n                class=\"status-link\"\r\n                to={url}\r\n                onClick={() => {\r\n                  setShowPeek(false);\r\n                }}\r\n                data-read-more=\"Read more →\"\r\n              >\r\n                <Status status={status} instance={instance} size=\"s\" readOnly />\r\n              </Link>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\r\n  if (!id || !instance) return;\r\n  const snapStates = useSnapshot(states);\r\n  const sKey = statusKey(id, instance);\r\n  const quotes = snapStates.statusQuotes[sKey];\r\n  const uniqueQuotes = quotes?.filter(\r\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\r\n  );\r\n\r\n  if (!uniqueQuotes?.length) return;\r\n  if (level > 2) return;\r\n\r\n  return uniqueQuotes.map((q) => {\r\n    return (\r\n      <Link\r\n        key={q.instance + q.id}\r\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\r\n        class=\"status-card-link\"\r\n        data-read-more=\"Read more →\"\r\n      >\r\n        <Status\r\n          statusID={q.id}\r\n          instance={q.instance}\r\n          size=\"s\"\r\n          quoted={level + 1}\r\n        />\r\n      </Link>\r\n    );\r\n  });\r\n});\r\n\r\nexport default memo(Status);\r\n","import './compose.css';\r\n\r\nimport '@github/text-expander-element';\r\nimport equal from 'fast-deep-equal';\r\nimport { forwardRef } from 'preact/compat';\r\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport stringLength from 'string-length';\r\nimport { uid } from 'uid/single';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport supportedLanguages from '../data/status-supported-languages';\r\nimport urlRegex from '../data/url-regex';\r\nimport { api } from '../utils/api';\r\nimport db from '../utils/db';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport localeMatch from '../utils/locale-match';\r\nimport openCompose from '../utils/open-compose';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport states, { saveStatus } from '../utils/states';\r\nimport store from '../utils/store';\r\nimport {\r\n  getCurrentAccount,\r\n  getCurrentAccountNS,\r\n  getCurrentInstance,\r\n  getCurrentInstanceConfiguration,\r\n} from '../utils/store-utils';\r\nimport supports from '../utils/supports';\r\nimport useInterval from '../utils/useInterval';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport AccountBlock from './account-block';\r\n// import Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\nimport Modal from './modal';\r\nimport Status from './status';\r\n\r\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\r\n  const [code, common, native] = l;\r\n  acc[code] = {\r\n    common,\r\n    native,\r\n  };\r\n  return acc;\r\n}, {});\r\n\r\n/* NOTES:\r\n  - Max character limit includes BOTH status text and Content Warning text\r\n*/\r\n\r\nconst expiryOptions = {\r\n  '5 minutes': 5 * 60,\r\n  '30 minutes': 30 * 60,\r\n  '1 hour': 60 * 60,\r\n  '6 hours': 6 * 60 * 60,\r\n  '12 hours': 12 * 60 * 60,\r\n  '1 day': 24 * 60 * 60,\r\n  '3 days': 3 * 24 * 60 * 60,\r\n  '7 days': 7 * 24 * 60 * 60,\r\n};\r\nconst expirySeconds = Object.values(expiryOptions);\r\nconst oneDay = 24 * 60 * 60;\r\n\r\nconst expiresInFromExpiresAt = (expiresAt) => {\r\n  if (!expiresAt) return oneDay;\r\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\r\n  return expirySeconds.find((s) => s >= delta) || oneDay;\r\n};\r\n\r\nconst menu = document.createElement('ul');\r\nmenu.role = 'listbox';\r\nmenu.className = 'text-expander-menu';\r\n\r\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\r\nconst windowMargin = 16;\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      const { left, width } = entry.boundingClientRect;\r\n      const { innerWidth } = window;\r\n      if (left + width > innerWidth) {\r\n        menu.style.left = innerWidth - width - windowMargin + 'px';\r\n      }\r\n    }\r\n  });\r\n});\r\nobserver.observe(menu);\r\n\r\nconst DEFAULT_LANG = localeMatch(\r\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\r\n  supportedLanguages.map((l) => l[0]),\r\n  'en',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\r\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\r\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\r\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\r\nfunction countableText(inputText) {\r\n  return inputText\r\n    .replace(urlRegexObj, urlPlaceholder)\r\n    .replace(usernameRegex, '$1@$3');\r\n}\r\n\r\nfunction Compose({\r\n  onClose,\r\n  replyToStatus,\r\n  editStatus,\r\n  draftStatus,\r\n  standalone,\r\n  hasOpener,\r\n}) {\r\n  console.warn('RENDER COMPOSER');\r\n  const { masto, instance } = api();\r\n  const [uiState, setUIState] = useState('default');\r\n  const UID = useRef(draftStatus?.uid || uid());\r\n  console.log('Compose UID', UID.current);\r\n\r\n  const currentAccount = getCurrentAccount();\r\n  const currentAccountInfo = currentAccount.info;\r\n\r\n  const configuration = getCurrentInstanceConfiguration();\r\n  console.log('⚙️ Configuration', configuration);\r\n\r\n  const {\r\n    statuses: {\r\n      maxCharacters,\r\n      maxMediaAttachments,\r\n      charactersReservedPerUrl,\r\n    } = {},\r\n    mediaAttachments: {\r\n      supportedMimeTypes = [],\r\n      imageSizeLimit,\r\n      imageMatrixLimit,\r\n      videoSizeLimit,\r\n      videoMatrixLimit,\r\n      videoFrameRateLimit,\r\n    } = {},\r\n    polls: {\r\n      maxOptions,\r\n      maxCharactersPerOption,\r\n      maxExpiration,\r\n      minExpiration,\r\n    } = {},\r\n  } = configuration || {};\r\n\r\n  const textareaRef = useRef();\r\n  const spoilerTextRef = useRef();\r\n  const [visibility, setVisibility] = useState('public');\r\n  const [sensitive, setSensitive] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    store.session.get('currentLanguage') || DEFAULT_LANG,\r\n  );\r\n  const prevLanguage = useRef(language);\r\n  const [mediaAttachments, setMediaAttachments] = useState([]);\r\n  const [poll, setPoll] = useState(null);\r\n\r\n  const prefs = store.account.get('preferences') || {};\r\n\r\n  const oninputTextarea = () => {\r\n    if (!textareaRef.current) return;\r\n    textareaRef.current.dispatchEvent(new Event('input'));\r\n  };\r\n  const focusTextarea = () => {\r\n    setTimeout(() => {\r\n      console.debug('FOCUS textarea');\r\n      textareaRef.current?.focus();\r\n    }, 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (replyToStatus) {\r\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\r\n      if (spoilerText && spoilerTextRef.current) {\r\n        spoilerTextRef.current.value = spoilerText;\r\n      }\r\n      const mentions = new Set([\r\n        replyToStatus.account.acct,\r\n        ...replyToStatus.mentions.map((m) => m.acct),\r\n      ]);\r\n      const allMentions = [...mentions].filter(\r\n        (m) => m !== currentAccountInfo.acct,\r\n      );\r\n      if (allMentions.length > 0) {\r\n        textareaRef.current.value = `${allMentions\r\n          .map((m) => `@${m}`)\r\n          .join(' ')} `;\r\n        oninputTextarea();\r\n      }\r\n      focusTextarea();\r\n      setVisibility(\r\n        visibility === 'public' && prefs['posting:default:visibility']\r\n          ? prefs['posting:default:visibility']\r\n          : visibility,\r\n      );\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      setSensitive(sensitive && !!spoilerText);\r\n    } else if (editStatus) {\r\n      const { visibility, language, sensitive, poll, mediaAttachments } =\r\n        editStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      setUIState('loading');\r\n      (async () => {\r\n        try {\r\n          const statusSource = await masto.v1.statuses\r\n            .$select(editStatus.id)\r\n            .source.fetch();\r\n          console.log({ statusSource });\r\n          const { text, spoilerText } = statusSource;\r\n          textareaRef.current.value = text;\r\n          textareaRef.current.dataset.source = text;\r\n          oninputTextarea();\r\n          focusTextarea();\r\n          spoilerTextRef.current.value = spoilerText;\r\n          setVisibility(visibility);\r\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\r\n          setSensitive(sensitive);\r\n          setPoll(composablePoll);\r\n          setMediaAttachments(mediaAttachments);\r\n          setUIState('default');\r\n        } catch (e) {\r\n          console.error(e);\r\n          alert(e?.reason || e);\r\n          setUIState('error');\r\n        }\r\n      })();\r\n    } else {\r\n      focusTextarea();\r\n      console.log('Apply prefs', prefs);\r\n      if (prefs['posting:default:visibility']) {\r\n        setVisibility(prefs['posting:default:visibility']);\r\n      }\r\n      if (prefs['posting:default:language']) {\r\n        setLanguage(prefs['posting:default:language']);\r\n      }\r\n      if (prefs['posting:default:sensitive']) {\r\n        setSensitive(prefs['posting:default:sensitive']);\r\n      }\r\n    }\r\n    if (draftStatus) {\r\n      const {\r\n        status,\r\n        spoilerText,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      } = draftStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      textareaRef.current.value = status;\r\n      oninputTextarea();\r\n      focusTextarea();\r\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\r\n      if (visibility) setVisibility(visibility);\r\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\r\n      if (sensitive !== null) setSensitive(sensitive);\r\n      if (composablePoll) setPoll(composablePoll);\r\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\r\n    }\r\n  }, [draftStatus, editStatus, replyToStatus]);\r\n\r\n  const formRef = useRef();\r\n\r\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\r\n  const canClose = () => {\r\n    const { value, dataset } = textareaRef.current;\r\n\r\n    // check if loading\r\n    if (uiState === 'loading') {\r\n      console.log('canClose', { uiState });\r\n      return false;\r\n    }\r\n\r\n    // check for status and media attachments\r\n    const hasMediaAttachments = mediaAttachments.length > 0;\r\n    if (!value && !hasMediaAttachments) {\r\n      console.log('canClose', { value, mediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if all media attachments have IDs\r\n    const hasIDMediaAttachments =\r\n      mediaAttachments.length > 0 &&\r\n      mediaAttachments.every((media) => media.id);\r\n    if (hasIDMediaAttachments) {\r\n      console.log('canClose', { hasIDMediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if status contains only \"@acct\", if replying\r\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\r\n    const hasOnlyAcct =\r\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\r\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\r\n    if (!isSelf && hasOnlyAcct) {\r\n      console.log('canClose', { isSelf, hasOnlyAcct });\r\n      return true;\r\n    }\r\n\r\n    // check if status is same with source\r\n    const sameWithSource = value === dataset?.source;\r\n    if (sameWithSource) {\r\n      console.log('canClose', { sameWithSource });\r\n      return true;\r\n    }\r\n\r\n    console.log('canClose', {\r\n      value,\r\n      hasMediaAttachments,\r\n      hasIDMediaAttachments,\r\n      poll,\r\n      isSelf,\r\n      hasOnlyAcct,\r\n      sameWithSource,\r\n      uiState,\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  const confirmClose = () => {\r\n    if (!canClose()) {\r\n      const yes = confirm(beforeUnloadCopy);\r\n      return yes;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Show warning if user tries to close window with unsaved changes\r\n    const handleBeforeUnload = (e) => {\r\n      if (!canClose()) {\r\n        e.preventDefault();\r\n        e.returnValue = beforeUnloadCopy;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload, {\r\n      capture: true,\r\n    });\r\n    return () =>\r\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\r\n        capture: true,\r\n      });\r\n  }, []);\r\n\r\n  const getCharCount = () => {\r\n    const { value } = textareaRef.current;\r\n    const { value: spoilerText } = spoilerTextRef.current;\r\n    return stringLength(countableText(value)) + stringLength(spoilerText);\r\n  };\r\n  const updateCharCount = () => {\r\n    const count = getCharCount();\r\n    states.composerCharacterCount = count;\r\n  };\r\n  useEffect(updateCharCount, []);\r\n\r\n  const escDownRef = useRef(false);\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      escDownRef.current = true;\r\n      // This won't be true if this event is already handled and not propagated 🤞\r\n    },\r\n    {\r\n      enableOnFormTags: true,\r\n    },\r\n  );\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      if (!standalone && escDownRef.current && confirmClose()) {\r\n        onClose();\r\n      }\r\n      escDownRef.current = false;\r\n    },\r\n    {\r\n      enableOnFormTags: true,\r\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\r\n      keyup: true,\r\n      ignoreEventWhen: (e) => {\r\n        const modals = document.querySelectorAll('#modal-container > *');\r\n        const hasModal = !!modals;\r\n        const hasOnlyComposer =\r\n          modals.length === 1 && modals[0].querySelector('#compose-container');\r\n        return hasModal && !hasOnlyComposer;\r\n      },\r\n    },\r\n  );\r\n\r\n  const prevBackgroundDraft = useRef({});\r\n  const draftKey = () => {\r\n    const ns = getCurrentAccountNS();\r\n    return `${ns}#${UID.current}`;\r\n  };\r\n  const saveUnsavedDraft = () => {\r\n    // Not enabling this for editing status\r\n    // I don't think this warrant a draft mode for a status that's already posted\r\n    // Maybe it could be a big edit change but it should be rare\r\n    if (editStatus) return;\r\n    const key = draftKey();\r\n    const backgroundDraft = {\r\n      key,\r\n      replyTo: replyToStatus\r\n        ? {\r\n            /* Smaller payload of replyToStatus. Reasons:\r\n              - No point storing whole thing\r\n              - Could have media attachments\r\n              - Could be deleted/edited later\r\n            */\r\n            id: replyToStatus.id,\r\n            account: {\r\n              id: replyToStatus.account.id,\r\n              username: replyToStatus.account.username,\r\n              acct: replyToStatus.account.acct,\r\n            },\r\n          }\r\n        : null,\r\n      draftStatus: {\r\n        uid: UID.current,\r\n        status: textareaRef.current.value,\r\n        spoilerText: spoilerTextRef.current.value,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      },\r\n    };\r\n    if (!equal(backgroundDraft, prevBackgroundDraft.current) && !canClose()) {\r\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\r\n      db.drafts\r\n        .set(key, {\r\n          ...backgroundDraft,\r\n          state: 'unsaved',\r\n          updatedAt: Date.now(),\r\n        })\r\n        .then(() => {\r\n          console.debug('DRAFT saved', key, backgroundDraft);\r\n        })\r\n        .catch((e) => {\r\n          console.error('DRAFT failed', key, e);\r\n        });\r\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\r\n    }\r\n  };\r\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\r\n  useEffect(() => {\r\n    saveUnsavedDraft();\r\n    // If unmounted, means user discarded the draft\r\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\r\n    return () => {\r\n      db.drafts.del(draftKey());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleItems = (e) => {\r\n      const { items } = e.clipboardData || e.dataTransfer;\r\n      const files = [];\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        if (item.kind === 'file') {\r\n          const file = item.getAsFile();\r\n          if (file && supportedMimeTypes.includes(file.type)) {\r\n            files.push(file);\r\n          }\r\n        }\r\n      }\r\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\r\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n        return;\r\n      }\r\n      console.log({ files });\r\n      if (files.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\r\n        const max = maxMediaAttachments - mediaAttachments.length;\r\n        const allowedFiles = files.slice(0, max);\r\n        if (allowedFiles.length <= 0) {\r\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\r\n          return;\r\n        }\r\n        const mediaFiles = allowedFiles.map((file) => ({\r\n          file,\r\n          type: file.type,\r\n          size: file.size,\r\n          url: URL.createObjectURL(file),\r\n          id: null,\r\n          description: null,\r\n        }));\r\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\r\n      }\r\n    };\r\n    window.addEventListener('paste', handleItems);\r\n    const handleDragover = (e) => {\r\n      // Prevent default if there's files\r\n      if (e.dataTransfer.items.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n    window.addEventListener('dragover', handleDragover);\r\n    window.addEventListener('drop', handleItems);\r\n    return () => {\r\n      window.removeEventListener('paste', handleItems);\r\n      window.removeEventListener('dragover', handleDragover);\r\n      window.removeEventListener('drop', handleItems);\r\n    };\r\n  }, [mediaAttachments]);\r\n\r\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\r\n\r\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\r\n    const topLanguages = [];\r\n    const restLanguages = [];\r\n    const { contentTranslationHideLanguages = [] } = states.settings;\r\n    supportedLanguages.forEach((l) => {\r\n      const [code] = l;\r\n      if (\r\n        code === language ||\r\n        code === prevLanguage.current ||\r\n        code === DEFAULT_LANG ||\r\n        contentTranslationHideLanguages.includes(code)\r\n      ) {\r\n        topLanguages.push(l);\r\n      } else {\r\n        restLanguages.push(l);\r\n      }\r\n    });\r\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\r\n      if (codeA === language) return -1;\r\n      if (codeB === language) return 1;\r\n      return commonA.localeCompare(commonB);\r\n    });\r\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\r\n      commonA.localeCompare(commonB),\r\n    );\r\n    return [topLanguages, restLanguages];\r\n  }, [language]);\r\n\r\n  return (\r\n    <div id=\"compose-container-outer\">\r\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\r\n        <div class=\"compose-top\">\r\n          {currentAccountInfo?.avatarStatic && (\r\n            // <Avatar\r\n            //   url={currentAccountInfo.avatarStatic}\r\n            //   size=\"xl\"\r\n            //   alt={currentAccountInfo.username}\r\n            //   squircle={currentAccountInfo?.bot}\r\n            // />\r\n            <AccountBlock\r\n              account={currentAccountInfo}\r\n              accountInstance={currentAccount.instanceURL}\r\n              hideDisplayName\r\n            />\r\n          )}\r\n          {!standalone ? (\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  const newWin = openCompose({\r\n                    editStatus,\r\n                    replyToStatus,\r\n                    draftStatus: {\r\n                      uid: UID.current,\r\n                      status: textareaRef.current.value,\r\n                      spoilerText: spoilerTextRef.current.value,\r\n                      visibility,\r\n                      language,\r\n                      sensitive,\r\n                      poll,\r\n                      mediaAttachments,\r\n                    },\r\n                  });\r\n\r\n                  if (!newWin) {\r\n                    return;\r\n                  }\r\n\r\n                  onClose();\r\n                }}\r\n              >\r\n                <Icon icon=\"popout\" alt=\"Pop out\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"light close-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  if (confirmClose()) {\r\n                    onClose();\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon=\"x\" />\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            hasOpener && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  if (!window.opener) {\r\n                    alert('Looks like you closed the parent window.');\r\n                    return;\r\n                  }\r\n\r\n                  if (window.opener.__STATES__.showCompose) {\r\n                    const yes = confirm(\r\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\r\n                    );\r\n                    if (!yes) return;\r\n                  }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  onClose({\r\n                    fn: () => {\r\n                      const passData = {\r\n                        editStatus,\r\n                        replyToStatus,\r\n                        draftStatus: {\r\n                          uid: UID.current,\r\n                          status: textareaRef.current.value,\r\n                          spoilerText: spoilerTextRef.current.value,\r\n                          visibility,\r\n                          language,\r\n                          sensitive,\r\n                          poll,\r\n                          mediaAttachments,\r\n                        },\r\n                      };\r\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\r\n                      window.opener.__STATES__.showCompose = true;\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"popin\" alt=\"Pop in\" />\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n        {!!replyToStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={replyToStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend reply-to\">\r\n              Replying to @\r\n              {replyToStatus.account.acct || replyToStatus.account.username}\r\n              &rsquo;s post\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!!editStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={editStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend\">Editing source post</div>\r\n          </div>\r\n        )}\r\n        <form\r\n          ref={formRef}\r\n          class={`form-visibility-${visibility}`}\r\n          style={{\r\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\r\n            opacity: uiState === 'loading' ? 0.5 : 1,\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n              formRef.current.dispatchEvent(\r\n                new Event('submit', { cancelable: true }),\r\n              );\r\n            }\r\n          }}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(e.target);\r\n            const entries = Object.fromEntries(formData.entries());\r\n            console.log('ENTRIES', entries);\r\n            let { status, visibility, sensitive, spoilerText } = entries;\r\n\r\n            // Pre-cleanup\r\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\r\n\r\n            // Validation\r\n            /* Let the backend validate this\r\n          if (stringLength(status) > maxCharacters) {\r\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\r\n            return;\r\n          }\r\n          if (\r\n            sensitive &&\r\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\r\n          ) {\r\n            alert(\r\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\r\n            );\r\n            return;\r\n          }\r\n          */\r\n            if (poll) {\r\n              if (poll.options.length < 2) {\r\n                alert('Poll must have at least 2 options');\r\n                return;\r\n              }\r\n              if (poll.options.some((option) => option === '')) {\r\n                alert('Some poll choices are empty');\r\n                return;\r\n              }\r\n            }\r\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\r\n\r\n            if (mediaAttachments.length > 0) {\r\n              // If there are media attachments, check if they have no descriptions\r\n              const hasNoDescriptions = mediaAttachments.some(\r\n                (media) => !media.description?.trim?.(),\r\n              );\r\n              if (hasNoDescriptions) {\r\n                const yes = confirm(\r\n                  'Some media have no descriptions. Continue?',\r\n                );\r\n                if (!yes) return;\r\n              }\r\n            }\r\n\r\n            // Post-cleanup\r\n            spoilerText = (sensitive && spoilerText) || undefined;\r\n            status = status === '' ? undefined : status;\r\n\r\n            setUIState('loading');\r\n            (async () => {\r\n              try {\r\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\r\n                if (mediaAttachments.length > 0) {\r\n                  // Upload media attachments first\r\n                  const mediaPromises = mediaAttachments.map((attachment) => {\r\n                    const { file, description, id } = attachment;\r\n                    console.log('UPLOADING', attachment);\r\n                    if (id) {\r\n                      // If already uploaded\r\n                      return attachment;\r\n                    } else {\r\n                      const params = removeNullUndefined({\r\n                        file,\r\n                        description,\r\n                      });\r\n                      return masto.v2.media.create(params).then((res) => {\r\n                        if (res.id) {\r\n                          attachment.id = res.id;\r\n                        }\r\n                        return res;\r\n                      });\r\n                    }\r\n                  });\r\n                  const results = await Promise.allSettled(mediaPromises);\r\n\r\n                  // If any failed, return\r\n                  if (\r\n                    results.some((result) => {\r\n                      return result.status === 'rejected' || !result.value?.id;\r\n                    })\r\n                  ) {\r\n                    setUIState('error');\r\n                    // Alert all the reasons\r\n                    results.forEach((result) => {\r\n                      if (result.status === 'rejected') {\r\n                        console.error(result);\r\n                        alert(result.reason || `Attachment #${i} failed`);\r\n                      }\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  console.log({ results, mediaAttachments });\r\n                }\r\n\r\n                /* NOTE:\r\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\r\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\r\n\r\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\r\n              */\r\n                let params = {\r\n                  status,\r\n                  // spoilerText,\r\n                  spoiler_text: spoilerText,\r\n                  language,\r\n                  sensitive,\r\n                  poll,\r\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\r\n                  media_ids: mediaAttachments.map(\r\n                    (attachment) => attachment.id,\r\n                  ),\r\n                };\r\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\r\n                  params.media_attributes = mediaAttachments.map(\r\n                    (attachment) => {\r\n                      return {\r\n                        id: attachment.id,\r\n                        description: attachment.description,\r\n                        // focus\r\n                        // thumbnail\r\n                      };\r\n                    },\r\n                  );\r\n                } else if (!editStatus) {\r\n                  params.visibility = visibility;\r\n                  // params.inReplyToId = replyToStatus?.id || undefined;\r\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\r\n                }\r\n                params = removeNullUndefined(params);\r\n                console.log('POST', params);\r\n\r\n                let newStatus;\r\n                if (editStatus) {\r\n                  newStatus = await masto.v1.statuses\r\n                    .$select(editStatus.id)\r\n                    .update(params);\r\n                  saveStatus(newStatus, instance, {\r\n                    skipThreading: true,\r\n                  });\r\n                } else {\r\n                  try {\r\n                    newStatus = await masto.v1.statuses.create(params, {\r\n                      idempotencyKey: UID.current,\r\n                    });\r\n                  } catch (_) {\r\n                    // If idempotency key fails, try again without it\r\n                    newStatus = await masto.v1.statuses.create(params);\r\n                  }\r\n                }\r\n                setUIState('default');\r\n\r\n                // Close\r\n                onClose({\r\n                  // type: post, reply, edit\r\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\r\n                  newStatus,\r\n                  instance,\r\n                });\r\n              } catch (e) {\r\n                console.error(e);\r\n                alert(e?.reason || e);\r\n                setUIState('error');\r\n              }\r\n            })();\r\n          }}\r\n        >\r\n          <div class=\"toolbar stretch\">\r\n            <input\r\n              ref={spoilerTextRef}\r\n              type=\"text\"\r\n              name=\"spoilerText\"\r\n              placeholder=\"Content warning\"\r\n              disabled={uiState === 'loading'}\r\n              class=\"spoiler-text-field\"\r\n              lang={language}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              style={{\r\n                opacity: sensitive ? 1 : 0,\r\n                pointerEvents: sensitive ? 'auto' : 'none',\r\n              }}\r\n              onInput={() => {\r\n                updateCharCount();\r\n              }}\r\n            />\r\n            <label\r\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\r\n              title=\"Content warning or sensitive media\"\r\n            >\r\n              <input\r\n                name=\"sensitive\"\r\n                type=\"checkbox\"\r\n                checked={sensitive}\r\n                disabled={uiState === 'loading'}\r\n                onChange={(e) => {\r\n                  const sensitive = e.target.checked;\r\n                  setSensitive(sensitive);\r\n                  if (sensitive) {\r\n                    spoilerTextRef.current?.focus();\r\n                  } else {\r\n                    textareaRef.current?.focus();\r\n                  }\r\n                }}\r\n              />\r\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n            </label>{' '}\r\n            <label\r\n              class={`toolbar-button ${\r\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\r\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\r\n              title={`Visibility: ${visibility}`}\r\n            >\r\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\r\n              <select\r\n                name=\"visibility\"\r\n                value={visibility}\r\n                onChange={(e) => {\r\n                  setVisibility(e.target.value);\r\n                }}\r\n                disabled={uiState === 'loading' || !!editStatus}\r\n              >\r\n                <option value=\"public\">\r\n                  Public <Icon icon=\"earth\" />\r\n                </option>\r\n                <option value=\"unlisted\">Unlisted</option>\r\n                <option value=\"private\">Followers only</option>\r\n                <option value=\"direct\">Private mention</option>\r\n              </select>\r\n            </label>{' '}\r\n          </div>\r\n          <Textarea\r\n            ref={textareaRef}\r\n            placeholder={\r\n              replyToStatus\r\n                ? 'Post your reply'\r\n                : editStatus\r\n                ? 'Edit your post'\r\n                : 'What are you doing?'\r\n            }\r\n            required={mediaAttachments?.length === 0}\r\n            disabled={uiState === 'loading'}\r\n            lang={language}\r\n            onInput={() => {\r\n              updateCharCount();\r\n            }}\r\n            maxCharacters={maxCharacters}\r\n            performSearch={(params) => {\r\n              const { type, q, limit } = params;\r\n              if (type === 'accounts') {\r\n                return masto.v1.accounts.search.list({\r\n                  q,\r\n                  limit,\r\n                  resolve: false,\r\n                });\r\n              }\r\n              return masto.v2.search.fetch(params);\r\n            }}\r\n          />\r\n          {mediaAttachments?.length > 0 && (\r\n            <div class=\"media-attachments\">\r\n              {mediaAttachments.map((attachment, i) => {\r\n                const { id, file } = attachment;\r\n                const fileID = file?.size + file?.type + file?.name;\r\n                return (\r\n                  <MediaAttachment\r\n                    key={id || fileID || i}\r\n                    attachment={attachment}\r\n                    disabled={uiState === 'loading'}\r\n                    lang={language}\r\n                    onDescriptionChange={(value) => {\r\n                      setMediaAttachments((attachments) => {\r\n                        const newAttachments = [...attachments];\r\n                        newAttachments[i].description = value;\r\n                        return newAttachments;\r\n                      });\r\n                    }}\r\n                    onRemove={() => {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.filter((_, j) => j !== i);\r\n                      });\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n              <label class=\"media-sensitive\">\r\n                <input\r\n                  name=\"sensitive\"\r\n                  type=\"checkbox\"\r\n                  checked={sensitive}\r\n                  disabled={uiState === 'loading'}\r\n                  onChange={(e) => {\r\n                    const sensitive = e.target.checked;\r\n                    setSensitive(sensitive);\r\n                  }}\r\n                />{' '}\r\n                <span>Mark media as sensitive</span>{' '}\r\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n              </label>\r\n            </div>\r\n          )}\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              maxOptions={maxOptions}\r\n              maxExpiration={maxExpiration}\r\n              minExpiration={minExpiration}\r\n              maxCharactersPerOption={maxCharactersPerOption}\r\n              poll={poll}\r\n              disabled={uiState === 'loading'}\r\n              onInput={(poll) => {\r\n                if (poll) {\r\n                  const newPoll = { ...poll };\r\n                  setPoll(newPoll);\r\n                } else {\r\n                  setPoll(null);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          <div\r\n            class=\"toolbar wrap\"\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span>\r\n              <label class=\"toolbar-button\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept={supportedMimeTypes.join(',')}\r\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\r\n                  disabled={\r\n                    uiState === 'loading' ||\r\n                    mediaAttachments.length >= maxMediaAttachments ||\r\n                    !!poll\r\n                  }\r\n                  onChange={(e) => {\r\n                    const files = e.target.files;\r\n                    if (!files) return;\r\n\r\n                    const mediaFiles = Array.from(files).map((file) => ({\r\n                      file,\r\n                      type: file.type,\r\n                      size: file.size,\r\n                      url: URL.createObjectURL(file),\r\n                      id: null, // indicate uploaded state\r\n                      description: null,\r\n                    }));\r\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\r\n\r\n                    // Validate max media attachments\r\n                    if (\r\n                      mediaAttachments.length + mediaFiles.length >\r\n                      maxMediaAttachments\r\n                    ) {\r\n                      alert(\r\n                        `You can only attach up to ${maxMediaAttachments} files.`,\r\n                      );\r\n                    } else {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.concat(mediaFiles);\r\n                      });\r\n                    }\r\n                    // Reset\r\n                    e.target.value = '';\r\n                  }}\r\n                />\r\n                <Icon icon=\"attachment\" />\r\n              </label>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={\r\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\r\n                }\r\n                onClick={() => {\r\n                  setPoll({\r\n                    options: ['', ''],\r\n                    expiresIn: 24 * 60 * 60, // 1 day\r\n                    multiple: false,\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"poll\" alt=\"Add poll\" />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  setShowEmoji2Picker(true);\r\n                }}\r\n              >\r\n                <Icon icon=\"emoji2\" />\r\n              </button>\r\n            </span>\r\n            <div class=\"spacer\" />\r\n            {uiState === 'loading' ? (\r\n              <Loader abrupt />\r\n            ) : (\r\n              <CharCountMeter\r\n                maxCharacters={maxCharacters}\r\n                hidden={uiState === 'loading'}\r\n              />\r\n            )}\r\n            <label\r\n              class={`toolbar-button ${\r\n                language !== prevLanguage.current ? 'highlight' : ''\r\n              }`}\r\n            >\r\n              <span class=\"icon-text\">\r\n                {supportedLanguagesMap[language]?.native}\r\n              </span>\r\n              <select\r\n                name=\"language\"\r\n                value={language}\r\n                onChange={(e) => {\r\n                  const { value } = e.target;\r\n                  setLanguage(value || DEFAULT_LANG);\r\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\r\n                }}\r\n                disabled={uiState === 'loading'}\r\n              >\r\n                {topSupportedLanguages.map(([code, common, native]) => (\r\n                  <option value={code} key={code}>\r\n                    {common} ({native})\r\n                  </option>\r\n                ))}\r\n                <hr />\r\n                {restSupportedLanguages.map(([code, common, native]) => (\r\n                  <option value={code} key={code}>\r\n                    {common} ({native})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>{' '}\r\n            <button\r\n              type=\"submit\"\r\n              class=\"large\"\r\n              disabled={uiState === 'loading'}\r\n            >\r\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showEmoji2Picker && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEmoji2Picker(false);\r\n            }\r\n          }}\r\n        >\r\n          <CustomEmojisModal\r\n            masto={masto}\r\n            instance={instance}\r\n            onClose={() => {\r\n              setShowEmoji2Picker(false);\r\n            }}\r\n            onSelect={(emoji) => {\r\n              const emojiWithSpace = ` ${emoji} `;\r\n              const textarea = textareaRef.current;\r\n              if (!textarea) return;\r\n              const { selectionStart, selectionEnd } = textarea;\r\n              const text = textarea.value;\r\n              const newText =\r\n                text.slice(0, selectionStart) +\r\n                emojiWithSpace +\r\n                text.slice(selectionEnd);\r\n              textarea.value = newText;\r\n              textarea.selectionStart = textarea.selectionEnd =\r\n                selectionEnd + emojiWithSpace.length;\r\n              textarea.focus();\r\n              textarea.dispatchEvent(new Event('input'));\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction autoResizeTextarea(textarea) {\r\n  if (!textarea) return;\r\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\r\n  if (offsetHeight < window.innerHeight) {\r\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\r\n    // No idea why it does that, will re-investigate in far future\r\n    const offset = offsetHeight - clientHeight;\r\n    textarea.style.height = value ? scrollHeight + offset + 'px' : null;\r\n  }\r\n}\r\n\r\nconst Textarea = forwardRef((props, ref) => {\r\n  const { masto } = api();\r\n  const [text, setText] = useState(ref.current?.value || '');\r\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\r\n  const snapStates = useSnapshot(states);\r\n  // const charCount = snapStates.composerCharacterCount;\r\n\r\n  const customEmojis = useRef();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        console.log({ emojis });\r\n        customEmojis.current = emojis;\r\n      } catch (e) {\r\n        // silent fail\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const textExpanderRef = useRef();\r\n  const textExpanderTextRef = useRef('');\r\n  useEffect(() => {\r\n    let handleChange, handleValue, handleCommited;\r\n    if (textExpanderRef.current) {\r\n      handleChange = (e) => {\r\n        // console.log('text-expander-change', e);\r\n        const { key, provide, text } = e.detail;\r\n        textExpanderTextRef.current = text;\r\n\r\n        if (text === '') {\r\n          provide(\r\n            Promise.resolve({\r\n              matched: false,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (key === ':') {\r\n          // const emojis = customEmojis.current.filter((emoji) =>\r\n          //   emoji.shortcode.startsWith(text),\r\n          // );\r\n          const emojis = filterShortcodes(customEmojis.current, text);\r\n          let html = '';\r\n          emojis.forEach((emoji) => {\r\n            const { shortcode, url } = emoji;\r\n            html += `\r\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\r\n                <img src=\"${encodeHTML(\r\n                  url,\r\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \r\n                :${encodeHTML(shortcode)}:\r\n              </li>`;\r\n          });\r\n          // console.log({ emojis, html });\r\n          menu.innerHTML = html;\r\n          provide(\r\n            Promise.resolve({\r\n              matched: emojis.length > 0,\r\n              fragment: menu,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        const type = {\r\n          '@': 'accounts',\r\n          '#': 'hashtags',\r\n        }[key];\r\n        provide(\r\n          new Promise((resolve) => {\r\n            const searchResults = performSearch({\r\n              type,\r\n              q: text,\r\n              limit: 5,\r\n            });\r\n            searchResults.then((value) => {\r\n              if (text !== textExpanderTextRef.current) {\r\n                return;\r\n              }\r\n              console.log({ value, type, v: value[type] });\r\n              const results = value[type] || value;\r\n              console.log('RESULTS', value, results);\r\n              let html = '';\r\n              results.forEach((result) => {\r\n                const {\r\n                  name,\r\n                  avatarStatic,\r\n                  displayName,\r\n                  username,\r\n                  acct,\r\n                  emojis,\r\n                  history,\r\n                } = result;\r\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\r\n                // const item = menuItem.cloneNode();\r\n                if (acct) {\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\r\n                      <span class=\"avatar\">\r\n                        <img src=\"${encodeHTML(\r\n                          avatarStatic,\r\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\r\n                      </span>\r\n                      <span>\r\n                        <b>${displayNameWithEmoji || username}</b>\r\n                        <br>@${encodeHTML(acct)}\r\n                      </span>\r\n                    </li>\r\n                  `;\r\n                } else {\r\n                  const total = history?.reduce?.(\r\n                    (acc, cur) => acc + +cur.uses,\r\n                    0,\r\n                  );\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\r\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\r\n                      ${\r\n                        total\r\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\r\n                          : ''\r\n                      }\r\n                    </li>\r\n                  `;\r\n                }\r\n                menu.innerHTML = html;\r\n              });\r\n              console.log('MENU', results, menu);\r\n              resolve({\r\n                matched: results.length > 0,\r\n                fragment: menu,\r\n              });\r\n            });\r\n          }),\r\n        );\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-change',\r\n        handleChange,\r\n      );\r\n\r\n      handleValue = (e) => {\r\n        const { key, item } = e.detail;\r\n        if (key === ':') {\r\n          e.detail.value = `:${item.dataset.value}:`;\r\n        } else {\r\n          e.detail.value = `${key}${item.dataset.value}`;\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-value',\r\n        handleValue,\r\n      );\r\n\r\n      handleCommited = (e) => {\r\n        const { input } = e.detail;\r\n        setText(input.value);\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-committed',\r\n        handleCommited,\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (textExpanderRef.current) {\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-change',\r\n          handleChange,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-value',\r\n          handleValue,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-committed',\r\n          handleCommited,\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <text-expander ref={textExpanderRef} keys=\"@ # :\">\r\n      <textarea\r\n        class=\"compose-field\"\r\n        autoCapitalize=\"sentences\"\r\n        autoComplete=\"on\"\r\n        autoCorrect=\"on\"\r\n        spellCheck=\"true\"\r\n        dir=\"auto\"\r\n        rows=\"6\"\r\n        cols=\"50\"\r\n        {...textareaProps}\r\n        ref={ref}\r\n        name=\"status\"\r\n        value={text}\r\n        onKeyDown={(e) => {\r\n          // Get line before cursor position after pressing 'Enter'\r\n          const { key, target } = e;\r\n          if (key === 'Enter') {\r\n            try {\r\n              const { value, selectionStart } = target;\r\n              const textBeforeCursor = value.slice(0, selectionStart);\r\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\r\n              if (lastLine) {\r\n                // If line starts with \"- \" or \"12. \"\r\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\r\n                  // insert \"- \" at cursor position\r\n                  const [_, preSpaces, bullet, postSpaces, anything] =\r\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\r\n                  if (anything) {\r\n                    e.preventDefault();\r\n                    const [number] = bullet.match(/\\d+/) || [];\r\n                    const newBullet = number ? `${+number + 1}.` : '-';\r\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\r\n                    target.setRangeText(text, selectionStart, selectionStart);\r\n                    const pos = selectionStart + text.length;\r\n                    target.setSelectionRange(pos, pos);\r\n                  } else {\r\n                    // trim the line before the cursor, then insert new line\r\n                    const pos = selectionStart - lastLine.length;\r\n                    target.setRangeText('', pos, selectionStart);\r\n                  }\r\n                  autoResizeTextarea(target);\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // silent fail\r\n              console.error(e);\r\n            }\r\n          }\r\n        }}\r\n        onInput={(e) => {\r\n          const { target } = e;\r\n          setText(target.value);\r\n          autoResizeTextarea(target);\r\n          props.onInput?.(e);\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          height: '4em',\r\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\r\n        }}\r\n      />\r\n    </text-expander>\r\n  );\r\n});\r\n\r\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\r\n  const snapStates = useSnapshot(states);\r\n  const charCount = snapStates.composerCharacterCount;\r\n  const leftChars = maxCharacters - charCount;\r\n  if (hidden) {\r\n    return <meter class=\"donut\" hidden />;\r\n  }\r\n  return (\r\n    <meter\r\n      class={`donut ${\r\n        leftChars <= -10\r\n          ? 'explode'\r\n          : leftChars <= 0\r\n          ? 'danger'\r\n          : leftChars <= 20\r\n          ? 'warning'\r\n          : ''\r\n      }`}\r\n      value={charCount}\r\n      max={maxCharacters}\r\n      data-left={leftChars}\r\n      title={`${leftChars}/${maxCharacters}`}\r\n      style={{\r\n        '--percentage': (charCount / maxCharacters) * 100,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction MediaAttachment({\r\n  attachment,\r\n  disabled,\r\n  lang,\r\n  onDescriptionChange = () => {},\r\n  onRemove = () => {},\r\n}) {\r\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\r\n  const { type, id, file } = attachment;\r\n  const url = useMemo(\r\n    () => (file ? URL.createObjectURL(file) : attachment.url),\r\n    [file, attachment.url],\r\n  );\r\n  console.log({ attachment });\r\n  const [description, setDescription] = useState(attachment.description);\r\n  const suffixType = type.split('/')[0];\r\n  const debouncedOnDescriptionChange = useDebouncedCallback(\r\n    onDescriptionChange,\r\n    250,\r\n  );\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const textareaRef = useRef(null);\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showModal && textareaRef.current) {\r\n      timer = setTimeout(() => {\r\n        textareaRef.current.focus();\r\n      }, 100);\r\n    }\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [showModal]);\r\n\r\n  const descTextarea = (\r\n    <>\r\n      {!!id && !supportsEdit ? (\r\n        <div class=\"media-desc\">\r\n          <span class=\"tag\">Uploaded</span>\r\n          <p title={description}>\r\n            {attachment.description || <i>No description</i>}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={description || ''}\r\n          lang={lang}\r\n          placeholder={\r\n            {\r\n              image: 'Image description',\r\n              video: 'Video description',\r\n              audio: 'Audio description',\r\n            }[suffixType]\r\n          }\r\n          autoCapitalize=\"sentences\"\r\n          autoComplete=\"on\"\r\n          autoCorrect=\"on\"\r\n          spellCheck=\"true\"\r\n          dir=\"auto\"\r\n          disabled={disabled}\r\n          maxlength=\"1500\" // Not unicode-aware :(\r\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\r\n          onInput={(e) => {\r\n            const { value } = e.target;\r\n            setDescription(value);\r\n            debouncedOnDescriptionChange(value);\r\n          }}\r\n        ></textarea>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div class=\"media-attachment\">\r\n        <div\r\n          class=\"media-preview\"\r\n          tabIndex=\"0\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          {suffixType === 'image' ? (\r\n            <img src={url} alt=\"\" />\r\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n            <video src={url} playsinline muted />\r\n          ) : suffixType === 'audio' ? (\r\n            <audio src={url} controls />\r\n          ) : null}\r\n        </div>\r\n        {descTextarea}\r\n        <div class=\"media-aside\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain close-button\"\r\n            disabled={disabled}\r\n            onClick={onRemove}\r\n          >\r\n            <Icon icon=\"x\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          class=\"light\"\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowModal(false);\r\n            }\r\n          }}\r\n        >\r\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" />\r\n            </button>\r\n            <header>\r\n              <h2>\r\n                {\r\n                  {\r\n                    image: 'Edit image description',\r\n                    video: 'Edit video description',\r\n                    audio: 'Edit audio description',\r\n                  }[suffixType]\r\n                }\r\n              </h2>\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <div class=\"media-preview\">\r\n                {suffixType === 'image' ? (\r\n                  <img src={url} alt=\"\" />\r\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n                  <video src={url} playsinline controls />\r\n                ) : suffixType === 'audio' ? (\r\n                  <audio src={url} controls />\r\n                ) : null}\r\n              </div>\r\n              <div class=\"media-form\">\r\n                {descTextarea}\r\n                <footer>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"light block\"\r\n                    onClick={() => {\r\n                      setShowModal(false);\r\n                    }}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Poll({\r\n  lang,\r\n  poll,\r\n  disabled,\r\n  onInput = () => {},\r\n  maxOptions,\r\n  maxExpiration,\r\n  minExpiration,\r\n  maxCharactersPerOption,\r\n}) {\r\n  const { options, expiresIn, multiple } = poll;\r\n\r\n  return (\r\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\r\n      <div class=\"poll-choices\">\r\n        {options.map((option, i) => (\r\n          <div class=\"poll-choice\" key={i}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={option}\r\n              disabled={disabled}\r\n              maxlength={maxCharactersPerOption}\r\n              placeholder={`Choice ${i + 1}`}\r\n              lang={lang}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              onInput={(e) => {\r\n                const { value } = e.target;\r\n                options[i] = value;\r\n                onInput(poll);\r\n              }}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"plain2 poll-button\"\r\n              disabled={disabled || options.length <= 1}\r\n              onClick={() => {\r\n                options.splice(i, 1);\r\n                onInput(poll);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" size=\"s\" />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain2 poll-button\"\r\n          disabled={disabled || options.length >= maxOptions}\r\n          onClick={() => {\r\n            options.push('');\r\n            onInput(poll);\r\n          }}\r\n        >\r\n          +\r\n        </button>{' '}\r\n        <label class=\"multiple-choices\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={multiple}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { checked } = e.target;\r\n              poll.multiple = checked;\r\n              onInput(poll);\r\n            }}\r\n          />{' '}\r\n          Multiple choices\r\n        </label>\r\n        <label class=\"expires-in\">\r\n          Duration{' '}\r\n          <select\r\n            value={expiresIn}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n              poll.expiresIn = value;\r\n              onInput(poll);\r\n            }}\r\n          >\r\n            {Object.entries(expiryOptions)\r\n              .filter(([label, value]) => {\r\n                return value >= minExpiration && value <= maxExpiration;\r\n              })\r\n              .map(([label, value]) => (\r\n                <option value={value} key={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain remove-poll-button\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            onInput(null);\r\n          }}\r\n        >\r\n          Remove poll\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction filterShortcodes(emojis, searchTerm) {\r\n  searchTerm = searchTerm.toLowerCase();\r\n\r\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\r\n  return emojis\r\n    .sort((a, b) => {\r\n      let aLower = a.shortcode.toLowerCase();\r\n      let bLower = b.shortcode.toLowerCase();\r\n\r\n      let aStartsWith = aLower.startsWith(searchTerm);\r\n      let bStartsWith = bLower.startsWith(searchTerm);\r\n      let aContains = aLower.includes(searchTerm);\r\n      let bContains = bLower.includes(searchTerm);\r\n      let bothStartWith = aStartsWith && bStartsWith;\r\n      let bothContain = aContains && bContains;\r\n\r\n      return bothStartWith\r\n        ? a.length - b.length\r\n        : aStartsWith\r\n        ? -1\r\n        : bStartsWith\r\n        ? 1\r\n        : bothContain\r\n        ? a.length - b.length\r\n        : aContains\r\n        ? -1\r\n        : bContains\r\n        ? 1\r\n        : 0;\r\n    })\r\n    .slice(0, 5);\r\n}\r\n\r\nfunction encodeHTML(str) {\r\n  return str.replace(/[&<>\"']/g, function (char) {\r\n    return '&#' + char.charCodeAt(0) + ';';\r\n  });\r\n}\r\n\r\nfunction removeNullUndefined(obj) {\r\n  for (let key in obj) {\r\n    if (obj[key] === null || obj[key] === undefined) {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction CustomEmojisModal({\r\n  masto,\r\n  instance,\r\n  onClose = () => {},\r\n  onSelect = () => {},\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const customEmojisList = useRef([]);\r\n  const [customEmojis, setCustomEmojis] = useState({});\r\n  const recentlyUsedCustomEmojis = useMemo(\r\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\r\n  );\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const emojis = await masto.v1.customEmojis.list();\r\n        // Group emojis by category\r\n        const emojisCat = {\r\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\r\n            emojis.find((e) => e.shortcode === emoji.shortcode),\r\n          ),\r\n        };\r\n        const othersCat = [];\r\n        emojis.forEach((emoji) => {\r\n          if (!emoji.visibleInPicker) return;\r\n          customEmojisList.current?.push?.(emoji);\r\n          if (!emoji.category) {\r\n            othersCat.push(emoji);\r\n            return;\r\n          }\r\n          if (!emojisCat[emoji.category]) {\r\n            emojisCat[emoji.category] = [];\r\n          }\r\n          emojisCat[emoji.category].push(emoji);\r\n        });\r\n        if (othersCat.length) {\r\n          emojisCat['--others--'] = othersCat;\r\n        }\r\n        setCustomEmojis(emojisCat);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <b>Custom emojis</b>{' '}\r\n        {uiState === 'loading' ? (\r\n          <Loader />\r\n        ) : (\r\n          <small class=\"insignificant\"> • {instance}</small>\r\n        )}\r\n      </header>\r\n      <main>\r\n        <div class=\"custom-emojis-list\">\r\n          {uiState === 'error' && (\r\n            <div class=\"ui-state\">\r\n              <p>Error loading custom emojis</p>\r\n            </div>\r\n          )}\r\n          {uiState === 'default' &&\r\n            Object.entries(customEmojis).map(\r\n              ([category, emojis]) =>\r\n                !!emojis?.length && (\r\n                  <>\r\n                    <div class=\"section-header\">\r\n                      {{\r\n                        '--recent--': 'Recently used',\r\n                        '--others--': 'Others',\r\n                      }[category] || category}\r\n                    </div>\r\n                    <section>\r\n                      {emojis.map((emoji) => (\r\n                        <button\r\n                          key={emoji}\r\n                          type=\"button\"\r\n                          class=\"plain4\"\r\n                          onClick={() => {\r\n                            onClose();\r\n                            requestAnimationFrame(() => {\r\n                              onSelect(`:${emoji.shortcode}:`);\r\n                            });\r\n                            let recentlyUsedCustomEmojis =\r\n                              store.account.get('recentlyUsedCustomEmojis') ||\r\n                              [];\r\n                            const recentlyUsedEmojiIndex =\r\n                              recentlyUsedCustomEmojis.findIndex(\r\n                                (e) => e.shortcode === emoji.shortcode,\r\n                              );\r\n                            if (recentlyUsedEmojiIndex !== -1) {\r\n                              // Move emoji to index 0\r\n                              recentlyUsedCustomEmojis.splice(\r\n                                recentlyUsedEmojiIndex,\r\n                                1,\r\n                              );\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                            } else {\r\n                              recentlyUsedCustomEmojis.unshift(emoji);\r\n                              // Remove unavailable ones\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.filter((e) =>\r\n                                  customEmojisList.current?.find?.(\r\n                                    (emoji) => emoji.shortcode === e.shortcode,\r\n                                  ),\r\n                                );\r\n                              // Limit to 10\r\n                              recentlyUsedCustomEmojis =\r\n                                recentlyUsedCustomEmojis.slice(0, 10);\r\n                            }\r\n\r\n                            // Store back\r\n                            store.account.set(\r\n                              'recentlyUsedCustomEmojis',\r\n                              recentlyUsedCustomEmojis,\r\n                            );\r\n                          }}\r\n                          title={`:${emoji.shortcode}:`}\r\n                        >\r\n                          <picture>\r\n                            {!!emoji.staticUrl && (\r\n                              <source\r\n                                srcset={emoji.staticUrl}\r\n                                media=\"(prefers-reduced-motion: reduce)\"\r\n                              />\r\n                            )}\r\n                            <img\r\n                              class=\"shortcode-emoji\"\r\n                              src={emoji.url || emoji.staticUrl}\r\n                              alt={emoji.shortcode}\r\n                              width=\"16\"\r\n                              height=\"16\"\r\n                              loading=\"lazy\"\r\n                              decoding=\"async\"\r\n                            />\r\n                          </picture>\r\n                        </button>\r\n                      ))}\r\n                    </section>\r\n                  </>\r\n                ),\r\n            )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compose;\r\n","import { useLayoutEffect } from 'preact/hooks';\r\nimport { matchPath } from 'react-router-dom';\r\nimport { subscribeKey } from 'valtio/utils';\r\n\r\nimport states from './states';\r\n\r\nconst { VITE_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\r\n\r\nexport default function useTitle(title, path) {\r\n  function setTitle() {\r\n    const { currentLocation } = states;\r\n    const hasPaths = Array.isArray(path);\r\n    let paths = hasPaths ? path : [];\r\n    // Workaround for matchPath not working for optional path segments\r\n    // https://github.com/remix-run/react-router/discussions/9862\r\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\r\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\r\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\r\n    }\r\n    let matched = false;\r\n    if (paths.length) {\r\n      matched = paths.some((p) => matchPath(p, currentLocation));\r\n    } else if (path) {\r\n      matched = matchPath(path, currentLocation);\r\n    }\r\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\r\n    if (matched) {\r\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const unsub = subscribeKey(states, 'currentLocation', setTitle);\r\n    setTitle();\r\n    return unsub;\r\n  }, [title, path]);\r\n}\r\n"],"file":"assets/useTitle-eda89cd2.js"}